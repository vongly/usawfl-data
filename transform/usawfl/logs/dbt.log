[0m13:59:56.725437 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11325aa80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1134de690>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1134de420>]}


============================== 13:59:56.733458 | a57575bb-f0ea-477e-979a-b18bc41d72ab ==============================
[0m13:59:56.733458 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:59:56.734282 [debug] [MainThread]: running dbt with arguments {'use_colors': 'True', 'indirect_selection': 'eager', 'invocation_command': 'dbt run', 'quiet': 'False', 'write_json': 'True', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'send_anonymous_usage_stats': 'True', 'debug': 'False', 'use_experimental_parser': 'False', 'fail_fast': 'False', 'target_path': 'None', 'no_print': 'None', 'cache_selected_only': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'printer_width': '80', 'version_check': 'True', 'empty': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'warn_error': 'None', 'log_cache_events': 'False', 'static_parser': 'True', 'partial_parse': 'True', 'log_format': 'default', 'introspect': 'True'}
[0m13:59:57.229663 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'a57575bb-f0ea-477e-979a-b18bc41d72ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11355ed80>]}
[0m13:59:57.316958 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'a57575bb-f0ea-477e-979a-b18bc41d72ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1130d38f0>]}
[0m13:59:57.320278 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:59:57.487433 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:59:57.488742 [info ] [MainThread]: Unable to do partial parsing because saved manifest not found. Starting full parse.
[0m13:59:57.489362 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'a57575bb-f0ea-477e-979a-b18bc41d72ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113499a00>]}
[0m13:59:58.993066 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.fct_salesforce
- models.dbt_project
- models.dbt_project.references
[0m13:59:59.005434 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'a57575bb-f0ea-477e-979a-b18bc41d72ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11378c350>]}
[0m13:59:59.088193 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m13:59:59.091575 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m13:59:59.124761 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'a57575bb-f0ea-477e-979a-b18bc41d72ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113a226f0>]}
[0m13:59:59.125601 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:59:59.126091 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a57575bb-f0ea-477e-979a-b18bc41d72ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1139e6de0>]}
[0m13:59:59.128426 [info ] [MainThread]: 
[0m13:59:59.128876 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m13:59:59.129328 [info ] [MainThread]: 
[0m13:59:59.129924 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m13:59:59.136419 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m13:59:59.203261 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m13:59:59.203916 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m13:59:59.204423 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m13:59:59.287575 [debug] [ThreadPool]: SQL status: OK in 0.083 seconds
[0m13:59:59.289246 [debug] [ThreadPool]: On list_memory: Close
[0m13:59:59.290937 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now list_memory_main)
[0m13:59:59.297250 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m13:59:59.297681 [debug] [ThreadPool]: On list_memory_main: BEGIN
[0m13:59:59.298004 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:59:59.300042 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:59:59.300401 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m13:59:59.300783 [debug] [ThreadPool]: On list_memory_main: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_main"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'memory'
  
[0m13:59:59.324210 [debug] [ThreadPool]: SQL status: OK in 0.023 seconds
[0m13:59:59.325820 [debug] [ThreadPool]: On list_memory_main: ROLLBACK
[0m13:59:59.327973 [debug] [ThreadPool]: Failed to rollback 'list_memory_main'
[0m13:59:59.328517 [debug] [ThreadPool]: On list_memory_main: Close
[0m13:59:59.329449 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a57575bb-f0ea-477e-979a-b18bc41d72ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113b9be00>]}
[0m13:59:59.330201 [debug] [MainThread]: Using duckdb connection "master"
[0m13:59:59.330695 [debug] [MainThread]: On master: BEGIN
[0m13:59:59.331161 [debug] [MainThread]: Opening a new connection, currently in state init
[0m13:59:59.333440 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m13:59:59.333893 [debug] [MainThread]: On master: COMMIT
[0m13:59:59.334321 [debug] [MainThread]: Using duckdb connection "master"
[0m13:59:59.334719 [debug] [MainThread]: On master: COMMIT
[0m13:59:59.335350 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m13:59:59.335776 [debug] [MainThread]: On master: Close
[0m13:59:59.339966 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m13:59:59.340869 [info ] [Thread-1 (]: 1 of 7 START sql view model main.states ........................................ [RUN]
[0m13:59:59.341598 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_main, now model.usawfl.states)
[0m13:59:59.342095 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m13:59:59.352297 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m13:59:59.353478 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m13:59:59.390885 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m13:59:59.392032 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:59:59.392450 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m13:59:59.392829 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:59:59.394628 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:59:59.395073 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:59:59.395636 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
  create view memory."main"."states__dbt_tmp" as (
    select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
  );

[0m13:59:59.397564 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:59:59.404766 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:59:59.405289 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter view memory."main"."states__dbt_tmp" rename to "states"
[0m13:59:59.407777 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:59:59.419922 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m13:59:59.420469 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:59:59.420865 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m13:59:59.421660 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:59:59.427867 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:59:59.428369 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop view if exists memory."main"."states__dbt_backup" cascade
    
[0m13:59:59.429183 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:59:59.431836 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m13:59:59.434127 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a57575bb-f0ea-477e-979a-b18bc41d72ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f1a960>]}
[0m13:59:59.435002 [info ] [Thread-1 (]: 1 of 7 OK created sql view model main.states ................................... [[32mOK[0m in 0.09s]
[0m13:59:59.435844 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m13:59:59.436362 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m13:59:59.436913 [info ] [Thread-1 (]: 2 of 7 START sql view model main.tournaments ................................... [RUN]
[0m13:59:59.437595 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m13:59:59.438038 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m13:59:59.442662 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m13:59:59.443757 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m13:59:59.447485 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m13:59:59.449250 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:59:59.449990 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m13:59:59.450564 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:59:59.452448 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:59:59.452896 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:59:59.453460 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
  create view memory."main"."tournaments__dbt_tmp" as (
    with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m13:59:59.974073 [debug] [Thread-1 (]: SQL status: OK in 0.520 seconds
[0m13:59:59.980330 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:59:59.981120 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter view memory."main"."tournaments__dbt_tmp" rename to "tournaments"
[0m13:59:59.982889 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:59:59.985530 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m13:59:59.987162 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:59:59.987771 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m13:59:59.988989 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:59:59.992494 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:59:59.993007 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop view if exists memory."main"."tournaments__dbt_backup" cascade
    
[0m13:59:59.993871 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:59:59.995568 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m13:59:59.996280 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a57575bb-f0ea-477e-979a-b18bc41d72ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114047b30>]}
[0m13:59:59.997066 [info ] [Thread-1 (]: 2 of 7 OK created sql view model main.tournaments .............................. [[32mOK[0m in 0.56s]
[0m13:59:59.997902 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m13:59:59.998449 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m13:59:59.999068 [info ] [Thread-1 (]: 3 of 7 START sql view model main.contacts ...................................... [RUN]
[0m13:59:59.999874 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m14:00:00.000498 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m14:00:00.014416 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m14:00:00.015317 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m14:00:00.019118 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m14:00:00.020083 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:00:00.020527 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m14:00:00.021059 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:00:00.023858 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m14:00:00.024415 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:00:00.025109 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
  create view memory."main"."contacts__dbt_tmp" as (
    with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."main"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."main"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m14:00:00.797348 [debug] [Thread-1 (]: SQL status: OK in 0.771 seconds
[0m14:00:00.801081 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:00:00.801598 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter view memory."main"."contacts__dbt_tmp" rename to "contacts"
[0m14:00:00.802664 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:00:00.804110 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m14:00:00.804553 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:00:00.804964 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m14:00:00.805903 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:00:00.810523 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:00:00.811052 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop view if exists memory."main"."contacts__dbt_backup" cascade
    
[0m14:00:00.811865 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:00:00.813291 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m14:00:00.813872 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a57575bb-f0ea-477e-979a-b18bc41d72ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1140c4a70>]}
[0m14:00:00.814526 [info ] [Thread-1 (]: 3 of 7 OK created sql view model main.contacts ................................. [[32mOK[0m in 0.81s]
[0m14:00:00.815203 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m14:00:00.816011 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m14:00:00.816756 [info ] [Thread-1 (]: 4 of 7 START sql view model main.officials ..................................... [RUN]
[0m14:00:00.817401 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m14:00:00.817842 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m14:00:00.822479 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m14:00:00.823314 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m14:00:00.826744 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m14:00:00.828562 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:00:00.829145 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m14:00:00.829587 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:00:00.831302 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:00:00.831736 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:00:00.832335 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
  create view memory."main"."officials__dbt_tmp" as (
    with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."main"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."main"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m14:00:02.695089 [debug] [Thread-1 (]: SQL status: OK in 1.862 seconds
[0m14:00:02.698664 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:00:02.699172 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter view memory."main"."officials__dbt_tmp" rename to "officials"
[0m14:00:02.700252 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:00:02.701763 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m14:00:02.702212 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:00:02.702625 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m14:00:02.703530 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:00:02.706205 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:00:02.706695 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop view if exists memory."main"."officials__dbt_backup" cascade
    
[0m14:00:02.707520 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:00:02.709146 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m14:00:02.709794 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a57575bb-f0ea-477e-979a-b18bc41d72ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114083710>]}
[0m14:00:02.710498 [info ] [Thread-1 (]: 4 of 7 OK created sql view model main.officials ................................ [[32mOK[0m in 1.89s]
[0m14:00:02.711169 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m14:00:02.711621 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m14:00:02.712198 [info ] [Thread-1 (]: 5 of 7 START sql view model main.teams ......................................... [RUN]
[0m14:00:02.712728 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m14:00:02.713153 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m14:00:02.717704 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m14:00:02.718528 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m14:00:02.721911 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m14:00:02.722727 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:00:02.723162 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m14:00:02.723546 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:00:02.725306 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:00:02.725732 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:00:02.726220 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
  create view memory."main"."teams__dbt_tmp" as (
    with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."main"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m14:00:03.781614 [debug] [Thread-1 (]: SQL status: OK in 1.055 seconds
[0m14:00:03.785403 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:00:03.786085 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter view memory."main"."teams__dbt_tmp" rename to "teams"
[0m14:00:03.787298 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:00:03.788862 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m14:00:03.789331 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:00:03.789726 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m14:00:03.790810 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:00:03.793716 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:00:03.794176 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop view if exists memory."main"."teams__dbt_backup" cascade
    
[0m14:00:03.794950 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:00:03.796398 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m14:00:03.796994 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a57575bb-f0ea-477e-979a-b18bc41d72ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1140d73b0>]}
[0m14:00:03.797711 [info ] [Thread-1 (]: 5 of 7 OK created sql view model main.teams .................................... [[32mOK[0m in 1.08s]
[0m14:00:03.798405 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m14:00:03.799081 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m14:00:03.799682 [info ] [Thread-1 (]: 6 of 7 START sql view model main.members ....................................... [RUN]
[0m14:00:03.800442 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m14:00:03.800982 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m14:00:03.805606 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m14:00:03.806560 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m14:00:03.810120 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m14:00:03.811022 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:00:03.811437 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m14:00:03.811825 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:00:03.813702 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:00:03.814388 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:00:03.815384 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
  create view memory."main"."members__dbt_tmp" as (
    with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m14:00:06.298592 [debug] [Thread-1 (]: SQL status: OK in 2.482 seconds
[0m14:00:06.304102 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:00:06.304659 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter view memory."main"."members__dbt_tmp" rename to "members"
[0m14:00:06.305634 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:00:06.307046 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m14:00:06.307463 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:00:06.307852 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m14:00:06.308569 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:00:06.310962 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:00:06.311422 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop view if exists memory."main"."members__dbt_backup" cascade
    
[0m14:00:06.312161 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:00:06.313629 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m14:00:06.314273 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a57575bb-f0ea-477e-979a-b18bc41d72ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1140f5310>]}
[0m14:00:06.314975 [info ] [Thread-1 (]: 6 of 7 OK created sql view model main.members .................................. [[32mOK[0m in 2.51s]
[0m14:00:06.315730 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m14:00:06.316202 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m14:00:06.316717 [info ] [Thread-1 (]: 7 of 7 START sql view model main.stats ......................................... [RUN]
[0m14:00:06.317309 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m14:00:06.317736 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m14:00:06.324071 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m14:00:06.325288 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m14:00:06.329107 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m14:00:06.330328 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:00:06.331054 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m14:00:06.331452 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:00:06.333148 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:00:06.333616 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:00:06.334593 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
  create view memory."main"."stats__dbt_tmp" as (
    with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
  );

[0m14:00:08.545463 [debug] [Thread-1 (]: SQL status: OK in 2.210 seconds
[0m14:00:08.548666 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:00:08.549403 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter view memory."main"."stats__dbt_tmp" rename to "stats"
[0m14:00:08.551337 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:00:08.552814 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m14:00:08.553245 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:00:08.553638 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m14:00:08.554880 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:00:08.557593 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:00:08.558049 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop view if exists memory."main"."stats__dbt_backup" cascade
    
[0m14:00:08.558812 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:00:08.560237 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m14:00:08.560830 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a57575bb-f0ea-477e-979a-b18bc41d72ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f74380>]}
[0m14:00:08.561495 [info ] [Thread-1 (]: 7 of 7 OK created sql view model main.stats .................................... [[32mOK[0m in 2.24s]
[0m14:00:08.562171 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m14:00:08.563381 [debug] [MainThread]: Using duckdb connection "master"
[0m14:00:08.563763 [debug] [MainThread]: On master: BEGIN
[0m14:00:08.564099 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m14:00:08.565758 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m14:00:08.566561 [debug] [MainThread]: On master: COMMIT
[0m14:00:08.567026 [debug] [MainThread]: Using duckdb connection "master"
[0m14:00:08.567738 [debug] [MainThread]: On master: COMMIT
[0m14:00:08.568577 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m14:00:08.568996 [debug] [MainThread]: On master: Close
[0m14:00:08.569475 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:00:08.569800 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m14:00:08.570228 [info ] [MainThread]: 
[0m14:00:08.570621 [info ] [MainThread]: Finished running 7 view models in 0 hours 0 minutes and 9.44 seconds (9.44s).
[0m14:00:08.572661 [debug] [MainThread]: Command end result
[0m14:00:08.598446 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m14:00:08.601938 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m14:00:08.609284 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m14:00:08.609691 [info ] [MainThread]: 
[0m14:00:08.610114 [info ] [MainThread]: [32mCompleted successfully[0m
[0m14:00:08.610519 [info ] [MainThread]: 
[0m14:00:08.610917 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m14:00:08.614199 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 11.983185, "process_in_blocks": "0", "process_kernel_time": 0.716144, "process_mem_max_rss": "174129152", "process_out_blocks": "0", "process_user_time": 5.187396}
[0m14:00:08.614795 [debug] [MainThread]: Command `dbt run` succeeded at 14:00:08.614671 after 11.98 seconds
[0m14:00:08.615267 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1134de420>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11325aa80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1136cc170>]}
[0m14:00:08.615701 [debug] [MainThread]: Flushing usage events
[0m14:00:09.119810 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m14:10:10.454136 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10faa1310>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fd5dd00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11011a330>]}


============================== 14:10:10.460068 | 31d1cb98-19b3-4533-ac4c-063c52a107f1 ==============================
[0m14:10:10.460068 [info ] [MainThread]: Running with dbt=1.10.9
[0m14:10:10.460951 [debug] [MainThread]: running dbt with arguments {'invocation_command': 'dbt run', 'use_colors': 'True', 'warn_error': 'None', 'quiet': 'False', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'version_check': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'static_parser': 'True', 'empty': 'False', 'no_print': 'None', 'log_cache_events': 'False', 'partial_parse': 'True', 'introspect': 'True', 'printer_width': '80', 'indirect_selection': 'eager', 'target_path': 'None', 'log_format': 'default', 'cache_selected_only': 'False', 'fail_fast': 'False', 'use_experimental_parser': 'False', 'write_json': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'send_anonymous_usage_stats': 'True', 'debug': 'False'}
[0m14:10:10.910089 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '31d1cb98-19b3-4533-ac4c-063c52a107f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10da108f0>]}
[0m14:10:10.991489 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '31d1cb98-19b3-4533-ac4c-063c52a107f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ff46c30>]}
[0m14:10:10.994572 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m14:10:11.147357 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m14:10:11.255309 [info ] [MainThread]: Unable to do partial parsing because a project config has changed
[0m14:10:11.255936 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '31d1cb98-19b3-4533-ac4c-063c52a107f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103796a0>]}
[0m14:10:12.732953 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.references
- models.dbt_project
- models.dbt_project.fct_salesforce
[0m14:10:12.745133 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '31d1cb98-19b3-4533-ac4c-063c52a107f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1107b6ab0>]}
[0m14:10:12.826031 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m14:10:12.829197 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m14:10:12.865437 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '31d1cb98-19b3-4533-ac4c-063c52a107f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1107b68d0>]}
[0m14:10:12.866065 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m14:10:12.866535 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '31d1cb98-19b3-4533-ac4c-063c52a107f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110854230>]}
[0m14:10:12.869029 [info ] [MainThread]: 
[0m14:10:12.869475 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m14:10:12.869889 [info ] [MainThread]: 
[0m14:10:12.870517 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m14:10:12.878049 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m14:10:12.945411 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m14:10:12.945902 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m14:10:12.946274 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:10:13.020579 [debug] [ThreadPool]: SQL status: OK in 0.074 seconds
[0m14:10:13.022168 [debug] [ThreadPool]: On list_memory: Close
[0m14:10:13.023720 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now list_memory_main)
[0m14:10:13.029754 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m14:10:13.030162 [debug] [ThreadPool]: On list_memory_main: BEGIN
[0m14:10:13.030501 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:10:13.032027 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m14:10:13.032395 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m14:10:13.032756 [debug] [ThreadPool]: On list_memory_main: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_main"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'memory'
  
[0m14:10:13.054027 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m14:10:13.055593 [debug] [ThreadPool]: On list_memory_main: ROLLBACK
[0m14:10:13.057550 [debug] [ThreadPool]: Failed to rollback 'list_memory_main'
[0m14:10:13.058057 [debug] [ThreadPool]: On list_memory_main: Close
[0m14:10:13.058844 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '31d1cb98-19b3-4533-ac4c-063c52a107f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10daca4b0>]}
[0m14:10:13.059423 [debug] [MainThread]: Using duckdb connection "master"
[0m14:10:13.059797 [debug] [MainThread]: On master: BEGIN
[0m14:10:13.060149 [debug] [MainThread]: Opening a new connection, currently in state init
[0m14:10:13.061795 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m14:10:13.062197 [debug] [MainThread]: On master: COMMIT
[0m14:10:13.062570 [debug] [MainThread]: Using duckdb connection "master"
[0m14:10:13.062927 [debug] [MainThread]: On master: COMMIT
[0m14:10:13.063488 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m14:10:13.063888 [debug] [MainThread]: On master: Close
[0m14:10:13.067457 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m14:10:13.068143 [info ] [Thread-1 (]: 1 of 7 START sql view model main.states ........................................ [RUN]
[0m14:10:13.068765 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_main, now model.usawfl.states)
[0m14:10:13.069260 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m14:10:13.077913 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m14:10:13.078851 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m14:10:13.113218 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m14:10:13.114236 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:10:13.114658 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m14:10:13.115043 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:13.116676 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:13.117090 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:10:13.117632 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
  create view memory."main"."states__dbt_tmp" as (
    select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
  );

[0m14:10:13.119533 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:13.126529 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:10:13.127028 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter view memory."main"."states__dbt_tmp" rename to "states"
[0m14:10:13.129187 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:13.141193 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m14:10:13.141727 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:10:13.142155 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m14:10:13.142988 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:13.149013 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:10:13.149485 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop view if exists memory."main"."states__dbt_backup" cascade
    
[0m14:10:13.150276 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:13.152963 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m14:10:13.155052 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31d1cb98-19b3-4533-ac4c-063c52a107f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d9f3b00>]}
[0m14:10:13.155782 [info ] [Thread-1 (]: 1 of 7 OK created sql view model main.states ................................... [[32mOK[0m in 0.08s]
[0m14:10:13.156477 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m14:10:13.156940 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m14:10:13.157474 [info ] [Thread-1 (]: 2 of 7 START sql view model main.tournaments ................................... [RUN]
[0m14:10:13.158175 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m14:10:13.158619 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m14:10:13.163815 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m14:10:13.164872 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m14:10:13.169048 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m14:10:13.169955 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:10:13.170369 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m14:10:13.170770 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:13.172826 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:13.173335 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:10:13.173856 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
  create view memory."main"."tournaments__dbt_tmp" as (
    with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m14:10:13.661127 [debug] [Thread-1 (]: SQL status: OK in 0.486 seconds
[0m14:10:13.669674 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:10:13.670521 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter view memory."main"."tournaments__dbt_tmp" rename to "tournaments"
[0m14:10:13.671836 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:13.673745 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m14:10:13.674356 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:10:13.674913 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m14:10:13.675932 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:13.679380 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:10:13.679896 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop view if exists memory."main"."tournaments__dbt_backup" cascade
    
[0m14:10:13.680742 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:13.682477 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m14:10:13.683205 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31d1cb98-19b3-4533-ac4c-063c52a107f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110cd7e00>]}
[0m14:10:13.684004 [info ] [Thread-1 (]: 2 of 7 OK created sql view model main.tournaments .............................. [[32mOK[0m in 0.53s]
[0m14:10:13.684802 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m14:10:13.685426 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m14:10:13.686051 [info ] [Thread-1 (]: 3 of 7 START sql view model main.contacts ...................................... [RUN]
[0m14:10:13.686717 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m14:10:13.687234 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m14:10:13.696403 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m14:10:13.697620 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m14:10:13.701346 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m14:10:13.702266 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:10:13.702707 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m14:10:13.703114 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:13.705248 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:13.705827 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:10:13.706519 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
  create view memory."main"."contacts__dbt_tmp" as (
    with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."main"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."main"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m14:10:14.547158 [debug] [Thread-1 (]: SQL status: OK in 0.840 seconds
[0m14:10:14.550715 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:10:14.551176 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter view memory."main"."contacts__dbt_tmp" rename to "contacts"
[0m14:10:14.552197 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:14.553624 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m14:10:14.554080 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:10:14.554491 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m14:10:14.555560 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:14.558145 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:10:14.558582 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop view if exists memory."main"."contacts__dbt_backup" cascade
    
[0m14:10:14.559304 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:14.560791 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m14:10:14.561425 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31d1cb98-19b3-4533-ac4c-063c52a107f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b8cc20>]}
[0m14:10:14.562147 [info ] [Thread-1 (]: 3 of 7 OK created sql view model main.contacts ................................. [[32mOK[0m in 0.87s]
[0m14:10:14.562816 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m14:10:14.563569 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m14:10:14.564111 [info ] [Thread-1 (]: 4 of 7 START sql view model main.officials ..................................... [RUN]
[0m14:10:14.564710 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m14:10:14.565138 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m14:10:14.570675 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m14:10:14.571771 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m14:10:14.575152 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m14:10:14.575941 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:10:14.576359 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m14:10:14.576743 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:14.578327 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:14.578736 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:10:14.579306 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
  create view memory."main"."officials__dbt_tmp" as (
    with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."main"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."main"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m14:10:16.439267 [debug] [Thread-1 (]: SQL status: OK in 1.859 seconds
[0m14:10:16.444190 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:10:16.444681 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter view memory."main"."officials__dbt_tmp" rename to "officials"
[0m14:10:16.445697 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:16.447111 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m14:10:16.447557 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:10:16.447970 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m14:10:16.448805 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:16.451364 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:10:16.451809 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop view if exists memory."main"."officials__dbt_backup" cascade
    
[0m14:10:16.452551 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:16.454116 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m14:10:16.454760 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31d1cb98-19b3-4533-ac4c-063c52a107f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b7eea0>]}
[0m14:10:16.455534 [info ] [Thread-1 (]: 4 of 7 OK created sql view model main.officials ................................ [[32mOK[0m in 1.89s]
[0m14:10:16.456306 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m14:10:16.456764 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m14:10:16.457409 [info ] [Thread-1 (]: 5 of 7 START sql view model main.teams ......................................... [RUN]
[0m14:10:16.457956 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m14:10:16.458377 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m14:10:16.462335 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m14:10:16.463646 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m14:10:16.470129 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m14:10:16.471284 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:10:16.471981 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m14:10:16.472432 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:16.474164 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:16.474588 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:10:16.475072 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
  create view memory."main"."teams__dbt_tmp" as (
    with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."main"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m14:10:17.445632 [debug] [Thread-1 (]: SQL status: OK in 0.970 seconds
[0m14:10:17.449200 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:10:17.449677 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter view memory."main"."teams__dbt_tmp" rename to "teams"
[0m14:10:17.450555 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:17.451966 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m14:10:17.452413 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:10:17.452826 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m14:10:17.453622 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:17.456264 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:10:17.456738 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop view if exists memory."main"."teams__dbt_backup" cascade
    
[0m14:10:17.457436 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:17.458867 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m14:10:17.459487 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31d1cb98-19b3-4533-ac4c-063c52a107f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110d3b2f0>]}
[0m14:10:17.460175 [info ] [Thread-1 (]: 5 of 7 OK created sql view model main.teams .................................... [[32mOK[0m in 1.00s]
[0m14:10:17.460846 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m14:10:17.461612 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m14:10:17.462203 [info ] [Thread-1 (]: 6 of 7 START sql view model main.members ....................................... [RUN]
[0m14:10:17.462730 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m14:10:17.463148 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m14:10:17.468073 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m14:10:17.469255 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m14:10:17.473137 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m14:10:17.474204 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:10:17.474777 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m14:10:17.475208 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:17.477308 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:17.477890 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:10:17.478444 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
  create view memory."main"."members__dbt_tmp" as (
    with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m14:10:19.905831 [debug] [Thread-1 (]: SQL status: OK in 2.427 seconds
[0m14:10:19.909065 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:10:19.909485 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter view memory."main"."members__dbt_tmp" rename to "members"
[0m14:10:19.910294 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:19.911609 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m14:10:19.912049 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:10:19.912441 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m14:10:19.913165 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:19.915559 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:10:19.915982 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop view if exists memory."main"."members__dbt_backup" cascade
    
[0m14:10:19.916666 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:19.918065 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m14:10:19.918674 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31d1cb98-19b3-4533-ac4c-063c52a107f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110d07680>]}
[0m14:10:19.919358 [info ] [Thread-1 (]: 6 of 7 OK created sql view model main.members .................................. [[32mOK[0m in 2.46s]
[0m14:10:19.920021 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m14:10:19.920478 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m14:10:19.920991 [info ] [Thread-1 (]: 7 of 7 START sql view model main.stats ......................................... [RUN]
[0m14:10:19.921557 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m14:10:19.921987 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m14:10:19.927796 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m14:10:19.928877 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m14:10:19.932660 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m14:10:19.933566 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:10:19.933980 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m14:10:19.934363 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:19.935998 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:19.936416 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:10:19.937410 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
  create view memory."main"."stats__dbt_tmp" as (
    with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
  );

[0m14:10:22.009904 [debug] [Thread-1 (]: SQL status: OK in 2.071 seconds
[0m14:10:22.013224 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:10:22.013714 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter view memory."main"."stats__dbt_tmp" rename to "stats"
[0m14:10:22.015013 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:22.016662 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m14:10:22.017164 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:10:22.017574 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m14:10:22.019022 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:22.023291 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:10:22.023799 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop view if exists memory."main"."stats__dbt_backup" cascade
    
[0m14:10:22.024598 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:22.026146 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m14:10:22.026848 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31d1cb98-19b3-4533-ac4c-063c52a107f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110d67e00>]}
[0m14:10:22.027542 [info ] [Thread-1 (]: 7 of 7 OK created sql view model main.stats .................................... [[32mOK[0m in 2.11s]
[0m14:10:22.028230 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m14:10:22.029491 [debug] [MainThread]: Using duckdb connection "master"
[0m14:10:22.029900 [debug] [MainThread]: On master: BEGIN
[0m14:10:22.030234 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m14:10:22.031938 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m14:10:22.032389 [debug] [MainThread]: On master: COMMIT
[0m14:10:22.032758 [debug] [MainThread]: Using duckdb connection "master"
[0m14:10:22.033100 [debug] [MainThread]: On master: COMMIT
[0m14:10:22.033700 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m14:10:22.034642 [debug] [MainThread]: On master: Close
[0m14:10:22.035211 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:10:22.035781 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m14:10:22.036399 [info ] [MainThread]: 
[0m14:10:22.037005 [info ] [MainThread]: Finished running 7 view models in 0 hours 0 minutes and 9.17 seconds (9.17s).
[0m14:10:22.039283 [debug] [MainThread]: Command end result
[0m14:10:22.063614 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m14:10:22.067554 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m14:10:22.076493 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m14:10:22.076951 [info ] [MainThread]: 
[0m14:10:22.077429 [info ] [MainThread]: [32mCompleted successfully[0m
[0m14:10:22.077909 [info ] [MainThread]: 
[0m14:10:22.078443 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m14:10:22.082422 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 11.721787, "process_in_blocks": "0", "process_kernel_time": 0.527386, "process_mem_max_rss": "175095808", "process_out_blocks": "0", "process_user_time": 4.953237}
[0m14:10:22.083745 [debug] [MainThread]: Command `dbt run` succeeded at 14:10:22.083438 after 11.72 seconds
[0m14:10:22.085152 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ffee510>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f39b410>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ff27680>]}
[0m14:10:22.086450 [debug] [MainThread]: Flushing usage events
[0m14:10:22.586936 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m14:10:30.872192 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104924380>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1084ee630>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1084ee390>]}


============================== 14:10:30.877195 | eaf7cbbb-6dd6-46fd-8d74-5e4c1a498ef2 ==============================
[0m14:10:30.877195 [info ] [MainThread]: Running with dbt=1.10.9
[0m14:10:30.877875 [debug] [MainThread]: running dbt with arguments {'version_check': 'True', 'write_json': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'static_parser': 'True', 'introspect': 'True', 'warn_error': 'None', 'send_anonymous_usage_stats': 'True', 'debug': 'False', 'target_path': 'None', 'partial_parse': 'True', 'log_cache_events': 'False', 'use_colors': 'True', 'fail_fast': 'False', 'no_print': 'None', 'printer_width': '80', 'quiet': 'False', 'cache_selected_only': 'False', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'invocation_command': 'dbt run --target prod', 'empty': 'False', 'use_experimental_parser': 'False', 'indirect_selection': 'eager', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_format': 'default'}
[0m14:10:31.183006 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'eaf7cbbb-6dd6-46fd-8d74-5e4c1a498ef2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10858c230>]}
[0m14:10:31.262690 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'eaf7cbbb-6dd6-46fd-8d74-5e4c1a498ef2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105e9e3f0>]}
[0m14:10:31.264626 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m14:10:31.418611 [debug] [MainThread]: checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, vars: {}, profile: , target: prod, version: 1.10.9
[0m14:10:31.514943 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m14:10:31.515495 [debug] [MainThread]: previous checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, current checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23
[0m14:10:31.515914 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'eaf7cbbb-6dd6-46fd-8d74-5e4c1a498ef2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107e710a0>]}
[0m14:10:32.992335 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.references
- models.dbt_project
- models.dbt_project.fct_salesforce
[0m14:10:33.006077 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'eaf7cbbb-6dd6-46fd-8d74-5e4c1a498ef2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1089b1d30>]}
[0m14:10:33.087098 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m14:10:33.089543 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m14:10:33.106108 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'eaf7cbbb-6dd6-46fd-8d74-5e4c1a498ef2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108c21e20>]}
[0m14:10:33.106667 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m14:10:33.107072 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'eaf7cbbb-6dd6-46fd-8d74-5e4c1a498ef2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1084d12e0>]}
[0m14:10:33.109261 [info ] [MainThread]: 
[0m14:10:33.109745 [info ] [MainThread]: Concurrency: 1 threads (target='prod')
[0m14:10:33.110129 [info ] [MainThread]: 
[0m14:10:33.110713 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m14:10:33.118011 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m14:10:33.168049 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m14:10:33.168518 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m14:10:33.168880 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:10:33.211981 [debug] [ThreadPool]: SQL status: OK in 0.043 seconds
[0m14:10:33.213661 [debug] [ThreadPool]: On list_memory: Close
[0m14:10:33.215303 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now list_memory_main)
[0m14:10:33.221859 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m14:10:33.222289 [debug] [ThreadPool]: On list_memory_main: BEGIN
[0m14:10:33.222627 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:10:33.224194 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m14:10:33.224597 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m14:10:33.224965 [debug] [ThreadPool]: On list_memory_main: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_main"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'memory'
  
[0m14:10:33.242796 [debug] [ThreadPool]: SQL status: OK in 0.017 seconds
[0m14:10:33.244322 [debug] [ThreadPool]: On list_memory_main: ROLLBACK
[0m14:10:33.245670 [debug] [ThreadPool]: Failed to rollback 'list_memory_main'
[0m14:10:33.246063 [debug] [ThreadPool]: On list_memory_main: Close
[0m14:10:33.246758 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'eaf7cbbb-6dd6-46fd-8d74-5e4c1a498ef2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105e9e810>]}
[0m14:10:33.247307 [debug] [MainThread]: Using duckdb connection "master"
[0m14:10:33.247670 [debug] [MainThread]: On master: BEGIN
[0m14:10:33.248012 [debug] [MainThread]: Opening a new connection, currently in state init
[0m14:10:33.249565 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m14:10:33.249980 [debug] [MainThread]: On master: COMMIT
[0m14:10:33.250356 [debug] [MainThread]: Using duckdb connection "master"
[0m14:10:33.250703 [debug] [MainThread]: On master: COMMIT
[0m14:10:33.251283 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m14:10:33.251661 [debug] [MainThread]: On master: Close
[0m14:10:33.253866 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m14:10:33.254503 [info ] [Thread-1 (]: 1 of 7 START sql view model main.states ........................................ [RUN]
[0m14:10:33.255101 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_main, now model.usawfl.states)
[0m14:10:33.255552 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m14:10:33.263832 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m14:10:33.264671 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m14:10:33.301715 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m14:10:33.302661 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:10:33.303106 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m14:10:33.303539 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:33.305398 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:33.305876 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:10:33.306461 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

  
  create view memory."main"."states__dbt_tmp" as (
    select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
  );

[0m14:10:33.308596 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:33.316050 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:10:33.316532 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */
alter view memory."main"."states__dbt_tmp" rename to "states"
[0m14:10:33.317531 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:33.329185 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m14:10:33.329686 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:10:33.330094 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m14:10:33.331035 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:33.337235 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:10:33.337713 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

      drop view if exists memory."main"."states__dbt_backup" cascade
    
[0m14:10:33.338652 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:33.341465 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m14:10:33.343345 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'eaf7cbbb-6dd6-46fd-8d74-5e4c1a498ef2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105dc7e60>]}
[0m14:10:33.344087 [info ] [Thread-1 (]: 1 of 7 OK created sql view model main.states ................................... [[32mOK[0m in 0.09s]
[0m14:10:33.344793 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m14:10:33.345261 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m14:10:33.345882 [info ] [Thread-1 (]: 2 of 7 START sql view model main.tournaments ................................... [RUN]
[0m14:10:33.346534 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m14:10:33.347158 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m14:10:33.353709 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m14:10:33.354774 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m14:10:33.359464 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m14:10:33.361216 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:10:33.361665 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m14:10:33.362067 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:33.363731 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:33.364258 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:10:33.364810 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

  
  create view memory."main"."tournaments__dbt_tmp" as (
    with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m14:10:33.807756 [debug] [Thread-1 (]: SQL status: OK in 0.442 seconds
[0m14:10:33.816228 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:10:33.817048 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */
alter view memory."main"."tournaments__dbt_tmp" rename to "tournaments"
[0m14:10:33.818323 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:33.820256 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m14:10:33.820925 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:10:33.821506 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m14:10:33.822692 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:33.826005 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:10:33.826510 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

      drop view if exists memory."main"."tournaments__dbt_backup" cascade
    
[0m14:10:33.827346 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:33.829062 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m14:10:33.829795 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'eaf7cbbb-6dd6-46fd-8d74-5e4c1a498ef2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1090d7020>]}
[0m14:10:33.830586 [info ] [Thread-1 (]: 2 of 7 OK created sql view model main.tournaments .............................. [[32mOK[0m in 0.48s]
[0m14:10:33.831384 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m14:10:33.831916 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m14:10:33.832600 [info ] [Thread-1 (]: 3 of 7 START sql view model main.contacts ...................................... [RUN]
[0m14:10:33.833205 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m14:10:33.833701 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m14:10:33.842910 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m14:10:33.843940 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m14:10:33.847391 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m14:10:33.848274 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:10:33.848716 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m14:10:33.849120 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:33.851074 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:33.851575 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:10:33.852328 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

  
  create view memory."main"."contacts__dbt_tmp" as (
    with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."main"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."main"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m14:10:34.569528 [debug] [Thread-1 (]: SQL status: OK in 0.716 seconds
[0m14:10:34.573120 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:10:34.573572 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */
alter view memory."main"."contacts__dbt_tmp" rename to "contacts"
[0m14:10:34.574640 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:34.576059 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m14:10:34.576497 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:10:34.576905 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m14:10:34.577796 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:34.580272 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:10:34.580710 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

      drop view if exists memory."main"."contacts__dbt_backup" cascade
    
[0m14:10:34.581439 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:34.582917 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m14:10:34.583557 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'eaf7cbbb-6dd6-46fd-8d74-5e4c1a498ef2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108fe56d0>]}
[0m14:10:34.584255 [info ] [Thread-1 (]: 3 of 7 OK created sql view model main.contacts ................................. [[32mOK[0m in 0.75s]
[0m14:10:34.585000 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m14:10:34.585864 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m14:10:34.586392 [info ] [Thread-1 (]: 4 of 7 START sql view model main.officials ..................................... [RUN]
[0m14:10:34.587011 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m14:10:34.587432 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m14:10:34.593896 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m14:10:34.595705 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m14:10:34.599850 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m14:10:34.600717 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:10:34.601188 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m14:10:34.601603 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:34.604503 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:34.605277 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:10:34.606338 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

  
  create view memory."main"."officials__dbt_tmp" as (
    with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."main"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."main"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m14:10:36.372169 [debug] [Thread-1 (]: SQL status: OK in 1.765 seconds
[0m14:10:36.375746 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:10:36.376209 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */
alter view memory."main"."officials__dbt_tmp" rename to "officials"
[0m14:10:36.377231 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:36.378657 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m14:10:36.379111 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:10:36.379524 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m14:10:36.380362 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:36.382827 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:10:36.383253 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

      drop view if exists memory."main"."officials__dbt_backup" cascade
    
[0m14:10:36.383969 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:36.385463 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m14:10:36.386101 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'eaf7cbbb-6dd6-46fd-8d74-5e4c1a498ef2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1090f7d70>]}
[0m14:10:36.386772 [info ] [Thread-1 (]: 4 of 7 OK created sql view model main.officials ................................ [[32mOK[0m in 1.80s]
[0m14:10:36.387591 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m14:10:36.388050 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m14:10:36.388689 [info ] [Thread-1 (]: 5 of 7 START sql view model main.teams ......................................... [RUN]
[0m14:10:36.389230 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m14:10:36.389648 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m14:10:36.393654 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m14:10:36.394574 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m14:10:36.399619 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m14:10:36.400504 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:10:36.400924 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m14:10:36.401307 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:36.403047 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:36.403529 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:10:36.404061 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

  
  create view memory."main"."teams__dbt_tmp" as (
    with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."main"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m14:10:37.346766 [debug] [Thread-1 (]: SQL status: OK in 0.942 seconds
[0m14:10:37.351083 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:10:37.351805 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */
alter view memory."main"."teams__dbt_tmp" rename to "teams"
[0m14:10:37.352989 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:37.354792 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m14:10:37.355358 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:10:37.355875 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m14:10:37.356781 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:37.359852 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:10:37.360424 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

      drop view if exists memory."main"."teams__dbt_backup" cascade
    
[0m14:10:37.361367 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:37.363161 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m14:10:37.363915 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'eaf7cbbb-6dd6-46fd-8d74-5e4c1a498ef2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109114650>]}
[0m14:10:37.364773 [info ] [Thread-1 (]: 5 of 7 OK created sql view model main.teams .................................... [[32mOK[0m in 0.97s]
[0m14:10:37.365609 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m14:10:37.366514 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m14:10:37.367246 [info ] [Thread-1 (]: 6 of 7 START sql view model main.members ....................................... [RUN]
[0m14:10:37.367905 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m14:10:37.368477 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m14:10:37.375052 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m14:10:37.376107 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m14:10:37.380772 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m14:10:37.381876 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:10:37.382538 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m14:10:37.383055 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:37.385131 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:37.385683 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:10:37.386327 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

  
  create view memory."main"."members__dbt_tmp" as (
    with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m14:10:39.715821 [debug] [Thread-1 (]: SQL status: OK in 2.328 seconds
[0m14:10:39.719038 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:10:39.719473 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */
alter view memory."main"."members__dbt_tmp" rename to "members"
[0m14:10:39.720348 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:39.721683 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m14:10:39.722101 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:10:39.722491 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m14:10:39.723186 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:39.725520 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:10:39.725965 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

      drop view if exists memory."main"."members__dbt_backup" cascade
    
[0m14:10:39.726643 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:39.728054 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m14:10:39.728666 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'eaf7cbbb-6dd6-46fd-8d74-5e4c1a498ef2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108bd88c0>]}
[0m14:10:39.729335 [info ] [Thread-1 (]: 6 of 7 OK created sql view model main.members .................................. [[32mOK[0m in 2.36s]
[0m14:10:39.729995 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m14:10:39.730444 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m14:10:39.730947 [info ] [Thread-1 (]: 7 of 7 START sql view model main.stats ......................................... [RUN]
[0m14:10:39.731515 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m14:10:39.731932 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m14:10:39.737675 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m14:10:39.738863 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m14:10:39.743112 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m14:10:39.744046 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:10:39.744465 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m14:10:39.744931 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:39.746543 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:39.746955 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:10:39.747789 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

  
  create view memory."main"."stats__dbt_tmp" as (
    with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
  );

[0m14:10:41.841822 [debug] [Thread-1 (]: SQL status: OK in 2.093 seconds
[0m14:10:41.844992 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:10:41.845429 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */
alter view memory."main"."stats__dbt_tmp" rename to "stats"
[0m14:10:41.846651 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:41.848116 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m14:10:41.848543 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:10:41.848935 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m14:10:41.850027 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:41.854066 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:10:41.854557 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

      drop view if exists memory."main"."stats__dbt_backup" cascade
    
[0m14:10:41.855412 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:41.856856 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m14:10:41.857444 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'eaf7cbbb-6dd6-46fd-8d74-5e4c1a498ef2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10912d310>]}
[0m14:10:41.858088 [info ] [Thread-1 (]: 7 of 7 OK created sql view model main.stats .................................... [[32mOK[0m in 2.13s]
[0m14:10:41.858738 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m14:10:41.859903 [debug] [MainThread]: Using duckdb connection "master"
[0m14:10:41.860270 [debug] [MainThread]: On master: BEGIN
[0m14:10:41.860598 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m14:10:41.862107 [debug] [MainThread]: SQL status: OK in 0.001 seconds
[0m14:10:41.862472 [debug] [MainThread]: On master: COMMIT
[0m14:10:41.862819 [debug] [MainThread]: Using duckdb connection "master"
[0m14:10:41.863179 [debug] [MainThread]: On master: COMMIT
[0m14:10:41.863785 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m14:10:41.864629 [debug] [MainThread]: On master: Close
[0m14:10:41.865188 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:10:41.865516 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m14:10:41.865951 [info ] [MainThread]: 
[0m14:10:41.866346 [info ] [MainThread]: Finished running 7 view models in 0 hours 0 minutes and 8.76 seconds (8.76s).
[0m14:10:41.868111 [debug] [MainThread]: Command end result
[0m14:10:41.892519 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m14:10:41.894501 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m14:10:41.901507 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m14:10:41.902044 [info ] [MainThread]: 
[0m14:10:41.902764 [info ] [MainThread]: [32mCompleted successfully[0m
[0m14:10:41.903293 [info ] [MainThread]: 
[0m14:10:41.904132 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m14:10:41.907644 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 11.12113, "process_in_blocks": "0", "process_kernel_time": 0.436195, "process_mem_max_rss": "174653440", "process_out_blocks": "0", "process_user_time": 4.9909}
[0m14:10:41.908717 [debug] [MainThread]: Command `dbt run` succeeded at 14:10:41.908301 after 11.12 seconds
[0m14:10:41.909249 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1084ee690>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10779e900>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10779d5b0>]}
[0m14:10:41.909692 [debug] [MainThread]: Flushing usage events
[0m14:10:42.412877 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m14:10:55.844309 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dfbec60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ec8e630>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ec8e360>]}


============================== 14:10:55.849576 | 0ec73c4c-76ca-4a48-8d0a-b79dcd9cf1a8 ==============================
[0m14:10:55.849576 [info ] [MainThread]: Running with dbt=1.10.9
[0m14:10:55.850284 [debug] [MainThread]: running dbt with arguments {'introspect': 'True', 'static_parser': 'True', 'quiet': 'False', 'printer_width': '80', 'empty': 'False', 'partial_parse': 'True', 'use_experimental_parser': 'False', 'send_anonymous_usage_stats': 'True', 'fail_fast': 'False', 'indirect_selection': 'eager', 'use_colors': 'True', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'no_print': 'None', 'log_cache_events': 'False', 'debug': 'False', 'invocation_command': 'dbt run --target prod', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'version_check': 'True', 'write_json': 'True', 'target_path': 'None', 'warn_error': 'None', 'log_format': 'default', 'cache_selected_only': 'False'}
[0m14:10:56.150826 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '0ec73c4c-76ca-4a48-8d0a-b79dcd9cf1a8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ee7fd10>]}
[0m14:10:56.228841 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '0ec73c4c-76ca-4a48-8d0a-b79dcd9cf1a8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ee53200>]}
[0m14:10:56.230918 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m14:10:56.365079 [debug] [MainThread]: checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, vars: {}, profile: , target: prod, version: 1.10.9
[0m14:10:56.462435 [info ] [MainThread]: Unable to do partial parsing because a project config has changed
[0m14:10:56.463116 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '0ec73c4c-76ca-4a48-8d0a-b79dcd9cf1a8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f175400>]}
[0m14:10:57.867570 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project
- models.dbt_project.fct_salesforce
- models.dbt_project.references
[0m14:10:57.880477 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '0ec73c4c-76ca-4a48-8d0a-b79dcd9cf1a8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f3b48f0>]}
[0m14:10:57.961775 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m14:10:57.964072 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m14:10:57.979897 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '0ec73c4c-76ca-4a48-8d0a-b79dcd9cf1a8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ed2e420>]}
[0m14:10:57.980464 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m14:10:57.980875 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '0ec73c4c-76ca-4a48-8d0a-b79dcd9cf1a8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f32f1d0>]}
[0m14:10:57.983058 [info ] [MainThread]: 
[0m14:10:57.983606 [info ] [MainThread]: Concurrency: 1 threads (target='prod')
[0m14:10:57.984039 [info ] [MainThread]: 
[0m14:10:57.984826 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m14:10:57.992069 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m14:10:58.049148 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m14:10:58.049617 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m14:10:58.049971 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:10:58.093239 [debug] [ThreadPool]: SQL status: OK in 0.043 seconds
[0m14:10:58.094966 [debug] [ThreadPool]: On list_memory: Close
[0m14:10:58.096580 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now list_memory_main)
[0m14:10:58.102748 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m14:10:58.103166 [debug] [ThreadPool]: On list_memory_main: BEGIN
[0m14:10:58.103576 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:10:58.105275 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m14:10:58.105655 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m14:10:58.106011 [debug] [ThreadPool]: On list_memory_main: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_main"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'memory'
  
[0m14:10:58.122180 [debug] [ThreadPool]: SQL status: OK in 0.016 seconds
[0m14:10:58.123926 [debug] [ThreadPool]: On list_memory_main: ROLLBACK
[0m14:10:58.125902 [debug] [ThreadPool]: Failed to rollback 'list_memory_main'
[0m14:10:58.126484 [debug] [ThreadPool]: On list_memory_main: Close
[0m14:10:58.127225 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '0ec73c4c-76ca-4a48-8d0a-b79dcd9cf1a8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ee52a20>]}
[0m14:10:58.127795 [debug] [MainThread]: Using duckdb connection "master"
[0m14:10:58.128173 [debug] [MainThread]: On master: BEGIN
[0m14:10:58.128566 [debug] [MainThread]: Opening a new connection, currently in state init
[0m14:10:58.130472 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m14:10:58.130956 [debug] [MainThread]: On master: COMMIT
[0m14:10:58.131365 [debug] [MainThread]: Using duckdb connection "master"
[0m14:10:58.131861 [debug] [MainThread]: On master: COMMIT
[0m14:10:58.132606 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m14:10:58.133032 [debug] [MainThread]: On master: Close
[0m14:10:58.135406 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m14:10:58.136203 [info ] [Thread-1 (]: 1 of 7 START sql view model main.states ........................................ [RUN]
[0m14:10:58.136873 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_main, now model.usawfl.states)
[0m14:10:58.137330 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m14:10:58.145710 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m14:10:58.146778 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m14:10:58.181565 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m14:10:58.182554 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:10:58.182978 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m14:10:58.183364 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:58.185124 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:58.185562 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:10:58.186167 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

  
  create view memory."main"."states__dbt_tmp" as (
    select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
  );

[0m14:10:58.188338 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:58.195572 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:10:58.196101 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */
alter view memory."main"."states__dbt_tmp" rename to "states"
[0m14:10:58.197073 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:58.208131 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m14:10:58.208768 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:10:58.209170 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m14:10:58.209988 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:58.215855 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:10:58.216318 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

      drop view if exists memory."main"."states__dbt_backup" cascade
    
[0m14:10:58.217131 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:58.219851 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m14:10:58.222085 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0ec73c4c-76ca-4a48-8d0a-b79dcd9cf1a8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f2a49e0>]}
[0m14:10:58.222860 [info ] [Thread-1 (]: 1 of 7 OK created sql view model main.states ................................... [[32mOK[0m in 0.08s]
[0m14:10:58.223557 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m14:10:58.224018 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m14:10:58.224604 [info ] [Thread-1 (]: 2 of 7 START sql view model main.tournaments ................................... [RUN]
[0m14:10:58.225242 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m14:10:58.225666 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m14:10:58.229976 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m14:10:58.230930 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m14:10:58.234300 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m14:10:58.235159 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:10:58.235613 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m14:10:58.235997 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:58.238454 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:58.239146 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:10:58.240063 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

  
  create view memory."main"."tournaments__dbt_tmp" as (
    with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m14:10:58.738641 [debug] [Thread-1 (]: SQL status: OK in 0.498 seconds
[0m14:10:58.746885 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:10:58.747566 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */
alter view memory."main"."tournaments__dbt_tmp" rename to "tournaments"
[0m14:10:58.748850 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:58.750803 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m14:10:58.751395 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:10:58.751943 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m14:10:58.752987 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:58.756110 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:10:58.756613 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

      drop view if exists memory."main"."tournaments__dbt_backup" cascade
    
[0m14:10:58.757481 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:58.759172 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m14:10:58.759888 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0ec73c4c-76ca-4a48-8d0a-b79dcd9cf1a8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f876f00>]}
[0m14:10:58.760680 [info ] [Thread-1 (]: 2 of 7 OK created sql view model main.tournaments .............................. [[32mOK[0m in 0.53s]
[0m14:10:58.761544 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m14:10:58.762097 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m14:10:58.762701 [info ] [Thread-1 (]: 3 of 7 START sql view model main.contacts ...................................... [RUN]
[0m14:10:58.763459 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m14:10:58.763960 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m14:10:58.773381 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m14:10:58.774387 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m14:10:58.777798 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m14:10:58.778675 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:10:58.779112 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m14:10:58.779516 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:58.781155 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:58.781585 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:10:58.782251 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

  
  create view memory."main"."contacts__dbt_tmp" as (
    with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."main"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."main"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m14:10:59.760267 [debug] [Thread-1 (]: SQL status: OK in 0.977 seconds
[0m14:10:59.763979 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:10:59.764521 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */
alter view memory."main"."contacts__dbt_tmp" rename to "contacts"
[0m14:10:59.765566 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:59.767017 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m14:10:59.767472 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:10:59.767883 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m14:10:59.769359 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:10:59.772065 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:10:59.772512 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

      drop view if exists memory."main"."contacts__dbt_backup" cascade
    
[0m14:10:59.773345 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:10:59.774809 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m14:10:59.775397 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0ec73c4c-76ca-4a48-8d0a-b79dcd9cf1a8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f73a570>]}
[0m14:10:59.776119 [info ] [Thread-1 (]: 3 of 7 OK created sql view model main.contacts ................................. [[32mOK[0m in 1.01s]
[0m14:10:59.776832 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m14:10:59.777974 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m14:10:59.778611 [info ] [Thread-1 (]: 4 of 7 START sql view model main.officials ..................................... [RUN]
[0m14:10:59.779179 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m14:10:59.779729 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m14:10:59.785745 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m14:10:59.786684 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m14:10:59.791329 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m14:10:59.792309 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:10:59.792745 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m14:10:59.793146 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:10:59.794828 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:10:59.795264 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:10:59.795838 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

  
  create view memory."main"."officials__dbt_tmp" as (
    with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."main"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."main"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m14:11:01.667472 [debug] [Thread-1 (]: SQL status: OK in 1.871 seconds
[0m14:11:01.671072 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:11:01.671610 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */
alter view memory."main"."officials__dbt_tmp" rename to "officials"
[0m14:11:01.672631 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:11:01.674157 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m14:11:01.674610 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:11:01.675016 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m14:11:01.675901 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:11:01.678481 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:11:01.678913 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

      drop view if exists memory."main"."officials__dbt_backup" cascade
    
[0m14:11:01.679665 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:11:01.681129 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m14:11:01.682013 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0ec73c4c-76ca-4a48-8d0a-b79dcd9cf1a8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f799340>]}
[0m14:11:01.682723 [info ] [Thread-1 (]: 4 of 7 OK created sql view model main.officials ................................ [[32mOK[0m in 1.90s]
[0m14:11:01.683375 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m14:11:01.683816 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m14:11:01.684311 [info ] [Thread-1 (]: 5 of 7 START sql view model main.teams ......................................... [RUN]
[0m14:11:01.684883 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m14:11:01.685304 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m14:11:01.688850 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m14:11:01.689713 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m14:11:01.696730 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m14:11:01.697615 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:11:01.698033 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m14:11:01.698414 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:11:01.700043 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:11:01.700454 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:11:01.701044 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

  
  create view memory."main"."teams__dbt_tmp" as (
    with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."main"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m14:11:02.635306 [debug] [Thread-1 (]: SQL status: OK in 0.934 seconds
[0m14:11:02.639460 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:11:02.640094 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */
alter view memory."main"."teams__dbt_tmp" rename to "teams"
[0m14:11:02.641027 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:11:02.642573 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m14:11:02.643058 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:11:02.643468 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m14:11:02.644350 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:11:02.647979 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:11:02.648493 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

      drop view if exists memory."main"."teams__dbt_backup" cascade
    
[0m14:11:02.649469 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:11:02.651358 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m14:11:02.652068 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0ec73c4c-76ca-4a48-8d0a-b79dcd9cf1a8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f8ac230>]}
[0m14:11:02.652894 [info ] [Thread-1 (]: 5 of 7 OK created sql view model main.teams .................................... [[32mOK[0m in 0.97s]
[0m14:11:02.653774 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m14:11:02.654722 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m14:11:02.655371 [info ] [Thread-1 (]: 6 of 7 START sql view model main.members ....................................... [RUN]
[0m14:11:02.656306 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m14:11:02.656850 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m14:11:02.663341 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m14:11:02.664209 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m14:11:02.667880 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m14:11:02.668905 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:11:02.669491 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m14:11:02.669917 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:11:02.673049 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m14:11:02.673815 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:11:02.674541 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

  
  create view memory."main"."members__dbt_tmp" as (
    with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m14:11:05.051235 [debug] [Thread-1 (]: SQL status: OK in 2.376 seconds
[0m14:11:05.054444 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:11:05.054856 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */
alter view memory."main"."members__dbt_tmp" rename to "members"
[0m14:11:05.055754 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:11:05.057060 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m14:11:05.057506 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:11:05.057876 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m14:11:05.058644 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:11:05.061005 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:11:05.061504 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

      drop view if exists memory."main"."members__dbt_backup" cascade
    
[0m14:11:05.062212 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:11:05.063607 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m14:11:05.064201 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0ec73c4c-76ca-4a48-8d0a-b79dcd9cf1a8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f76f950>]}
[0m14:11:05.064925 [info ] [Thread-1 (]: 6 of 7 OK created sql view model main.members .................................. [[32mOK[0m in 2.41s]
[0m14:11:05.065649 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m14:11:05.066092 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m14:11:05.066594 [info ] [Thread-1 (]: 7 of 7 START sql view model main.stats ......................................... [RUN]
[0m14:11:05.067152 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m14:11:05.067570 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m14:11:05.073494 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m14:11:05.074863 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m14:11:05.078812 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m14:11:05.079750 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:11:05.080156 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m14:11:05.080589 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:11:05.082604 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:11:05.083352 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:11:05.084194 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

  
  create view memory."main"."stats__dbt_tmp" as (
    with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
  );

[0m14:11:07.250936 [debug] [Thread-1 (]: SQL status: OK in 2.166 seconds
[0m14:11:07.254090 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:11:07.254547 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */
alter view memory."main"."stats__dbt_tmp" rename to "stats"
[0m14:11:07.255858 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:11:07.257370 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m14:11:07.257788 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:11:07.258171 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m14:11:07.259262 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:11:07.263554 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:11:07.264026 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

      drop view if exists memory."main"."stats__dbt_backup" cascade
    
[0m14:11:07.264802 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:11:07.266257 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m14:11:07.266856 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0ec73c4c-76ca-4a48-8d0a-b79dcd9cf1a8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f8bdd90>]}
[0m14:11:07.267520 [info ] [Thread-1 (]: 7 of 7 OK created sql view model main.stats .................................... [[32mOK[0m in 2.20s]
[0m14:11:07.268174 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m14:11:07.269466 [debug] [MainThread]: Using duckdb connection "master"
[0m14:11:07.269840 [debug] [MainThread]: On master: BEGIN
[0m14:11:07.270170 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m14:11:07.271774 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m14:11:07.272137 [debug] [MainThread]: On master: COMMIT
[0m14:11:07.272485 [debug] [MainThread]: Using duckdb connection "master"
[0m14:11:07.272819 [debug] [MainThread]: On master: COMMIT
[0m14:11:07.273342 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m14:11:07.273706 [debug] [MainThread]: On master: Close
[0m14:11:07.274763 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:11:07.275257 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m14:11:07.275725 [info ] [MainThread]: 
[0m14:11:07.276307 [info ] [MainThread]: Finished running 7 view models in 0 hours 0 minutes and 9.29 seconds (9.29s).
[0m14:11:07.278711 [debug] [MainThread]: Command end result
[0m14:11:07.307325 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m14:11:07.310003 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m14:11:07.317842 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m14:11:07.318306 [info ] [MainThread]: 
[0m14:11:07.318828 [info ] [MainThread]: [32mCompleted successfully[0m
[0m14:11:07.319303 [info ] [MainThread]: 
[0m14:11:07.319775 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m14:11:07.322961 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 11.568305, "process_in_blocks": "0", "process_kernel_time": 0.460687, "process_mem_max_rss": "176123904", "process_out_blocks": "0", "process_user_time": 4.894434}
[0m14:11:07.323969 [debug] [MainThread]: Command `dbt run` succeeded at 14:11:07.323542 after 11.57 seconds
[0m14:11:07.324824 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e99f2f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f3778c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f8a3b00>]}
[0m14:11:07.325529 [debug] [MainThread]: Flushing usage events
[0m14:11:07.854131 [debug] [MainThread]: An error was encountered while trying to flush usage events
{"data": {"kwargs": "{'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a32aba0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aa0a120>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aa09e80>]}"}, "info": {"category": "", "code": "Z040", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a32aba0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aa0a120>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aa09e80>]}", "name": "SendingEvent", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:06.064635Z"}}
{"data": {"log_version": 3, "version": "=1.10.9"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "info", "msg": "Running with dbt=1.10.9", "name": "MainReportVersion", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:06.072218Z"}}
{"data": {"args": {"cache_selected_only": "False", "debug": "False", "empty": "None", "fail_fast": "False", "indirect_selection": "eager", "introspect": "True", "invocation_command": "dbt run-operation list_schemas_and_models --log-format json", "log_cache_events": "False", "log_format": "json", "log_path": "/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs", "no_print": "None", "partial_parse": "True", "printer_width": "80", "profiles_dir": "/Users/vongly/dev/python/usawfl-data-dbt/usawfl", "quiet": "False", "send_anonymous_usage_stats": "True", "static_parser": "True", "target_path": "None", "use_colors": "True", "use_experimental_parser": "False", "version_check": "True", "warn_error": "None", "warn_error_options": "WarnErrorOptionsV2(error=[], warn=[], silence=[])", "write_json": "True"}}, "info": {"category": "", "code": "A002", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "running dbt with arguments {'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_cache_events': 'False', 'introspect': 'True', 'target_path': 'None', 'fail_fast': 'False', 'use_experimental_parser': 'False', 'static_parser': 'True', 'use_colors': 'True', 'log_format': 'json', 'version_check': 'True', 'printer_width': '80', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'partial_parse': 'True', 'invocation_command': 'dbt run-operation list_schemas_and_models --log-format json', 'quiet': 'False', 'no_print': 'None', 'write_json': 'True', 'debug': 'False', 'warn_error': 'None', 'indirect_selection': 'eager', 'cache_selected_only': 'False', 'send_anonymous_usage_stats': 'True', 'empty': 'None', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl'}", "name": "MainReportArgs", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:06.073196Z"}}
{"data": {"kwargs": "{'category': 'dbt', 'action': 'project_id', 'label': 'f7896683-7ab8-4ee6-9df3-0f111c0e8a8a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aaa8d70>]}"}, "info": {"category": "", "code": "Z040", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'f7896683-7ab8-4ee6-9df3-0f111c0e8a8a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aaa8d70>]}", "name": "SendingEvent", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:06.538179Z"}}
{"data": {"kwargs": "{'category': 'dbt', 'action': 'adapter_info', 'label': 'f7896683-7ab8-4ee6-9df3-0f111c0e8a8a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109c5a240>]}"}, "info": {"category": "", "code": "Z040", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'f7896683-7ab8-4ee6-9df3-0f111c0e8a8a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109c5a240>]}", "name": "SendingEvent", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:06.648706Z"}}
{"data": {"adapter_name": "duckdb", "adapter_version": "=1.9.6"}, "info": {"category": "", "code": "E034", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "info", "msg": "Registered adapter: duckdb=1.9.6", "name": "AdapterRegistered", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:06.653263Z"}}
{"data": {"checksum": "6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23", "profile": "", "target": "", "vars": "{}", "version": "1.10.9"}, "info": {"category": "", "code": "I025", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9", "name": "StateCheckVarsHash", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:06.809231Z"}}
{"data": {"reason": "config vars, config profile, or config target have changed"}, "info": {"category": "", "code": "I024", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "info", "msg": "Unable to do partial parsing because config vars, config profile, or config target have changed", "name": "UnableToPartialParse", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:06.907245Z"}}
{"data": {"msg": "previous checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, current checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e"}, "info": {"category": "", "code": "Z050", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "previous checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, current checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e", "name": "Note", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:06.907905Z"}}
{"data": {"kwargs": "{'category': 'dbt', 'action': 'partial_parser', 'label': 'f7896683-7ab8-4ee6-9df3-0f111c0e8a8a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aee5d60>]}"}, "info": {"category": "", "code": "Z040", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'f7896683-7ab8-4ee6-9df3-0f111c0e8a8a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aee5d60>]}", "name": "SendingEvent", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:06.908494Z"}}
{"data": {"unused_config_paths": ["models.dbt_project", "models.dbt_project.fct_salesforce", "models.dbt_project.references"]}, "info": {"category": "", "code": "I051", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "warn", "msg": "[\u001b[33mWARNING\u001b[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.\nThere are 3 unused configuration paths:\n- models.dbt_project\n- models.dbt_project.fct_salesforce\n- models.dbt_project.references", "name": "UnusedResourceConfigPath", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.401232Z"}}
{"data": {"kwargs": "{'category': 'dbt', 'action': 'load_project', 'label': 'f7896683-7ab8-4ee6-9df3-0f111c0e8a8a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10acbe9f0>]}"}, "info": {"category": "", "code": "Z040", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'f7896683-7ab8-4ee6-9df3-0f111c0e8a8a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10acbe9f0>]}", "name": "SendingEvent", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.413199Z"}}
{"data": {"artifact_path": "/Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json", "artifact_type": "WritableManifest"}, "info": {"category": "", "code": "P001", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json", "name": "ArtifactWritten", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.520553Z"}}
{"data": {"artifact_path": "/Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json", "artifact_type": "SemanticManifest"}, "info": {"category": "", "code": "P001", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json", "name": "ArtifactWritten", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.523709Z"}}
{"data": {"kwargs": "{'category': 'dbt', 'action': 'resource_counts', 'label': 'f7896683-7ab8-4ee6-9df3-0f111c0e8a8a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b12ee70>]}"}, "info": {"category": "", "code": "Z040", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'f7896683-7ab8-4ee6-9df3-0f111c0e8a8a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b12ee70>]}", "name": "SendingEvent", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.547592Z"}}
{"data": {"stat_line": "7 models, 6 sources, 441 macros"}, "info": {"category": "", "code": "W006", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "info", "msg": "Found 7 models, 6 sources, 441 macros", "name": "FoundStats", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.548258Z"}}
{"data": {"kwargs": "{'category': 'dbt', 'action': 'runnable_timing', 'label': 'f7896683-7ab8-4ee6-9df3-0f111c0e8a8a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108472f30>]}"}, "info": {"category": "", "code": "Z040", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'f7896683-7ab8-4ee6-9df3-0f111c0e8a8a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108472f30>]}", "name": "SendingEvent", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.548826Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models", "conn_type": "duckdb"}, "info": {"category": "", "code": "E005", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Acquiring new duckdb connection 'macro_list_schemas_and_models'", "name": "NewConnection", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.549637Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models", "conn_type": "duckdb"}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Using duckdb connection \"macro_list_schemas_and_models\"", "name": "ConnectionUsed", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.550214Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models", "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "On macro_list_schemas_and_models: BEGIN", "name": "SQLQuery", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.550782Z"}}
{"data": {"connection_state": "init"}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Opening a new connection, currently in state init", "name": "NewConnectionOpening", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.551277Z"}}
{"data": {"elapsed": 0.073977895, "query_id": "", "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "SQL status: OK in 0.074 seconds", "name": "SQLQueryStatus", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.625338Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models"}, "info": {"category": "", "code": "E018", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "On macro_list_schemas_and_models: COMMIT", "name": "SQLCommit", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.626042Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models", "conn_type": "duckdb"}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Using duckdb connection \"macro_list_schemas_and_models\"", "name": "ConnectionUsed", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.626689Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models", "sql": "COMMIT"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "On macro_list_schemas_and_models: COMMIT", "name": "SQLQuery", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.627267Z"}}
{"data": {"elapsed": 0.00032860995, "query_id": "", "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "SQL status: OK in 0.000 seconds", "name": "SQLQueryStatus", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.628376Z"}}
{"data": {"msg": "[{\"schema\": \"main\", \"models\": [\"states\", \"tournaments\", \"stats\", \"officials\", \"contacts\", \"teams\", \"members\"]}]"}, "info": {"category": "", "code": "I062", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "info", "msg": "[{\"schema\": \"main\", \"models\": [\"states\", \"tournaments\", \"stats\", \"officials\", \"contacts\", \"teams\", \"members\"]}]", "name": "JinjaLogInfo", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.638285Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models"}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "On macro_list_schemas_and_models: Close", "name": "ConnectionClosed", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.639141Z"}}
{"data": {"artifact_path": "/Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json", "artifact_type": "RunResultsArtifact"}, "info": {"category": "", "code": "P001", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Wrote artifact RunResultsArtifact to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json", "name": "ArtifactWritten", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.648218Z"}}
{"data": {"command_name": "run-operation", "command_success": true, "command_wall_clock_time": 2.686612, "process_in_blocks": "0", "process_kernel_time": 0.570382, "process_mem_max_rss": "129884160", "process_out_blocks": "0", "process_user_time": 4.247085}, "info": {"category": "", "code": "Z051", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Resource report: {\"command_name\": \"run-operation\", \"command_success\": true, \"command_wall_clock_time\": 2.686612, \"process_in_blocks\": \"0\", \"process_kernel_time\": 0.570382, \"process_mem_max_rss\": \"129884160\", \"process_out_blocks\": \"0\", \"process_user_time\": 4.247085}", "name": "ResourceReport", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.651097Z"}}
{"data": {"command": "dbt run-operation", "completed_at": "2025-09-18T22:14:08.652288Z", "elapsed": 2.688128, "success": true}, "info": {"category": "", "code": "Q039", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Command `dbt run-operation` succeeded at 15:14:08.652288 after 2.69 seconds", "name": "CommandCompleted", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.652539Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models"}, "info": {"category": "", "code": "E008", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Connection 'macro_list_schemas_and_models' was properly closed.", "name": "ConnectionClosedInCleanup", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.653420Z"}}
{"data": {"kwargs": "{'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aa09910>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a9c1310>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b12d280>]}"}, "info": {"category": "", "code": "Z040", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aa09910>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a9c1310>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b12d280>]}", "name": "SendingEvent", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.654085Z"}}
{"data": {}, "info": {"category": "", "code": "Z042", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "Flushing usage events", "name": "FlushEvents", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:08.654774Z"}}
{"data": {}, "info": {"category": "", "code": "Z043", "extra": {}, "invocation_id": "f7896683-7ab8-4ee6-9df3-0f111c0e8a8a", "level": "debug", "msg": "An error was encountered while trying to flush usage events", "name": "FlushEventsFailure", "pid": 94431, "thread": "MainThread", "ts": "2025-09-18T22:14:09.085562Z"}}
{"data": {"kwargs": "{'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c6e2300>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cdc22d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cdc2060>]}"}, "info": {"category": "", "code": "Z040", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c6e2300>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cdc22d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cdc2060>]}", "name": "SendingEvent", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:50.082528Z"}}
{"data": {"log_version": 3, "version": "=1.10.9"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "info", "msg": "Running with dbt=1.10.9", "name": "MainReportVersion", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:50.089701Z"}}
{"data": {"args": {"cache_selected_only": "False", "debug": "False", "empty": "None", "fail_fast": "False", "indirect_selection": "eager", "introspect": "True", "invocation_command": "dbt run-operation list_schemas_and_models --log-format json", "log_cache_events": "False", "log_format": "json", "log_path": "/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs", "no_print": "None", "partial_parse": "True", "printer_width": "80", "profiles_dir": "/Users/vongly/dev/python/usawfl-data-dbt/usawfl", "quiet": "False", "send_anonymous_usage_stats": "True", "static_parser": "True", "target_path": "None", "use_colors": "True", "use_experimental_parser": "False", "version_check": "True", "warn_error": "None", "warn_error_options": "WarnErrorOptionsV2(error=[], warn=[], silence=[])", "write_json": "True"}}, "info": {"category": "", "code": "A002", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "running dbt with arguments {'log_format': 'json', 'send_anonymous_usage_stats': 'True', 'introspect': 'True', 'log_cache_events': 'False', 'fail_fast': 'False', 'partial_parse': 'True', 'no_print': 'None', 'debug': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'quiet': 'False', 'printer_width': '80', 'write_json': 'True', 'indirect_selection': 'eager', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'static_parser': 'True', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'version_check': 'True', 'use_colors': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'target_path': 'None', 'use_experimental_parser': 'False', 'empty': 'None', 'invocation_command': 'dbt run-operation list_schemas_and_models --log-format json'}", "name": "MainReportArgs", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:50.090564Z"}}
{"data": {"kwargs": "{'category': 'dbt', 'action': 'project_id', 'label': '80aef075-22ba-4c05-81c4-c8404bd721ad', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c53b620>]}"}, "info": {"category": "", "code": "Z040", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '80aef075-22ba-4c05-81c4-c8404bd721ad', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c53b620>]}", "name": "SendingEvent", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:50.564921Z"}}
{"data": {"kwargs": "{'category': 'dbt', 'action': 'adapter_info', 'label': '80aef075-22ba-4c05-81c4-c8404bd721ad', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c420320>]}"}, "info": {"category": "", "code": "Z040", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '80aef075-22ba-4c05-81c4-c8404bd721ad', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c420320>]}", "name": "SendingEvent", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:50.643335Z"}}
{"data": {"adapter_name": "duckdb", "adapter_version": "=1.9.6"}, "info": {"category": "", "code": "E034", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "info", "msg": "Registered adapter: duckdb=1.9.6", "name": "AdapterRegistered", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:50.647202Z"}}
{"data": {"checksum": "6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23", "profile": "", "target": "", "vars": "{}", "version": "1.10.9"}, "info": {"category": "", "code": "I025", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9", "name": "StateCheckVarsHash", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:50.795916Z"}}
{"data": {"added": 0, "changed": 0, "deleted": 0}, "info": {"category": "", "code": "I040", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.", "name": "PartialParsingEnabled", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:50.962883Z"}}
{"data": {}, "info": {"category": "", "code": "I017", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Partial parsing enabled, no changes found, skipping parsing", "name": "PartialParsingSkipParsing", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:50.963571Z"}}
{"data": {"unused_config_paths": ["models.dbt_project", "models.dbt_project.fct_salesforce", "models.dbt_project.references"]}, "info": {"category": "", "code": "I051", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "warn", "msg": "[\u001b[33mWARNING\u001b[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.\nThere are 3 unused configuration paths:\n- models.dbt_project\n- models.dbt_project.fct_salesforce\n- models.dbt_project.references", "name": "UnusedResourceConfigPath", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:50.973128Z"}}
{"data": {"kwargs": "{'category': 'dbt', 'action': 'load_project', 'label': '80aef075-22ba-4c05-81c4-c8404bd721ad', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d190140>]}"}, "info": {"category": "", "code": "Z040", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '80aef075-22ba-4c05-81c4-c8404bd721ad', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d190140>]}", "name": "SendingEvent", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.007827Z"}}
{"data": {"artifact_path": "/Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json", "artifact_type": "WritableManifest"}, "info": {"category": "", "code": "P001", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json", "name": "ArtifactWritten", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.089188Z"}}
{"data": {"artifact_path": "/Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json", "artifact_type": "SemanticManifest"}, "info": {"category": "", "code": "P001", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json", "name": "ArtifactWritten", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.092821Z"}}
{"data": {"kwargs": "{'category': 'dbt', 'action': 'resource_counts', 'label': '80aef075-22ba-4c05-81c4-c8404bd721ad', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d1fc110>]}"}, "info": {"category": "", "code": "Z040", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '80aef075-22ba-4c05-81c4-c8404bd721ad', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d1fc110>]}", "name": "SendingEvent", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.125544Z"}}
{"data": {"stat_line": "7 models, 6 sources, 441 macros"}, "info": {"category": "", "code": "W006", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "info", "msg": "Found 7 models, 6 sources, 441 macros", "name": "FoundStats", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.126306Z"}}
{"data": {"kwargs": "{'category': 'dbt', 'action': 'runnable_timing', 'label': '80aef075-22ba-4c05-81c4-c8404bd721ad', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cd5b950>]}"}, "info": {"category": "", "code": "Z040", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '80aef075-22ba-4c05-81c4-c8404bd721ad', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cd5b950>]}", "name": "SendingEvent", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.126839Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models", "conn_type": "duckdb"}, "info": {"category": "", "code": "E005", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Acquiring new duckdb connection 'macro_list_schemas_and_models'", "name": "NewConnection", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.127642Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models", "conn_type": "duckdb"}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Using duckdb connection \"macro_list_schemas_and_models\"", "name": "ConnectionUsed", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.128223Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models", "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "On macro_list_schemas_and_models: BEGIN", "name": "SQLQuery", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.128737Z"}}
{"data": {"connection_state": "init"}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Opening a new connection, currently in state init", "name": "NewConnectionOpening", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.129241Z"}}
{"data": {"elapsed": 0.07202358, "query_id": "", "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "SQL status: OK in 0.072 seconds", "name": "SQLQueryStatus", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.201360Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models"}, "info": {"category": "", "code": "E018", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "On macro_list_schemas_and_models: COMMIT", "name": "SQLCommit", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.202109Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models", "conn_type": "duckdb"}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Using duckdb connection \"macro_list_schemas_and_models\"", "name": "ConnectionUsed", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.202676Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models", "sql": "COMMIT"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "On macro_list_schemas_and_models: COMMIT", "name": "SQLQuery", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.203165Z"}}
{"data": {"elapsed": 0.000299608, "query_id": "", "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "SQL status: OK in 0.000 seconds", "name": "SQLQueryStatus", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.203943Z"}}
{"data": {"msg": "[{\"schema\": \"main\", \"models\": [\"states\", \"tournaments\", \"stats\", \"officials\", \"contacts\", \"teams\", \"members\"]}]"}, "info": {"category": "", "code": "I062", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "info", "msg": "[{\"schema\": \"main\", \"models\": [\"states\", \"tournaments\", \"stats\", \"officials\", \"contacts\", \"teams\", \"members\"]}]", "name": "JinjaLogInfo", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.213125Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models"}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "On macro_list_schemas_and_models: Close", "name": "ConnectionClosed", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.213830Z"}}
{"data": {"artifact_path": "/Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json", "artifact_type": "RunResultsArtifact"}, "info": {"category": "", "code": "P001", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Wrote artifact RunResultsArtifact to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json", "name": "ArtifactWritten", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.221585Z"}}
{"data": {"command_name": "run-operation", "command_success": true, "command_wall_clock_time": 1.2364634, "process_in_blocks": "0", "process_kernel_time": 0.538866, "process_mem_max_rss": "125767680", "process_out_blocks": "0", "process_user_time": 2.81717}, "info": {"category": "", "code": "Z051", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Resource report: {\"command_name\": \"run-operation\", \"command_success\": true, \"command_wall_clock_time\": 1.2364634, \"process_in_blocks\": \"0\", \"process_kernel_time\": 0.538866, \"process_mem_max_rss\": \"125767680\", \"process_out_blocks\": \"0\", \"process_user_time\": 2.81717}", "name": "ResourceReport", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.224351Z"}}
{"data": {"command": "dbt run-operation", "completed_at": "2025-09-18T22:18:51.225034Z", "elapsed": 1.2373338, "success": true}, "info": {"category": "", "code": "Q039", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Command `dbt run-operation` succeeded at 15:18:51.225034 after 1.24 seconds", "name": "CommandCompleted", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.225177Z"}}
{"data": {"conn_name": "macro_list_schemas_and_models"}, "info": {"category": "", "code": "E008", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Connection 'macro_list_schemas_and_models' was properly closed.", "name": "ConnectionClosedInCleanup", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.225744Z"}}
{"data": {"kwargs": "{'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cdc22d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d34b470>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d1ffe30>]}"}, "info": {"category": "", "code": "Z040", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cdc22d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d34b470>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d1ffe30>]}", "name": "SendingEvent", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.226313Z"}}
{"data": {}, "info": {"category": "", "code": "Z042", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "Flushing usage events", "name": "FlushEvents", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.226866Z"}}
{"data": {}, "info": {"category": "", "code": "Z043", "extra": {}, "invocation_id": "80aef075-22ba-4c05-81c4-c8404bd721ad", "level": "debug", "msg": "An error was encountered while trying to flush usage events", "name": "FlushEventsFailure", "pid": 98363, "thread": "MainThread", "ts": "2025-09-18T22:18:51.684220Z"}}
[0m15:20:03.792069 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108c211f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10929a840>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10929a5d0>]}


============================== 15:20:03.801238 | a161bf4c-1328-4080-9171-a0a4480f9d51 ==============================
[0m15:20:03.801238 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:20:03.802307 [debug] [MainThread]: running dbt with arguments {'log_cache_events': 'False', 'no_print': 'None', 'use_colors': 'True', 'printer_width': '80', 'target_path': 'None', 'warn_error': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'quiet': 'False', 'static_parser': 'True', 'log_format': 'default', 'version_check': 'True', 'debug': 'False', 'use_experimental_parser': 'False', 'fail_fast': 'False', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'empty': 'None', 'introspect': 'True', 'indirect_selection': 'eager', 'send_anonymous_usage_stats': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'partial_parse': 'True', 'cache_selected_only': 'False', 'write_json': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs'}
[0m15:20:04.265110 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'a161bf4c-1328-4080-9171-a0a4480f9d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109463020>]}
[0m15:20:04.342344 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'a161bf4c-1328-4080-9171-a0a4480f9d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109338d70>]}
[0m15:20:04.346889 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:20:04.496973 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:20:04.686656 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:20:04.687202 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:20:04.698041 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.fct_salesforce
- models.dbt_project.references
- models.dbt_project
[0m15:20:04.733544 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'a161bf4c-1328-4080-9171-a0a4480f9d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109463470>]}
[0m15:20:04.814392 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:20:04.818217 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:20:04.853150 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'a161bf4c-1328-4080-9171-a0a4480f9d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109868650>]}
[0m15:20:04.853735 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:20:04.854151 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a161bf4c-1328-4080-9171-a0a4480f9d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10954adb0>]}
[0m15:20:04.855386 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:20:04.855977 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:20:04.856518 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:20:04.857038 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:20:04.857563 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:20:04.858118 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:20:04.858653 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:20:04.861345 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.1708874, "process_in_blocks": "0", "process_kernel_time": 0.559647, "process_mem_max_rss": "121262080", "process_out_blocks": "0", "process_user_time": 2.915081}
[0m15:20:04.862086 [debug] [MainThread]: Command `dbt ls` succeeded at 15:20:04.861867 after 1.17 seconds
[0m15:20:04.862598 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10929a8a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109853d70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109720560>]}
[0m15:20:04.863035 [debug] [MainThread]: Flushing usage events
[0m15:20:05.292299 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:24:03.221844 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c66f740>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10eeda8d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10eeda660>]}


============================== 15:24:03.228130 | d42800bb-c8ad-44c9-8c16-073e221fc78b ==============================
[0m15:24:03.228130 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:24:03.228909 [debug] [MainThread]: running dbt with arguments {'write_json': 'True', 'warn_error': 'None', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'printer_width': '80', 'version_check': 'True', 'log_cache_events': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_format': 'default', 'empty': 'None', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'partial_parse': 'True', 'cache_selected_only': 'False', 'send_anonymous_usage_stats': 'True', 'quiet': 'False', 'debug': 'False', 'no_print': 'None', 'introspect': 'True', 'target_path': 'None', 'use_colors': 'True', 'indirect_selection': 'eager', 'static_parser': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'use_experimental_parser': 'False', 'fail_fast': 'False'}
[0m15:24:03.547959 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'd42800bb-c8ad-44c9-8c16-073e221fc78b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ebea9f0>]}
[0m15:24:03.631403 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'd42800bb-c8ad-44c9-8c16-073e221fc78b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d082cc0>]}
[0m15:24:03.633688 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:24:03.776260 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:24:03.907717 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:24:03.908204 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:24:03.917021 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.fct_salesforce
- models.dbt_project
- models.dbt_project.references
[0m15:24:03.954886 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'd42800bb-c8ad-44c9-8c16-073e221fc78b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f0eaea0>]}
[0m15:24:04.072565 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:24:04.075210 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:24:04.094747 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'd42800bb-c8ad-44c9-8c16-073e221fc78b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f4a8800>]}
[0m15:24:04.095547 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:24:04.096358 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'd42800bb-c8ad-44c9-8c16-073e221fc78b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f192b70>]}
[0m15:24:04.098270 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:24:04.099152 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:24:04.099907 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:24:04.100497 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:24:04.101095 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:24:04.101685 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:24:04.102394 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:24:04.105591 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.9756743, "process_in_blocks": "0", "process_kernel_time": 0.319378, "process_mem_max_rss": "121057280", "process_out_blocks": "0", "process_user_time": 2.461619}
[0m15:24:04.106361 [debug] [MainThread]: Command `dbt ls` succeeded at 15:24:04.106211 after 0.98 seconds
[0m15:24:04.106996 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e3a4ef0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f160920>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f192b70>]}
[0m15:24:04.107622 [debug] [MainThread]: Flushing usage events
[0m15:24:04.627189 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:24:32.314690 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111a12210>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1120ee990>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1120ee720>]}


============================== 15:24:32.320294 | 2941b3b1-d882-4017-8aac-59815663ad35 ==============================
[0m15:24:32.320294 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:24:32.321014 [debug] [MainThread]: running dbt with arguments {'indirect_selection': 'eager', 'partial_parse': 'True', 'empty': 'None', 'no_print': 'None', 'version_check': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'write_json': 'True', 'quiet': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'cache_selected_only': 'False', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True', 'introspect': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'debug': 'False', 'use_colors': 'True', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'log_cache_events': 'False', 'warn_error': 'None', 'static_parser': 'True', 'printer_width': '80', 'fail_fast': 'False', 'use_experimental_parser': 'False'}
[0m15:24:32.618045 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '2941b3b1-d882-4017-8aac-59815663ad35', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11218d5e0>]}
[0m15:24:32.695436 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '2941b3b1-d882-4017-8aac-59815663ad35', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11208b710>]}
[0m15:24:32.697446 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:24:32.846035 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:24:32.970688 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:24:32.971179 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:24:32.980498 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project
- models.dbt_project.references
- models.dbt_project.fct_salesforce
[0m15:24:33.021849 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '2941b3b1-d882-4017-8aac-59815663ad35', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1123a3e60>]}
[0m15:24:33.108293 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:24:33.110795 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:24:33.125651 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '2941b3b1-d882-4017-8aac-59815663ad35', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1126bc770>]}
[0m15:24:33.126255 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:24:33.126662 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '2941b3b1-d882-4017-8aac-59815663ad35', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1123a3f50>]}
[0m15:24:33.128023 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:24:33.128714 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:24:33.129247 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:24:33.129830 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:24:33.130430 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:24:33.130958 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:24:33.131467 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:24:33.136422 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.92974675, "process_in_blocks": "0", "process_kernel_time": 0.306856, "process_mem_max_rss": "121999360", "process_out_blocks": "0", "process_user_time": 2.397858}
[0m15:24:33.137170 [debug] [MainThread]: Command `dbt ls` succeeded at 15:24:33.137017 after 0.93 seconds
[0m15:24:33.137688 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111b13680>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112216300>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1123797f0>]}
[0m15:24:33.138128 [debug] [MainThread]: Flushing usage events
[0m15:24:33.571559 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:25:40.425536 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1115201a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11248a990>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11248a720>]}


============================== 15:25:40.430913 | f1b76360-8c51-4b73-9c8b-d38c28287b83 ==============================
[0m15:25:40.430913 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:25:40.431601 [debug] [MainThread]: running dbt with arguments {'cache_selected_only': 'False', 'static_parser': 'True', 'introspect': 'True', 'debug': 'False', 'target_path': 'None', 'printer_width': '80', 'log_format': 'default', 'warn_error': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'indirect_selection': 'eager', 'use_experimental_parser': 'False', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'log_cache_events': 'False', 'send_anonymous_usage_stats': 'True', 'no_print': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'version_check': 'True', 'use_colors': 'True', 'quiet': 'False', 'empty': 'None', 'fail_fast': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'write_json': 'True', 'partial_parse': 'True'}
[0m15:25:40.731157 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'f1b76360-8c51-4b73-9c8b-d38c28287b83', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111dafc20>]}
[0m15:25:40.808547 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'f1b76360-8c51-4b73-9c8b-d38c28287b83', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11246d2e0>]}
[0m15:25:40.810662 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:25:40.946043 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:25:41.071935 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:25:41.072516 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:25:41.081526 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project
- models.dbt_project.fct_salesforce
- models.dbt_project.references
[0m15:25:41.116837 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'f1b76360-8c51-4b73-9c8b-d38c28287b83', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112860710>]}
[0m15:25:41.200177 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:25:41.202476 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:25:41.217108 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'f1b76360-8c51-4b73-9c8b-d38c28287b83', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112a58500>]}
[0m15:25:41.217705 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:25:41.218107 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'f1b76360-8c51-4b73-9c8b-d38c28287b83', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112860ad0>]}
[0m15:25:41.219313 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:25:41.219871 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:25:41.220394 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:25:41.220890 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:25:41.221380 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:25:41.221878 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:25:41.222414 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:25:41.225030 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.886867, "process_in_blocks": "0", "process_kernel_time": 0.292027, "process_mem_max_rss": "121131008", "process_out_blocks": "0", "process_user_time": 2.349682}
[0m15:25:41.225654 [debug] [MainThread]: Command `dbt ls` succeeded at 15:25:41.225524 after 0.89 seconds
[0m15:25:41.226136 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11248a570>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1128cd0d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112711640>]}
[0m15:25:41.226647 [debug] [MainThread]: Flushing usage events
[0m15:25:41.664795 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:25:58.663723 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109005820>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10985aa20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10985a7b0>]}


============================== 15:25:58.669019 | 95db668a-ba8c-4758-af48-eaae1eebe186 ==============================
[0m15:25:58.669019 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:25:58.669714 [debug] [MainThread]: running dbt with arguments {'write_json': 'True', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'empty': 'None', 'target_path': 'None', 'static_parser': 'True', 'use_colors': 'True', 'cache_selected_only': 'False', 'introspect': 'True', 'quiet': 'False', 'send_anonymous_usage_stats': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'log_format': 'default', 'use_experimental_parser': 'False', 'debug': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'warn_error': 'None', 'version_check': 'True', 'printer_width': '80', 'no_print': 'None', 'fail_fast': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'partial_parse': 'True'}
[0m15:25:58.968591 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '95db668a-ba8c-4758-af48-eaae1eebe186', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109a25f10>]}
[0m15:25:59.047765 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '95db668a-ba8c-4758-af48-eaae1eebe186', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1099285c0>]}
[0m15:25:59.049813 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:25:59.189933 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:25:59.310849 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:25:59.311309 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:25:59.320023 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.fct_salesforce
- models.dbt_project
- models.dbt_project.references
[0m15:25:59.354585 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '95db668a-ba8c-4758-af48-eaae1eebe186', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10983a4e0>]}
[0m15:25:59.436790 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:25:59.439296 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:25:59.453647 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '95db668a-ba8c-4758-af48-eaae1eebe186', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109e287a0>]}
[0m15:25:59.454299 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:25:59.454715 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '95db668a-ba8c-4758-af48-eaae1eebe186', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10995ff50>]}
[0m15:25:59.455968 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:25:59.456533 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:25:59.457044 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:25:59.457541 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:25:59.458035 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:25:59.458529 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:25:59.459024 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:25:59.461580 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.88580316, "process_in_blocks": "0", "process_kernel_time": 0.277279, "process_mem_max_rss": "121049088", "process_out_blocks": "0", "process_user_time": 2.364675}
[0m15:25:59.462193 [debug] [MainThread]: Command `dbt ls` succeeded at 15:25:59.462064 after 0.89 seconds
[0m15:25:59.462688 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10985aa80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109885f70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109b0ede0>]}
[0m15:25:59.463116 [debug] [MainThread]: Flushing usage events
[0m15:25:59.889427 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:26:26.005632 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a757a40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d1ba7e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d1ba5a0>]}


============================== 15:26:26.011049 | 5b2aa5e1-80df-4542-b715-3346dbf85ce1 ==============================
[0m15:26:26.011049 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:26:26.011768 [debug] [MainThread]: running dbt with arguments {'debug': 'False', 'use_experimental_parser': 'False', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'cache_selected_only': 'False', 'use_colors': 'True', 'no_print': 'None', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'printer_width': '80', 'fail_fast': 'False', 'write_json': 'True', 'empty': 'None', 'target_path': 'None', 'quiet': 'False', 'log_format': 'default', 'log_cache_events': 'False', 'send_anonymous_usage_stats': 'True', 'indirect_selection': 'eager', 'static_parser': 'True', 'warn_error': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'partial_parse': 'True', 'version_check': 'True'}
[0m15:26:26.326378 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '5b2aa5e1-80df-4542-b715-3346dbf85ce1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d2bcfb0>]}
[0m15:26:26.405076 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '5b2aa5e1-80df-4542-b715-3346dbf85ce1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d2bc080>]}
[0m15:26:26.407097 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:26:26.541361 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:26:26.665504 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:26:26.666001 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:26:26.675333 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.fct_salesforce
- models.dbt_project
- models.dbt_project.references
[0m15:26:26.710931 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '5b2aa5e1-80df-4542-b715-3346dbf85ce1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d23ac00>]}
[0m15:26:26.794315 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:26:26.796738 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:26:26.811009 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '5b2aa5e1-80df-4542-b715-3346dbf85ce1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d788530>]}
[0m15:26:26.811576 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:26:26.811976 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '5b2aa5e1-80df-4542-b715-3346dbf85ce1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d63a000>]}
[0m15:26:26.813232 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:26:26.813915 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:26:26.814466 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:26:26.814977 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:26:26.815487 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:26:26.815982 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:26:26.816483 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:26:26.818993 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.902537, "process_in_blocks": "0", "process_kernel_time": 0.284548, "process_mem_max_rss": "121188352", "process_out_blocks": "0", "process_user_time": 2.408442}
[0m15:26:26.819640 [debug] [MainThread]: Command `dbt ls` succeeded at 15:26:26.819508 after 0.90 seconds
[0m15:26:26.820121 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c864b00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d441670>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d747d40>]}
[0m15:26:26.820554 [debug] [MainThread]: Flushing usage events
[0m15:26:27.363584 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:27:30.717161 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a90d550>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a952a50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a9527e0>]}


============================== 15:27:30.722365 | 1452b6dc-99e5-4bf4-a3b8-98f1d4c81d48 ==============================
[0m15:27:30.722365 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:27:30.723056 [debug] [MainThread]: running dbt with arguments {'static_parser': 'True', 'write_json': 'True', 'debug': 'False', 'no_print': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'introspect': 'True', 'use_experimental_parser': 'False', 'fail_fast': 'False', 'use_colors': 'True', 'quiet': 'False', 'log_cache_events': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'send_anonymous_usage_stats': 'True', 'indirect_selection': 'eager', 'partial_parse': 'True', 'empty': 'None', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'log_format': 'default', 'version_check': 'True', 'warn_error': 'None', 'cache_selected_only': 'False', 'printer_width': '80', 'target_path': 'None'}
[0m15:27:31.021727 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '1452b6dc-99e5-4bf4-a3b8-98f1d4c81d48', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108250aa0>]}
[0m15:27:31.104962 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '1452b6dc-99e5-4bf4-a3b8-98f1d4c81d48', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109d787a0>]}
[0m15:27:31.107053 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:27:31.249184 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:27:31.380766 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:27:31.381268 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:27:31.390443 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.references
- models.dbt_project.fct_salesforce
- models.dbt_project
[0m15:27:31.427157 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '1452b6dc-99e5-4bf4-a3b8-98f1d4c81d48', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10abdaf00>]}
[0m15:27:31.516134 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:27:31.518566 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:27:31.533647 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '1452b6dc-99e5-4bf4-a3b8-98f1d4c81d48', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ad288f0>]}
[0m15:27:31.534259 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:27:31.534667 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '1452b6dc-99e5-4bf4-a3b8-98f1d4c81d48', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ab3fb60>]}
[0m15:27:31.535896 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:27:31.536450 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:27:31.536951 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:27:31.537437 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:27:31.537926 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:27:31.538582 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:27:31.539155 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:27:31.541808 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.91205174, "process_in_blocks": "0", "process_kernel_time": 0.310784, "process_mem_max_rss": "120623104", "process_out_blocks": "0", "process_user_time": 2.421536}
[0m15:27:31.542443 [debug] [MainThread]: Command `dbt ls` succeeded at 15:27:31.542311 after 0.91 seconds
[0m15:27:31.542935 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a4a9040>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ac07020>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a90d550>]}
[0m15:27:31.543373 [debug] [MainThread]: Flushing usage events
[0m15:27:31.967364 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:27:59.282634 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d9668a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dfe29c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dfe2750>]}


============================== 15:27:59.287751 | 30cf4c05-d6ec-48bc-9336-65cb1cba0168 ==============================
[0m15:27:59.287751 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:27:59.288427 [debug] [MainThread]: running dbt with arguments {'empty': 'None', 'debug': 'False', 'warn_error': 'None', 'no_print': 'None', 'log_cache_events': 'False', 'write_json': 'True', 'fail_fast': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'cache_selected_only': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'use_colors': 'True', 'indirect_selection': 'eager', 'version_check': 'True', 'introspect': 'True', 'static_parser': 'True', 'use_experimental_parser': 'False', 'log_format': 'default', 'printer_width': '80', 'invocation_command': 'dbt ls --resource-type model --output json', 'quiet': 'False', 'target_path': 'None', 'send_anonymous_usage_stats': 'True', 'partial_parse': 'True'}
[0m15:27:59.620334 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '30cf4c05-d6ec-48bc-9336-65cb1cba0168', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0b2630>]}
[0m15:27:59.701186 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '30cf4c05-d6ec-48bc-9336-65cb1cba0168', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e094950>]}
[0m15:27:59.703105 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:27:59.840244 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:27:59.975421 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:27:59.975936 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:27:59.985492 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.references
- models.dbt_project
- models.dbt_project.fct_salesforce
[0m15:28:00.027133 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '30cf4c05-d6ec-48bc-9336-65cb1cba0168', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e3b4fb0>]}
[0m15:28:00.123288 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:28:00.125752 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:28:00.142882 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '30cf4c05-d6ec-48bc-9336-65cb1cba0168', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e5b0950>]}
[0m15:28:00.143465 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:28:00.143873 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '30cf4c05-d6ec-48bc-9336-65cb1cba0168', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e296bd0>]}
[0m15:28:00.145356 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:28:00.145970 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:28:00.146592 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:28:00.147120 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:28:00.147627 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:28:00.148132 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:28:00.148633 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:28:00.151186 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.9558092, "process_in_blocks": "0", "process_kernel_time": 0.288552, "process_mem_max_rss": "121393152", "process_out_blocks": "0", "process_user_time": 2.446293}
[0m15:28:00.151824 [debug] [MainThread]: Command `dbt ls` succeeded at 15:28:00.151686 after 0.96 seconds
[0m15:28:00.152398 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d563170>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e569fa0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0806e0>]}
[0m15:28:00.152950 [debug] [MainThread]: Flushing usage events
[0m15:28:00.557163 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:28:09.812691 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10efbffe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fd4cb30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ff46810>]}


============================== 15:28:09.818103 | b9d2158e-6d2e-4b8c-ab62-3114fdfb6445 ==============================
[0m15:28:09.818103 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:28:09.818861 [debug] [MainThread]: running dbt with arguments {'use_colors': 'True', 'target_path': 'None', 'log_format': 'default', 'introspect': 'True', 'no_print': 'None', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'debug': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'write_json': 'True', 'cache_selected_only': 'False', 'indirect_selection': 'eager', 'warn_error': 'None', 'send_anonymous_usage_stats': 'True', 'quiet': 'False', 'use_experimental_parser': 'False', 'printer_width': '80', 'static_parser': 'True', 'log_cache_events': 'False', 'version_check': 'True', 'fail_fast': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'partial_parse': 'True', 'empty': 'None'}
[0m15:28:10.112644 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'b9d2158e-6d2e-4b8c-ab62-3114fdfb6445', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ff75c70>]}
[0m15:28:10.189366 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'b9d2158e-6d2e-4b8c-ab62-3114fdfb6445', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11006c080>]}
[0m15:28:10.191404 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:28:10.325226 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:28:10.445809 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:28:10.446289 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:28:10.455028 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project
- models.dbt_project.references
- models.dbt_project.fct_salesforce
[0m15:28:10.489736 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'b9d2158e-6d2e-4b8c-ab62-3114fdfb6445', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11010d970>]}
[0m15:28:10.571310 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:28:10.573961 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:28:10.587941 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'b9d2158e-6d2e-4b8c-ab62-3114fdfb6445', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110514590>]}
[0m15:28:10.588529 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:28:10.588923 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'b9d2158e-6d2e-4b8c-ab62-3114fdfb6445', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1101f6db0>]}
[0m15:28:10.590122 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:28:10.590684 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:28:10.591188 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:28:10.591681 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:28:10.592269 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:28:10.592777 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:28:10.593273 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:28:10.595903 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.87090355, "process_in_blocks": "0", "process_kernel_time": 0.2785, "process_mem_max_rss": "121208832", "process_out_blocks": "0", "process_user_time": 2.386086}
[0m15:28:10.596528 [debug] [MainThread]: Command `dbt ls` succeeded at 15:28:10.596398 after 0.87 seconds
[0m15:28:10.597092 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11010fa10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11010cf20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fc26b70>]}
[0m15:28:10.597547 [debug] [MainThread]: Flushing usage events
[0m15:28:11.058952 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:30:51.177044 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1044cfc50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104acb6b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10454eae0>]}


============================== 15:30:51.182654 | cf7cd274-52e3-4ff7-bb84-da9bff1cf655 ==============================
[0m15:30:51.182654 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:30:51.183374 [debug] [MainThread]: running dbt with arguments {'indirect_selection': 'eager', 'printer_width': '80', 'debug': 'False', 'send_anonymous_usage_stats': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'static_parser': 'True', 'log_format': 'default', 'log_cache_events': 'False', 'version_check': 'True', 'cache_selected_only': 'False', 'no_print': 'None', 'fail_fast': 'False', 'use_colors': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'use_experimental_parser': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'quiet': 'False', 'empty': 'None', 'target_path': 'None', 'introspect': 'True', 'write_json': 'True', 'partial_parse': 'True', 'warn_error': 'None'}
[0m15:30:51.495978 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'cf7cd274-52e3-4ff7-bb84-da9bff1cf655', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104b5a6f0>]}
[0m15:30:51.579544 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'cf7cd274-52e3-4ff7-bb84-da9bff1cf655', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104acbe90>]}
[0m15:30:51.581504 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:30:51.727164 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:30:51.861931 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:30:51.862427 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:30:51.871189 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.fct_salesforce
- models.dbt_project.references
- models.dbt_project
[0m15:30:51.907811 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'cf7cd274-52e3-4ff7-bb84-da9bff1cf655', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104d33020>]}
[0m15:30:51.992306 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:30:51.994785 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:30:52.009462 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'cf7cd274-52e3-4ff7-bb84-da9bff1cf655', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1050e4680>]}
[0m15:30:52.010069 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:30:52.010470 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'cf7cd274-52e3-4ff7-bb84-da9bff1cf655', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104ae94f0>]}
[0m15:30:52.011657 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:30:52.012205 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:30:52.012700 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:30:52.013240 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:30:52.013728 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:30:52.014215 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:30:52.014706 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:30:52.017311 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.93882644, "process_in_blocks": "0", "process_kernel_time": 0.307164, "process_mem_max_rss": "120639488", "process_out_blocks": "0", "process_user_time": 2.398532}
[0m15:30:52.017943 [debug] [MainThread]: Command `dbt ls` succeeded at 15:30:52.017812 after 0.94 seconds
[0m15:30:52.018496 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104b2e900>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104ba89b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1044cfdd0>]}
[0m15:30:52.018943 [debug] [MainThread]: Flushing usage events
[0m15:30:52.473167 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:31:13.479822 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f2c3bf0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fdf6930>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fdf66f0>]}


============================== 15:31:13.486157 | f7667c1d-77ca-4976-a4f5-fcb91bac13f3 ==============================
[0m15:31:13.486157 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:31:13.486924 [debug] [MainThread]: running dbt with arguments {'warn_error': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'use_experimental_parser': 'False', 'cache_selected_only': 'False', 'partial_parse': 'True', 'log_cache_events': 'False', 'log_format': 'default', 'write_json': 'True', 'target_path': 'None', 'fail_fast': 'False', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'debug': 'False', 'no_print': 'None', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'invocation_command': 'dbt ls --resource-type model --output json', 'introspect': 'True', 'empty': 'None', 'indirect_selection': 'eager', 'use_colors': 'True', 'send_anonymous_usage_stats': 'True', 'version_check': 'True', 'quiet': 'False', 'printer_width': '80', 'static_parser': 'True'}
[0m15:31:13.806846 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'f7667c1d-77ca-4976-a4f5-fcb91bac13f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f0a5100>]}
[0m15:31:13.890862 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'f7667c1d-77ca-4976-a4f5-fcb91bac13f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fddb260>]}
[0m15:31:13.892939 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:31:14.032358 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:31:14.184985 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:31:14.185566 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:31:14.198012 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project
- models.dbt_project.references
- models.dbt_project.fct_salesforce
[0m15:31:14.248837 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'f7667c1d-77ca-4976-a4f5-fcb91bac13f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1101c92e0>]}
[0m15:31:14.363543 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:31:14.365983 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:31:14.380764 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'f7667c1d-77ca-4976-a4f5-fcb91bac13f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103c4ad0>]}
[0m15:31:14.381327 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:31:14.381734 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'f7667c1d-77ca-4976-a4f5-fcb91bac13f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fe948c0>]}
[0m15:31:14.383056 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:31:14.383646 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:31:14.384226 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:31:14.384745 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:31:14.385253 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:31:14.385746 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:31:14.386237 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:31:14.389013 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.9979918, "process_in_blocks": "0", "process_kernel_time": 0.284797, "process_mem_max_rss": "120442880", "process_out_blocks": "0", "process_user_time": 2.469998}
[0m15:31:14.389750 [debug] [MainThread]: Command `dbt ls` succeeded at 15:31:14.389534 after 1.00 seconds
[0m15:31:14.390269 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fdf67e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f2c3bf0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ff91a00>]}
[0m15:31:14.390757 [debug] [MainThread]: Flushing usage events
[0m15:31:14.788952 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:31:32.914206 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d74e990>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dd8a8a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dd8a630>]}


============================== 15:31:32.919769 | 362cdad3-ad15-41fa-b7d8-34af339df1a7 ==============================
[0m15:31:32.919769 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:31:32.920469 [debug] [MainThread]: running dbt with arguments {'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'log_cache_events': 'False', 'log_format': 'default', 'invocation_command': 'dbt ls --resource-type model --output json', 'use_colors': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'no_print': 'None', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'send_anonymous_usage_stats': 'True', 'target_path': 'None', 'fail_fast': 'False', 'indirect_selection': 'eager', 'warn_error': 'None', 'printer_width': '80', 'empty': 'None', 'cache_selected_only': 'False', 'quiet': 'False', 'debug': 'False', 'write_json': 'True', 'introspect': 'True', 'use_experimental_parser': 'False', 'static_parser': 'True', 'partial_parse': 'True', 'version_check': 'True'}
[0m15:31:33.218600 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '362cdad3-ad15-41fa-b7d8-34af339df1a7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df25c10>]}
[0m15:31:33.295477 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '362cdad3-ad15-41fa-b7d8-34af339df1a7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d4be1b0>]}
[0m15:31:33.297519 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:31:33.428302 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:31:33.548015 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:31:33.548483 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:31:33.557774 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project
- models.dbt_project.fct_salesforce
- models.dbt_project.references
[0m15:31:33.593530 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '362cdad3-ad15-41fa-b7d8-34af339df1a7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10de0b560>]}
[0m15:31:33.675528 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:31:33.678166 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:31:33.693945 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '362cdad3-ad15-41fa-b7d8-34af339df1a7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e3589e0>]}
[0m15:31:33.694535 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:31:33.695016 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '362cdad3-ad15-41fa-b7d8-34af339df1a7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dfefb90>]}
[0m15:31:33.696279 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:31:33.696854 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:31:33.697355 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:31:33.697843 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:31:33.698333 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:31:33.698823 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:31:33.699315 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:31:33.701750 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.8751826, "process_in_blocks": "0", "process_kernel_time": 0.272918, "process_mem_max_rss": "119865344", "process_out_blocks": "0", "process_user_time": 2.359806}
[0m15:31:33.702410 [debug] [MainThread]: Command `dbt ls` succeeded at 15:31:33.702272 after 0.88 seconds
[0m15:31:33.702901 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10de0a7e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e03b5f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dd6c650>]}
[0m15:31:33.703452 [debug] [MainThread]: Flushing usage events
[0m15:31:34.155574 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:38:20.884650 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103e8740>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110bfab40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110bfa900>]}


============================== 15:38:20.893436 | 05101807-7424-47fe-a438-706d94e3dfef ==============================
[0m15:38:20.893436 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:38:20.894425 [debug] [MainThread]: running dbt with arguments {'target_path': 'None', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'empty': 'None', 'fail_fast': 'False', 'partial_parse': 'True', 'write_json': 'True', 'use_experimental_parser': 'False', 'printer_width': '80', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'warn_error': 'None', 'no_print': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'quiet': 'False', 'indirect_selection': 'eager', 'debug': 'False', 'static_parser': 'True', 'use_colors': 'True', 'send_anonymous_usage_stats': 'True', 'log_cache_events': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'version_check': 'True', 'cache_selected_only': 'False', 'log_format': 'default'}
[0m15:38:21.379741 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '05101807-7424-47fe-a438-706d94e3dfef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110c99100>]}
[0m15:38:21.479708 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '05101807-7424-47fe-a438-706d94e3dfef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1105beab0>]}
[0m15:38:21.483099 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:38:21.645665 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:38:21.804209 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:38:21.804681 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:38:21.814269 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.references
- models.dbt_project.fct_salesforce
- models.dbt_project
[0m15:38:21.849497 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '05101807-7424-47fe-a438-706d94e3dfef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11057e060>]}
[0m15:38:21.933745 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:38:21.937184 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:38:21.965927 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '05101807-7424-47fe-a438-706d94e3dfef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11051fb60>]}
[0m15:38:21.967125 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:38:21.968077 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '05101807-7424-47fe-a438-706d94e3dfef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110e0f1d0>]}
[0m15:38:21.971902 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:38:21.973945 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:38:21.976080 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:38:21.979361 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:38:21.980681 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:38:21.982166 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:38:21.983672 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:38:21.988253 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.205219, "process_in_blocks": "0", "process_kernel_time": 0.457696, "process_mem_max_rss": "120614912", "process_out_blocks": "0", "process_user_time": 2.681934}
[0m15:38:21.989184 [debug] [MainThread]: Command `dbt ls` succeeded at 15:38:21.988981 after 1.21 seconds
[0m15:38:21.990021 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1109af380>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110eaf740>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110e0f1d0>]}
[0m15:38:21.991072 [debug] [MainThread]: Flushing usage events
[0m15:38:22.466699 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:39:51.128206 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d4ae960>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db8aab0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db8a870>]}


============================== 15:39:51.136138 | 59741bba-45ec-49e5-8194-d7c0136f0142 ==============================
[0m15:39:51.136138 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:39:51.137040 [debug] [MainThread]: running dbt with arguments {'debug': 'False', 'use_colors': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'introspect': 'True', 'partial_parse': 'True', 'warn_error': 'None', 'printer_width': '80', 'cache_selected_only': 'False', 'version_check': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'log_format': 'default', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'send_anonymous_usage_stats': 'True', 'log_cache_events': 'False', 'indirect_selection': 'eager', 'use_experimental_parser': 'False', 'target_path': 'None', 'fail_fast': 'False', 'write_json': 'True', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'static_parser': 'True', 'quiet': 'False', 'no_print': 'None', 'empty': 'None'}
[0m15:39:51.582116 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '59741bba-45ec-49e5-8194-d7c0136f0142', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc0a4e0>]}
[0m15:39:51.663877 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '59741bba-45ec-49e5-8194-d7c0136f0142', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b5cb0e0>]}
[0m15:39:51.667367 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:39:51.912323 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:39:52.077594 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:39:52.078104 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:39:52.087392 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.references
- models.dbt_project.fct_salesforce
- models.dbt_project
[0m15:39:52.123603 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '59741bba-45ec-49e5-8194-d7c0136f0142', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10de3bb60>]}
[0m15:39:52.205717 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:39:52.209705 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:39:52.236965 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '59741bba-45ec-49e5-8194-d7c0136f0142', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e158650>]}
[0m15:39:52.237515 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:39:52.237906 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '59741bba-45ec-49e5-8194-d7c0136f0142', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dddadb0>]}
[0m15:39:52.239132 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:39:52.239707 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:39:52.240337 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:39:52.240924 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:39:52.241438 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:39:52.241934 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:39:52.242532 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:39:52.245153 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.2169064, "process_in_blocks": "0", "process_kernel_time": 0.445131, "process_mem_max_rss": "121892864", "process_out_blocks": "0", "process_user_time": 2.702446}
[0m15:39:52.245814 [debug] [MainThread]: Command `dbt ls` succeeded at 15:39:52.245680 after 1.22 seconds
[0m15:39:52.246305 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1094f2bd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dddadb0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dfcc6e0>]}
[0m15:39:52.246740 [debug] [MainThread]: Flushing usage events
[0m15:39:52.678327 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:40:26.153507 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f7a0f80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110552a50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1105527e0>]}


============================== 15:40:26.162245 | 69e12980-51c5-48d6-a9c2-9575493e63a6 ==============================
[0m15:40:26.162245 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:40:26.163124 [debug] [MainThread]: running dbt with arguments {'debug': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'version_check': 'True', 'static_parser': 'True', 'empty': 'None', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'invocation_command': 'dbt ls --resource-type model --output json', 'log_format': 'default', 'send_anonymous_usage_stats': 'True', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'warn_error': 'None', 'quiet': 'False', 'no_print': 'None', 'log_cache_events': 'False', 'write_json': 'True', 'use_colors': 'True', 'printer_width': '80', 'target_path': 'None', 'cache_selected_only': 'False', 'introspect': 'True', 'use_experimental_parser': 'False', 'fail_fast': 'False', 'indirect_selection': 'eager', 'partial_parse': 'True'}
[0m15:40:26.681152 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '69e12980-51c5-48d6-a9c2-9575493e63a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11071b560>]}
[0m15:40:26.759279 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '69e12980-51c5-48d6-a9c2-9575493e63a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f745dc0>]}
[0m15:40:26.763950 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:40:26.915585 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:40:27.078692 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:40:27.079228 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:40:27.088408 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project
- models.dbt_project.references
- models.dbt_project.fct_salesforce
[0m15:40:27.123548 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '69e12980-51c5-48d6-a9c2-9575493e63a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f7a2300>]}
[0m15:40:27.234973 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:40:27.238574 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:40:27.279669 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '69e12980-51c5-48d6-a9c2-9575493e63a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b20470>]}
[0m15:40:27.280461 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:40:27.281033 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '69e12980-51c5-48d6-a9c2-9575493e63a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11075f710>]}
[0m15:40:27.282706 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:40:27.283607 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:40:27.284364 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:40:27.285075 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:40:27.285782 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:40:27.286491 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:40:27.287155 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:40:27.290565 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.2463758, "process_in_blocks": "0", "process_kernel_time": 0.551005, "process_mem_max_rss": "121294848", "process_out_blocks": "0", "process_user_time": 2.950097}
[0m15:40:27.291480 [debug] [MainThread]: Command `dbt ls` succeeded at 15:40:27.291285 after 1.25 seconds
[0m15:40:27.292064 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11057cf80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110807020>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11071b530>]}
[0m15:40:27.292583 [debug] [MainThread]: Flushing usage events
[0m15:40:27.747487 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:41:18.660482 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1136709e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113846930>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1138466c0>]}


============================== 15:41:18.665988 | cdddec99-9a49-405d-ba4f-32d3b21b8dc1 ==============================
[0m15:41:18.665988 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:41:18.666719 [debug] [MainThread]: running dbt with arguments {'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'target_path': 'None', 'write_json': 'True', 'log_cache_events': 'False', 'version_check': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'warn_error': 'None', 'log_format': 'default', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'introspect': 'True', 'indirect_selection': 'eager', 'printer_width': '80', 'use_experimental_parser': 'False', 'partial_parse': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'empty': 'None', 'static_parser': 'True', 'use_colors': 'True', 'fail_fast': 'False', 'cache_selected_only': 'False', 'debug': 'False', 'send_anonymous_usage_stats': 'True', 'quiet': 'False'}
[0m15:41:18.989249 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'cdddec99-9a49-405d-ba4f-32d3b21b8dc1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111286e40>]}
[0m15:41:19.072740 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'cdddec99-9a49-405d-ba4f-32d3b21b8dc1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11111d5e0>]}
[0m15:41:19.075143 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:41:19.210946 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:41:19.337599 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:41:19.338099 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:41:19.347665 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project
- models.dbt_project.fct_salesforce
- models.dbt_project.references
[0m15:41:19.384316 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'cdddec99-9a49-405d-ba4f-32d3b21b8dc1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113afb1a0>]}
[0m15:41:19.471653 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:41:19.474375 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:41:19.490168 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'cdddec99-9a49-405d-ba4f-32d3b21b8dc1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113c1cad0>]}
[0m15:41:19.490797 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:41:19.491292 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'cdddec99-9a49-405d-ba4f-32d3b21b8dc1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113ad1d30>]}
[0m15:41:19.492593 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:41:19.493161 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:41:19.493760 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:41:19.494386 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:41:19.494905 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:41:19.495403 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:41:19.495961 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:41:19.498532 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.93418497, "process_in_blocks": "0", "process_kernel_time": 0.41719, "process_mem_max_rss": "120836096", "process_out_blocks": "0", "process_user_time": 2.668477}
[0m15:41:19.499130 [debug] [MainThread]: Command `dbt ls` succeeded at 15:41:19.499000 after 0.93 seconds
[0m15:41:19.499683 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113846960>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113846930>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112df2090>]}
[0m15:41:19.500157 [debug] [MainThread]: Flushing usage events
[0m15:41:19.995792 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:41:49.953489 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e1956a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e812960>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e8126f0>]}


============================== 15:41:49.960580 | d75b46f7-e644-4153-972d-912b73accee2 ==============================
[0m15:41:49.960580 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:41:49.961515 [debug] [MainThread]: running dbt with arguments {'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'indirect_selection': 'eager', 'debug': 'False', 'quiet': 'False', 'partial_parse': 'True', 'printer_width': '80', 'write_json': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'invocation_command': 'dbt ls --resource-type model --output json', 'use_colors': 'True', 'target_path': 'None', 'fail_fast': 'False', 'cache_selected_only': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_cache_events': 'False', 'introspect': 'True', 'no_print': 'None', 'send_anonymous_usage_stats': 'True', 'static_parser': 'True', 'empty': 'None', 'log_format': 'default', 'use_experimental_parser': 'False', 'version_check': 'True', 'warn_error': 'None'}
[0m15:41:50.354766 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'd75b46f7-e644-4153-972d-912b73accee2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e7f1730>]}
[0m15:41:50.435846 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'd75b46f7-e644-4153-972d-912b73accee2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e842150>]}
[0m15:41:50.439162 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:41:50.595098 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:41:50.751524 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:41:50.752153 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:41:50.762366 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.references
- models.dbt_project.fct_salesforce
- models.dbt_project
[0m15:41:50.799870 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'd75b46f7-e644-4153-972d-912b73accee2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ed8ca70>]}
[0m15:41:50.945783 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:41:50.966305 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:41:50.994450 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'd75b46f7-e644-4153-972d-912b73accee2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ed97d40>]}
[0m15:41:50.995130 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:41:50.995572 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'd75b46f7-e644-4153-972d-912b73accee2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e842ab0>]}
[0m15:41:50.996998 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:41:50.997642 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:41:50.998234 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:41:50.998764 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:41:50.999301 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:41:50.999861 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:41:51.000405 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:41:51.003221 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.1526625, "process_in_blocks": "0", "process_kernel_time": 0.450129, "process_mem_max_rss": "122380288", "process_out_blocks": "0", "process_user_time": 2.7691}
[0m15:41:51.004054 [debug] [MainThread]: Command `dbt ls` succeeded at 15:41:51.003805 after 1.15 seconds
[0m15:41:51.005141 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e295eb0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ea65c40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e812780>]}
[0m15:41:51.005940 [debug] [MainThread]: Flushing usage events
[0m15:41:51.417549 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:42:15.366344 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f3fcfe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f5369f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f5367b0>]}


============================== 15:42:15.371798 | 86da8e05-be19-40c9-a60c-ae82999449c2 ==============================
[0m15:42:15.371798 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:42:15.372486 [debug] [MainThread]: running dbt with arguments {'log_cache_events': 'False', 'introspect': 'True', 'warn_error': 'None', 'log_format': 'default', 'write_json': 'True', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'invocation_command': 'dbt ls --resource-type model --output json', 'quiet': 'False', 'indirect_selection': 'eager', 'cache_selected_only': 'False', 'printer_width': '80', 'empty': 'None', 'static_parser': 'True', 'version_check': 'True', 'no_print': 'None', 'partial_parse': 'True', 'target_path': 'None', 'use_experimental_parser': 'False', 'fail_fast': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'use_colors': 'True', 'send_anonymous_usage_stats': 'True', 'debug': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])'}
[0m15:42:15.707936 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '86da8e05-be19-40c9-a60c-ae82999449c2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ce30bc0>]}
[0m15:42:15.790344 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '86da8e05-be19-40c9-a60c-ae82999449c2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f4f12e0>]}
[0m15:42:15.792507 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:42:15.938209 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:42:16.060359 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:42:16.060834 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:42:16.069944 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project
- models.dbt_project.fct_salesforce
- models.dbt_project.references
[0m15:42:16.104694 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '86da8e05-be19-40c9-a60c-ae82999449c2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f7eda90>]}
[0m15:42:16.186389 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:42:16.188789 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:42:16.203515 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '86da8e05-be19-40c9-a60c-ae82999449c2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fb042c0>]}
[0m15:42:16.204106 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:42:16.204508 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '86da8e05-be19-40c9-a60c-ae82999449c2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f7ef350>]}
[0m15:42:16.205811 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:42:16.206477 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:42:16.206993 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:42:16.207491 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:42:16.208055 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:42:16.208596 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:42:16.209108 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:42:16.211756 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.9339173, "process_in_blocks": "0", "process_kernel_time": 0.299018, "process_mem_max_rss": "121016320", "process_out_blocks": "0", "process_user_time": 2.499411}
[0m15:42:16.212401 [debug] [MainThread]: Command `dbt ls` succeeded at 15:42:16.212269 after 0.93 seconds
[0m15:42:16.212896 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f0b5df0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e782630>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f785640>]}
[0m15:42:16.213328 [debug] [MainThread]: Flushing usage events
[0m15:42:16.653548 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:44:03.129529 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dfcb140>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e73a810>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e73a5a0>]}


============================== 15:44:03.137408 | 6a9a65ad-9eca-433f-a20c-3441c56126a0 ==============================
[0m15:44:03.137408 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:44:03.138388 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'warn_error': 'None', 'quiet': 'False', 'send_anonymous_usage_stats': 'True', 'partial_parse': 'True', 'use_experimental_parser': 'False', 'log_format': 'default', 'indirect_selection': 'eager', 'static_parser': 'True', 'introspect': 'True', 'target_path': 'None', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'use_colors': 'True', 'cache_selected_only': 'False', 'debug': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'no_print': 'None', 'log_cache_events': 'False', 'fail_fast': 'False', 'write_json': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'version_check': 'True', 'empty': 'None'}
[0m15:44:03.585103 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '6a9a65ad-9eca-433f-a20c-3441c56126a0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e73a3c0>]}
[0m15:44:03.662722 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '6a9a65ad-9eca-433f-a20c-3441c56126a0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e294e30>]}
[0m15:44:03.667090 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:44:03.820139 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:44:03.984107 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:44:03.984573 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:44:03.993969 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.fct_salesforce
- models.dbt_project
- models.dbt_project.references
[0m15:44:04.030523 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '6a9a65ad-9eca-433f-a20c-3441c56126a0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e9c5820>]}
[0m15:44:04.114177 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:44:04.118078 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:44:04.155962 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '6a9a65ad-9eca-433f-a20c-3441c56126a0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e9eb350>]}
[0m15:44:04.156603 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:44:04.157071 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '6a9a65ad-9eca-433f-a20c-3441c56126a0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ecf7200>]}
[0m15:44:04.158464 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:44:04.159115 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:44:04.159712 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:44:04.160375 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:44:04.160997 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:44:04.161519 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:44:04.162063 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:44:04.164892 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.1355469, "process_in_blocks": "0", "process_kernel_time": 0.478068, "process_mem_max_rss": "120479744", "process_out_blocks": "0", "process_user_time": 2.75458}
[0m15:44:04.165591 [debug] [MainThread]: Command `dbt ls` succeeded at 15:44:04.165451 after 1.14 seconds
[0m15:44:04.166103 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e73a0c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e73a6c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10eb10e90>]}
[0m15:44:04.166567 [debug] [MainThread]: Flushing usage events
[0m15:44:04.863219 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:44:54.725404 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107c0e600>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108662930>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1086626c0>]}


============================== 15:44:54.733179 | f22df81f-eda4-49f0-a66e-755296f4f910 ==============================
[0m15:44:54.733179 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:44:54.733968 [debug] [MainThread]: running dbt with arguments {'log_cache_events': 'False', 'empty': 'None', 'cache_selected_only': 'False', 'send_anonymous_usage_stats': 'True', 'version_check': 'True', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'printer_width': '80', 'warn_error': 'None', 'target_path': 'None', 'indirect_selection': 'eager', 'introspect': 'True', 'fail_fast': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'use_experimental_parser': 'False', 'partial_parse': 'True', 'static_parser': 'True', 'no_print': 'None', 'debug': 'False', 'use_colors': 'True', 'log_format': 'default', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'write_json': 'True'}
[0m15:44:55.203682 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'f22df81f-eda4-49f0-a66e-755296f4f910', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105f58da0>]}
[0m15:44:55.291610 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'f22df81f-eda4-49f0-a66e-755296f4f910', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1080e5df0>]}
[0m15:44:55.295562 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:44:55.458755 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:44:55.626898 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:44:55.627409 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:44:55.636621 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project
- models.dbt_project.fct_salesforce
- models.dbt_project.references
[0m15:44:55.675325 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'f22df81f-eda4-49f0-a66e-755296f4f910', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10886f320>]}
[0m15:44:55.766580 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:44:55.769589 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:44:55.794923 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'f22df81f-eda4-49f0-a66e-755296f4f910', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108c30a10>]}
[0m15:44:55.795568 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:44:55.796008 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'f22df81f-eda4-49f0-a66e-755296f4f910', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1088b16d0>]}
[0m15:44:55.797271 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:44:55.797838 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:44:55.798347 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:44:55.798958 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:44:55.799477 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:44:55.799981 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:44:55.800479 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:44:55.803094 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.1780819, "process_in_blocks": "0", "process_kernel_time": 0.432531, "process_mem_max_rss": "120868864", "process_out_blocks": "0", "process_user_time": 2.674699}
[0m15:44:55.803754 [debug] [MainThread]: Command `dbt ls` succeeded at 15:44:55.803614 after 1.18 seconds
[0m15:44:55.804241 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1084c8830>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1086628a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108702330>]}
[0m15:44:55.804746 [debug] [MainThread]: Flushing usage events
[0m15:44:56.275941 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:48:44.561584 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111037da0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112b4e600>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112b4e540>]}


============================== 15:48:44.569685 | d6c2aba1-3457-43a5-ba50-284a7ce01275 ==============================
[0m15:48:44.569685 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:48:44.570625 [debug] [MainThread]: running dbt with arguments {'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'quiet': 'False', 'use_experimental_parser': 'False', 'target_path': 'None', 'printer_width': '80', 'log_format': 'default', 'send_anonymous_usage_stats': 'True', 'write_json': 'True', 'fail_fast': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'warn_error': 'None', 'cache_selected_only': 'False', 'introspect': 'True', 'use_colors': 'True', 'debug': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'indirect_selection': 'eager', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'no_print': 'None', 'partial_parse': 'True', 'log_cache_events': 'False', 'version_check': 'True', 'empty': 'None', 'static_parser': 'True'}
[0m15:48:45.034378 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'd6c2aba1-3457-43a5-ba50-284a7ce01275', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112dad910>]}
[0m15:48:45.110252 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'd6c2aba1-3457-43a5-ba50-284a7ce01275', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1106c7320>]}
[0m15:48:45.114688 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:48:45.268547 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:48:45.449980 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:48:45.450471 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:48:45.462567 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.fct_salesforce
- models.dbt_project
- models.dbt_project.references
[0m15:48:45.505541 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'd6c2aba1-3457-43a5-ba50-284a7ce01275', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112f3a7b0>]}
[0m15:48:45.600597 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:48:45.603468 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:48:45.629681 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'd6c2aba1-3457-43a5-ba50-284a7ce01275', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113254800>]}
[0m15:48:45.630276 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:48:45.630700 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'd6c2aba1-3457-43a5-ba50-284a7ce01275', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11320dd60>]}
[0m15:48:45.631989 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:48:45.632670 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:48:45.633209 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:48:45.633704 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:48:45.634254 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:48:45.634766 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:48:45.635319 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:48:45.637867 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.1903168, "process_in_blocks": "0", "process_kernel_time": 0.505476, "process_mem_max_rss": "122888192", "process_out_blocks": "0", "process_user_time": 2.77188}
[0m15:48:45.638521 [debug] [MainThread]: Command `dbt ls` succeeded at 15:48:45.638374 after 1.19 seconds
[0m15:48:45.639288 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112c86480>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112206b70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110fd02c0>]}
[0m15:48:45.639871 [debug] [MainThread]: Flushing usage events
[0m15:48:46.108406 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:50:10.229886 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105f65640>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1065e2960>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1065e2720>]}


============================== 15:50:10.235248 | 0c851c1a-3776-4ed3-8bc2-88124c3267ab ==============================
[0m15:50:10.235248 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:50:10.235940 [debug] [MainThread]: running dbt with arguments {'empty': 'None', 'cache_selected_only': 'False', 'log_format': 'default', 'partial_parse': 'True', 'no_print': 'None', 'printer_width': '80', 'static_parser': 'True', 'introspect': 'True', 'log_cache_events': 'False', 'indirect_selection': 'eager', 'send_anonymous_usage_stats': 'True', 'use_colors': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'version_check': 'True', 'fail_fast': 'False', 'quiet': 'False', 'write_json': 'True', 'target_path': 'None', 'use_experimental_parser': 'False', 'debug': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'warn_error': 'None', 'invocation_command': 'dbt ls --resource-type model --output json'}
[0m15:50:10.531380 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '0c851c1a-3776-4ed3-8bc2-88124c3267ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1066e5b20>]}
[0m15:50:10.610194 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '0c851c1a-3776-4ed3-8bc2-88124c3267ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1058bdd30>]}
[0m15:50:10.612185 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:50:10.742751 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:50:10.867562 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:50:10.868039 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:50:10.876914 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project
- models.dbt_project.references
- models.dbt_project.fct_salesforce
[0m15:50:10.914692 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '0c851c1a-3776-4ed3-8bc2-88124c3267ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1067ab080>]}
[0m15:50:10.996490 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:50:10.999101 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:50:11.013244 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '0c851c1a-3776-4ed3-8bc2-88124c3267ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106bb0590>]}
[0m15:50:11.013840 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:50:11.014241 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '0c851c1a-3776-4ed3-8bc2-88124c3267ab', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106870170>]}
[0m15:50:11.015534 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:50:11.016104 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:50:11.016608 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:50:11.017300 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:50:11.017864 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:50:11.018368 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:50:11.018961 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:50:11.021698 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.87927693, "process_in_blocks": "0", "process_kernel_time": 0.273416, "process_mem_max_rss": "120958976", "process_out_blocks": "0", "process_user_time": 2.34494}
[0m15:50:11.022372 [debug] [MainThread]: Command `dbt ls` succeeded at 15:50:11.022240 after 0.88 seconds
[0m15:50:11.023028 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106873a10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106b98b90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106a25160>]}
[0m15:50:11.023498 [debug] [MainThread]: Flushing usage events
[0m15:50:11.487574 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:50:32.140215 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c35aea0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c4c76b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c52a9f0>]}


============================== 15:50:32.145534 | 040c0e6f-b32c-4661-b5c8-69c375dba56d ==============================
[0m15:50:32.145534 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:50:32.146209 [debug] [MainThread]: running dbt with arguments {'quiet': 'False', 'cache_selected_only': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'static_parser': 'True', 'version_check': 'True', 'debug': 'False', 'fail_fast': 'False', 'log_cache_events': 'False', 'indirect_selection': 'eager', 'invocation_command': 'dbt ls --resource-type model --output json', 'use_colors': 'True', 'no_print': 'None', 'log_format': 'default', 'empty': 'None', 'target_path': 'None', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'send_anonymous_usage_stats': 'True', 'partial_parse': 'True', 'write_json': 'True', 'printer_width': '80', 'use_experimental_parser': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'warn_error': 'None', 'introspect': 'True'}
[0m15:50:32.457012 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '040c0e6f-b32c-4661-b5c8-69c375dba56d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109e9cf50>]}
[0m15:50:32.534947 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '040c0e6f-b32c-4661-b5c8-69c375dba56d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b78b770>]}
[0m15:50:32.537146 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:50:32.680281 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:50:32.812258 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:50:32.812739 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:50:32.821785 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.references
- models.dbt_project.fct_salesforce
- models.dbt_project
[0m15:50:32.857267 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '040c0e6f-b32c-4661-b5c8-69c375dba56d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c72f470>]}
[0m15:50:32.939535 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:50:32.941833 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:50:32.955928 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '040c0e6f-b32c-4661-b5c8-69c375dba56d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cae0a70>]}
[0m15:50:32.956484 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:50:32.956890 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '040c0e6f-b32c-4661-b5c8-69c375dba56d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c7a5190>]}
[0m15:50:32.958144 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:50:32.958707 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:50:32.959219 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:50:32.959709 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:50:32.960204 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:50:32.960711 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:50:32.961208 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:50:32.963697 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.91312516, "process_in_blocks": "0", "process_kernel_time": 0.306231, "process_mem_max_rss": "120819712", "process_out_blocks": "0", "process_user_time": 2.451784}
[0m15:50:32.964308 [debug] [MainThread]: Command `dbt ls` succeeded at 15:50:32.964177 after 0.91 seconds
[0m15:50:32.964786 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b841490>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c35aea0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca9bf20>]}
[0m15:50:32.965209 [debug] [MainThread]: Flushing usage events
[0m15:50:33.679443 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:51:06.189523 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db86060>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2f6840>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2f65d0>]}


============================== 15:51:06.194611 | f6ea2efe-984e-485d-9d8e-3377e469d0c9 ==============================
[0m15:51:06.194611 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:51:06.195346 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'write_json': 'True', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'indirect_selection': 'eager', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'send_anonymous_usage_stats': 'True', 'quiet': 'False', 'use_experimental_parser': 'False', 'static_parser': 'True', 'partial_parse': 'True', 'introspect': 'True', 'empty': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'no_print': 'None', 'fail_fast': 'False', 'debug': 'False', 'use_colors': 'True', 'cache_selected_only': 'False', 'log_format': 'default', 'warn_error': 'None', 'target_path': 'None', 'version_check': 'True', 'invocation_command': 'dbt run --target prod', 'log_cache_events': 'False'}
[0m15:51:06.489980 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'f6ea2efe-984e-485d-9d8e-3377e469d0c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bbf4b90>]}
[0m15:51:06.567059 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'f6ea2efe-984e-485d-9d8e-3377e469d0c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2b0b00>]}
[0m15:51:06.569226 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:51:06.707528 [debug] [MainThread]: checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, vars: {}, profile: , target: prod, version: 1.10.9
[0m15:51:06.810822 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m15:51:06.811340 [debug] [MainThread]: previous checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, current checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23
[0m15:51:06.811748 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'f6ea2efe-984e-485d-9d8e-3377e469d0c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc7cf20>]}
[0m15:51:08.247937 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.fct_salesforce
- models.dbt_project.references
- models.dbt_project
[0m15:51:08.261062 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'f6ea2efe-984e-485d-9d8e-3377e469d0c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e4e5ca0>]}
[0m15:51:08.339716 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:51:08.342043 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:51:08.363315 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'f6ea2efe-984e-485d-9d8e-3377e469d0c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e9d1c70>]}
[0m15:51:08.363972 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:51:08.364452 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'f6ea2efe-984e-485d-9d8e-3377e469d0c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ea20380>]}
[0m15:51:08.366984 [info ] [MainThread]: 
[0m15:51:08.367413 [info ] [MainThread]: Concurrency: 1 threads (target='prod')
[0m15:51:08.367792 [info ] [MainThread]: 
[0m15:51:08.368396 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m15:51:08.376358 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m15:51:08.458357 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m15:51:08.459019 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m15:51:08.459521 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m15:51:08.540783 [debug] [ThreadPool]: SQL status: OK in 0.081 seconds
[0m15:51:08.542528 [debug] [ThreadPool]: On list_memory: Close
[0m15:51:08.544195 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now list_memory_main)
[0m15:51:08.550721 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m15:51:08.551182 [debug] [ThreadPool]: On list_memory_main: BEGIN
[0m15:51:08.551540 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m15:51:08.553195 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m15:51:08.553575 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m15:51:08.553947 [debug] [ThreadPool]: On list_memory_main: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_main"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'memory'
  
[0m15:51:08.576749 [debug] [ThreadPool]: SQL status: OK in 0.022 seconds
[0m15:51:08.578381 [debug] [ThreadPool]: On list_memory_main: ROLLBACK
[0m15:51:08.580244 [debug] [ThreadPool]: Failed to rollback 'list_memory_main'
[0m15:51:08.580640 [debug] [ThreadPool]: On list_memory_main: Close
[0m15:51:08.581362 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'f6ea2efe-984e-485d-9d8e-3377e469d0c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ea0c5c0>]}
[0m15:51:08.581910 [debug] [MainThread]: Using duckdb connection "master"
[0m15:51:08.582279 [debug] [MainThread]: On master: BEGIN
[0m15:51:08.582633 [debug] [MainThread]: Opening a new connection, currently in state init
[0m15:51:08.584327 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m15:51:08.584717 [debug] [MainThread]: On master: COMMIT
[0m15:51:08.585091 [debug] [MainThread]: Using duckdb connection "master"
[0m15:51:08.585447 [debug] [MainThread]: On master: COMMIT
[0m15:51:08.586002 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:51:08.586379 [debug] [MainThread]: On master: Close
[0m15:51:08.591764 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m15:51:08.592440 [info ] [Thread-1 (]: 1 of 7 START sql view model main.states ........................................ [RUN]
[0m15:51:08.593006 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_main, now model.usawfl.states)
[0m15:51:08.593441 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m15:51:08.601888 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m15:51:08.602869 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m15:51:08.637958 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m15:51:08.638882 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:51:08.639319 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m15:51:08.639714 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:51:08.641315 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:51:08.641722 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:51:08.642288 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

  
  create view memory."main"."states__dbt_tmp" as (
    select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
  );

[0m15:51:08.644598 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:51:08.651505 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:51:08.652062 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */
alter view memory."main"."states__dbt_tmp" rename to "states"
[0m15:51:08.653646 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:51:08.665239 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m15:51:08.665777 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:51:08.666229 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m15:51:08.667035 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:51:08.673054 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:51:08.673532 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

      drop view if exists memory."main"."states__dbt_backup" cascade
    
[0m15:51:08.674336 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:51:08.677053 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m15:51:08.679920 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f6ea2efe-984e-485d-9d8e-3377e469d0c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bbd3bc0>]}
[0m15:51:08.681017 [info ] [Thread-1 (]: 1 of 7 OK created sql view model main.states ................................... [[32mOK[0m in 0.08s]
[0m15:51:08.681800 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m15:51:08.682297 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m15:51:08.682865 [info ] [Thread-1 (]: 2 of 7 START sql view model main.tournaments ................................... [RUN]
[0m15:51:08.683600 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m15:51:08.684066 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m15:51:08.688997 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m15:51:08.689993 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m15:51:08.693610 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m15:51:08.695266 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:51:08.695870 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m15:51:08.696285 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:51:08.697951 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:51:08.698383 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:51:08.698922 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

  
  create view memory."main"."tournaments__dbt_tmp" as (
    with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:51:09.478611 [debug] [Thread-1 (]: SQL status: OK in 0.779 seconds
[0m15:51:09.487643 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:51:09.488521 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */
alter view memory."main"."tournaments__dbt_tmp" rename to "tournaments"
[0m15:51:09.490120 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:51:09.492240 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m15:51:09.492844 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:51:09.493466 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m15:51:09.494586 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:51:09.498061 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:51:09.498678 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

      drop view if exists memory."main"."tournaments__dbt_backup" cascade
    
[0m15:51:09.499689 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:51:09.501469 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m15:51:09.502205 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f6ea2efe-984e-485d-9d8e-3377e469d0c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10eec9f40>]}
[0m15:51:09.502998 [info ] [Thread-1 (]: 2 of 7 OK created sql view model main.tournaments .............................. [[32mOK[0m in 0.82s]
[0m15:51:09.503894 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m15:51:09.504444 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m15:51:09.505053 [info ] [Thread-1 (]: 3 of 7 START sql view model main.contacts ...................................... [RUN]
[0m15:51:09.505739 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m15:51:09.506235 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m15:51:09.515354 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m15:51:09.516437 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m15:51:09.520435 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m15:51:09.521563 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:51:09.522101 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m15:51:09.522643 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:51:09.524933 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:51:09.525469 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:51:09.526195 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

  
  create view memory."main"."contacts__dbt_tmp" as (
    with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."main"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."main"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:51:10.285583 [debug] [Thread-1 (]: SQL status: OK in 0.758 seconds
[0m15:51:10.289497 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:51:10.290156 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */
alter view memory."main"."contacts__dbt_tmp" rename to "contacts"
[0m15:51:10.291627 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:51:10.293711 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m15:51:10.294230 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:51:10.294678 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m15:51:10.295644 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:51:10.298205 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:51:10.298691 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

      drop view if exists memory."main"."contacts__dbt_backup" cascade
    
[0m15:51:10.299588 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:51:10.301213 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m15:51:10.301834 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f6ea2efe-984e-485d-9d8e-3377e469d0c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10edb4b90>]}
[0m15:51:10.302482 [info ] [Thread-1 (]: 3 of 7 OK created sql view model main.contacts ................................. [[32mOK[0m in 0.80s]
[0m15:51:10.303139 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m15:51:10.303970 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m15:51:10.304631 [info ] [Thread-1 (]: 4 of 7 START sql view model main.officials ..................................... [RUN]
[0m15:51:10.305256 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m15:51:10.305708 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m15:51:10.311272 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m15:51:10.312142 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m15:51:10.316056 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m15:51:10.316992 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:51:10.317426 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m15:51:10.317869 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:51:10.319597 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:51:10.320029 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:51:10.320716 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

  
  create view memory."main"."officials__dbt_tmp" as (
    with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."main"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."main"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m15:51:12.194732 [debug] [Thread-1 (]: SQL status: OK in 1.873 seconds
[0m15:51:12.198470 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:51:12.198973 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */
alter view memory."main"."officials__dbt_tmp" rename to "officials"
[0m15:51:12.200130 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:51:12.201681 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m15:51:12.202194 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:51:12.202632 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m15:51:12.203623 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:51:12.206654 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:51:12.207165 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

      drop view if exists memory."main"."officials__dbt_backup" cascade
    
[0m15:51:12.207947 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:51:12.209417 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m15:51:12.210001 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f6ea2efe-984e-485d-9d8e-3377e469d0c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ee0a7b0>]}
[0m15:51:12.210646 [info ] [Thread-1 (]: 4 of 7 OK created sql view model main.officials ................................ [[32mOK[0m in 1.90s]
[0m15:51:12.211309 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m15:51:12.211752 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m15:51:12.212251 [info ] [Thread-1 (]: 5 of 7 START sql view model main.teams ......................................... [RUN]
[0m15:51:12.212792 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m15:51:12.213209 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m15:51:12.216625 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m15:51:12.218320 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m15:51:12.225312 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m15:51:12.226229 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:51:12.226677 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m15:51:12.227070 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:51:12.228922 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:51:12.229385 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:51:12.229894 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

  
  create view memory."main"."teams__dbt_tmp" as (
    with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."main"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:51:13.140365 [debug] [Thread-1 (]: SQL status: OK in 0.910 seconds
[0m15:51:13.143784 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:51:13.144343 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */
alter view memory."main"."teams__dbt_tmp" rename to "teams"
[0m15:51:13.145227 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:51:13.146633 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m15:51:13.147069 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:51:13.147475 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m15:51:13.148190 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:51:13.150962 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:51:13.151441 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

      drop view if exists memory."main"."teams__dbt_backup" cascade
    
[0m15:51:13.152325 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:51:13.153988 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m15:51:13.154686 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f6ea2efe-984e-485d-9d8e-3377e469d0c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ef10f20>]}
[0m15:51:13.155492 [info ] [Thread-1 (]: 5 of 7 OK created sql view model main.teams .................................... [[32mOK[0m in 0.94s]
[0m15:51:13.156319 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m15:51:13.157141 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m15:51:13.157715 [info ] [Thread-1 (]: 6 of 7 START sql view model main.members ....................................... [RUN]
[0m15:51:13.158369 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m15:51:13.158799 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m15:51:13.163271 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m15:51:13.164872 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m15:51:13.168493 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m15:51:13.169371 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:51:13.169797 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m15:51:13.170184 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:51:13.171960 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:51:13.172420 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:51:13.172957 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

  
  create view memory."main"."members__dbt_tmp" as (
    with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m15:51:15.595230 [debug] [Thread-1 (]: SQL status: OK in 2.422 seconds
[0m15:51:15.598510 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:51:15.598936 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */
alter view memory."main"."members__dbt_tmp" rename to "members"
[0m15:51:15.600001 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:51:15.601610 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m15:51:15.602465 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:51:15.602986 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m15:51:15.603853 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:51:15.606647 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:51:15.607126 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

      drop view if exists memory."main"."members__dbt_backup" cascade
    
[0m15:51:15.608156 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:51:15.609729 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m15:51:15.610341 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f6ea2efe-984e-485d-9d8e-3377e469d0c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ee7f3b0>]}
[0m15:51:15.610987 [info ] [Thread-1 (]: 6 of 7 OK created sql view model main.members .................................. [[32mOK[0m in 2.45s]
[0m15:51:15.611634 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m15:51:15.612082 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m15:51:15.612598 [info ] [Thread-1 (]: 7 of 7 START sql view model main.stats ......................................... [RUN]
[0m15:51:15.613158 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m15:51:15.613579 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m15:51:15.619610 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m15:51:15.620906 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m15:51:15.625591 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m15:51:15.626697 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:51:15.627172 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m15:51:15.627581 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:51:15.630551 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m15:51:15.631189 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:51:15.632347 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

  
  create view memory."main"."stats__dbt_tmp" as (
    with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
  );

[0m15:51:17.910080 [debug] [Thread-1 (]: SQL status: OK in 2.276 seconds
[0m15:51:17.913461 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:51:17.913895 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */
alter view memory."main"."stats__dbt_tmp" rename to "stats"
[0m15:51:17.915196 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:51:17.916720 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m15:51:17.917145 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:51:17.917537 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m15:51:17.918654 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:51:17.922946 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:51:17.923401 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

      drop view if exists memory."main"."stats__dbt_backup" cascade
    
[0m15:51:17.924151 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:51:17.925700 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m15:51:17.926322 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f6ea2efe-984e-485d-9d8e-3377e469d0c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ef30740>]}
[0m15:51:17.926992 [info ] [Thread-1 (]: 7 of 7 OK created sql view model main.stats .................................... [[32mOK[0m in 2.31s]
[0m15:51:17.927695 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m15:51:17.928972 [debug] [MainThread]: Using duckdb connection "master"
[0m15:51:17.929336 [debug] [MainThread]: On master: BEGIN
[0m15:51:17.929659 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m15:51:17.931212 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m15:51:17.931565 [debug] [MainThread]: On master: COMMIT
[0m15:51:17.931906 [debug] [MainThread]: Using duckdb connection "master"
[0m15:51:17.932231 [debug] [MainThread]: On master: COMMIT
[0m15:51:17.932740 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:51:17.933090 [debug] [MainThread]: On master: Close
[0m15:51:17.933888 [debug] [MainThread]: Connection 'master' was properly closed.
[0m15:51:17.934575 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m15:51:17.935078 [info ] [MainThread]: 
[0m15:51:17.935483 [info ] [MainThread]: Finished running 7 view models in 0 hours 0 minutes and 9.57 seconds (9.57s).
[0m15:51:17.937672 [debug] [MainThread]: Command end result
[0m15:51:17.961214 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:51:17.963178 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:51:17.969757 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m15:51:17.970139 [info ] [MainThread]: 
[0m15:51:17.970548 [info ] [MainThread]: [32mCompleted successfully[0m
[0m15:51:17.970939 [info ] [MainThread]: 
[0m15:51:17.971329 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m15:51:17.975909 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 11.872856, "process_in_blocks": "0", "process_kernel_time": 0.494885, "process_mem_max_rss": "174948352", "process_out_blocks": "0", "process_user_time": 4.919624}
[0m15:51:17.976596 [debug] [MainThread]: Command `dbt run` succeeded at 15:51:17.976425 after 11.87 seconds
[0m15:51:17.977332 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db86060>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2f67b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e7ac620>]}
[0m15:51:17.977849 [debug] [MainThread]: Flushing usage events
[0m15:51:18.486975 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:52:01.344406 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1048573b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107066750>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1070664e0>]}


============================== 15:52:01.349492 | 1113a7c7-7576-4bed-af9f-0cd68da33092 ==============================
[0m15:52:01.349492 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:52:01.350173 [debug] [MainThread]: running dbt with arguments {'write_json': 'True', 'log_cache_events': 'False', 'static_parser': 'True', 'introspect': 'True', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'fail_fast': 'False', 'printer_width': '80', 'debug': 'False', 'target_path': 'None', 'quiet': 'False', 'use_colors': 'True', 'warn_error': 'None', 'partial_parse': 'True', 'log_format': 'default', 'empty': 'False', 'send_anonymous_usage_stats': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'cache_selected_only': 'False', 'version_check': 'True', 'no_print': 'None', 'indirect_selection': 'eager', 'use_experimental_parser': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'invocation_command': 'dbt run --target dev'}
[0m15:52:01.650282 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '1113a7c7-7576-4bed-af9f-0cd68da33092', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107138aa0>]}
[0m15:52:01.728772 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '1113a7c7-7576-4bed-af9f-0cd68da33092', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106d22480>]}
[0m15:52:01.730863 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:52:01.866335 [debug] [MainThread]: checksum: 29ea1ce3a69c23697e5b867170111b74ec8b8d94cb5dc8274e6fc1c7cd223092, vars: {}, profile: , target: dev, version: 1.10.9
[0m15:52:01.964423 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m15:52:01.964987 [debug] [MainThread]: previous checksum: 29ea1ce3a69c23697e5b867170111b74ec8b8d94cb5dc8274e6fc1c7cd223092, current checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e
[0m15:52:01.965408 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '1113a7c7-7576-4bed-af9f-0cd68da33092', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10753e330>]}
[0m15:52:03.372387 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.fct_salesforce
- models.dbt_project.references
- models.dbt_project
[0m15:52:03.385800 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '1113a7c7-7576-4bed-af9f-0cd68da33092', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107782ba0>]}
[0m15:52:03.463646 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:52:03.466095 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:52:03.481753 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '1113a7c7-7576-4bed-af9f-0cd68da33092', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107797e90>]}
[0m15:52:03.482286 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:52:03.482688 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '1113a7c7-7576-4bed-af9f-0cd68da33092', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10779ae40>]}
[0m15:52:03.484867 [info ] [MainThread]: 
[0m15:52:03.485277 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m15:52:03.485692 [info ] [MainThread]: 
[0m15:52:03.486281 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m15:52:03.492941 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m15:52:03.544878 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m15:52:03.545347 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m15:52:03.545706 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m15:52:03.588426 [debug] [ThreadPool]: SQL status: OK in 0.043 seconds
[0m15:52:03.590089 [debug] [ThreadPool]: On list_memory: Close
[0m15:52:03.591713 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now list_memory_main)
[0m15:52:03.597701 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m15:52:03.598113 [debug] [ThreadPool]: On list_memory_main: BEGIN
[0m15:52:03.598442 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m15:52:03.600012 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m15:52:03.600370 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m15:52:03.600723 [debug] [ThreadPool]: On list_memory_main: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_main"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'memory'
  
[0m15:52:03.616391 [debug] [ThreadPool]: SQL status: OK in 0.015 seconds
[0m15:52:03.617935 [debug] [ThreadPool]: On list_memory_main: ROLLBACK
[0m15:52:03.619297 [debug] [ThreadPool]: Failed to rollback 'list_memory_main'
[0m15:52:03.619658 [debug] [ThreadPool]: On list_memory_main: Close
[0m15:52:03.620340 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '1113a7c7-7576-4bed-af9f-0cd68da33092', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10713aae0>]}
[0m15:52:03.620880 [debug] [MainThread]: Using duckdb connection "master"
[0m15:52:03.621242 [debug] [MainThread]: On master: BEGIN
[0m15:52:03.621577 [debug] [MainThread]: Opening a new connection, currently in state init
[0m15:52:03.623119 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m15:52:03.623484 [debug] [MainThread]: On master: COMMIT
[0m15:52:03.623834 [debug] [MainThread]: Using duckdb connection "master"
[0m15:52:03.624171 [debug] [MainThread]: On master: COMMIT
[0m15:52:03.624704 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:52:03.625066 [debug] [MainThread]: On master: Close
[0m15:52:03.627323 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m15:52:03.628265 [info ] [Thread-1 (]: 1 of 7 START sql view model main.states ........................................ [RUN]
[0m15:52:03.628912 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_main, now model.usawfl.states)
[0m15:52:03.629351 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m15:52:03.637281 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m15:52:03.638178 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m15:52:03.673700 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m15:52:03.674685 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:52:03.675113 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m15:52:03.675506 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:52:03.677242 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:52:03.677732 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:52:03.678283 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
  create view memory."main"."states__dbt_tmp" as (
    select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
  );

[0m15:52:03.680367 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:03.687394 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:52:03.687957 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter view memory."main"."states__dbt_tmp" rename to "states"
[0m15:52:03.688920 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:03.700124 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m15:52:03.700665 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:52:03.701064 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m15:52:03.701875 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:03.707890 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:52:03.708349 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop view if exists memory."main"."states__dbt_backup" cascade
    
[0m15:52:03.709130 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:03.711912 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m15:52:03.713760 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1113a7c7-7576-4bed-af9f-0cd68da33092', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1049439e0>]}
[0m15:52:03.714483 [info ] [Thread-1 (]: 1 of 7 OK created sql view model main.states ................................... [[32mOK[0m in 0.08s]
[0m15:52:03.715180 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m15:52:03.715651 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m15:52:03.716179 [info ] [Thread-1 (]: 2 of 7 START sql view model main.tournaments ................................... [RUN]
[0m15:52:03.716863 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m15:52:03.717320 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m15:52:03.722608 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m15:52:03.723654 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m15:52:03.727966 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m15:52:03.729124 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:52:03.729596 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m15:52:03.729991 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:52:03.731602 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:52:03.732099 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:52:03.732630 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
  create view memory."main"."tournaments__dbt_tmp" as (
    with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:52:04.304758 [debug] [Thread-1 (]: SQL status: OK in 0.571 seconds
[0m15:52:04.313600 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:52:04.314462 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter view memory."main"."tournaments__dbt_tmp" rename to "tournaments"
[0m15:52:04.315718 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:04.317702 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m15:52:04.318317 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:52:04.318906 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m15:52:04.319953 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:04.323237 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:52:04.323738 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop view if exists memory."main"."tournaments__dbt_backup" cascade
    
[0m15:52:04.324568 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:04.326256 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m15:52:04.326977 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1113a7c7-7576-4bed-af9f-0cd68da33092', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107c4b050>]}
[0m15:52:04.327789 [info ] [Thread-1 (]: 2 of 7 OK created sql view model main.tournaments .............................. [[32mOK[0m in 0.61s]
[0m15:52:04.328668 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m15:52:04.329238 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m15:52:04.329859 [info ] [Thread-1 (]: 3 of 7 START sql view model main.contacts ...................................... [RUN]
[0m15:52:04.330559 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m15:52:04.331069 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m15:52:04.340386 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m15:52:04.341399 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m15:52:04.344887 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m15:52:04.345762 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:52:04.346197 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m15:52:04.346609 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:52:04.348914 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:52:04.349458 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:52:04.350211 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
  create view memory."main"."contacts__dbt_tmp" as (
    with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."main"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."main"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:52:05.104824 [debug] [Thread-1 (]: SQL status: OK in 0.754 seconds
[0m15:52:05.108360 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:52:05.108827 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter view memory."main"."contacts__dbt_tmp" rename to "contacts"
[0m15:52:05.109852 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:05.111294 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m15:52:05.111745 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:52:05.112169 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m15:52:05.113046 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:05.115605 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:52:05.116071 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop view if exists memory."main"."contacts__dbt_backup" cascade
    
[0m15:52:05.116873 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:05.118417 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m15:52:05.119064 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1113a7c7-7576-4bed-af9f-0cd68da33092', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ad8500>]}
[0m15:52:05.119781 [info ] [Thread-1 (]: 3 of 7 OK created sql view model main.contacts ................................. [[32mOK[0m in 0.79s]
[0m15:52:05.120534 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m15:52:05.121384 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m15:52:05.121922 [info ] [Thread-1 (]: 4 of 7 START sql view model main.officials ..................................... [RUN]
[0m15:52:05.122502 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m15:52:05.122930 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m15:52:05.127897 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m15:52:05.129026 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m15:52:05.132783 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m15:52:05.133667 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:52:05.134114 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m15:52:05.134562 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:52:05.136512 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:52:05.136962 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:52:05.137551 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
  create view memory."main"."officials__dbt_tmp" as (
    with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."main"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."main"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m15:52:07.419933 [debug] [Thread-1 (]: SQL status: OK in 2.282 seconds
[0m15:52:07.423788 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:52:07.424342 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter view memory."main"."officials__dbt_tmp" rename to "officials"
[0m15:52:07.425739 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:07.427331 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m15:52:07.427871 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:52:07.428296 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m15:52:07.429268 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:07.431932 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:52:07.432437 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop view if exists memory."main"."officials__dbt_backup" cascade
    
[0m15:52:07.433264 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:07.435134 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m15:52:07.436096 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1113a7c7-7576-4bed-af9f-0cd68da33092', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107c6bc50>]}
[0m15:52:07.436916 [info ] [Thread-1 (]: 4 of 7 OK created sql view model main.officials ................................ [[32mOK[0m in 2.31s]
[0m15:52:07.437717 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m15:52:07.438251 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m15:52:07.438878 [info ] [Thread-1 (]: 5 of 7 START sql view model main.teams ......................................... [RUN]
[0m15:52:07.439626 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m15:52:07.440152 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m15:52:07.446554 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m15:52:07.448342 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m15:52:07.455253 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m15:52:07.457369 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:52:07.458539 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m15:52:07.459601 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:52:07.491242 [debug] [Thread-1 (]: SQL status: OK in 0.032 seconds
[0m15:52:07.495212 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:52:07.496163 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
  create view memory."main"."teams__dbt_tmp" as (
    with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."main"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:52:08.373117 [debug] [Thread-1 (]: SQL status: OK in 0.876 seconds
[0m15:52:08.376532 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:52:08.377004 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter view memory."main"."teams__dbt_tmp" rename to "teams"
[0m15:52:08.377889 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:08.379392 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m15:52:08.379883 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:52:08.380306 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m15:52:08.381111 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:08.383852 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:52:08.384371 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop view if exists memory."main"."teams__dbt_backup" cascade
    
[0m15:52:08.385199 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:08.386804 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m15:52:08.387470 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1113a7c7-7576-4bed-af9f-0cd68da33092', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107c810a0>]}
[0m15:52:08.388186 [info ] [Thread-1 (]: 5 of 7 OK created sql view model main.teams .................................... [[32mOK[0m in 0.95s]
[0m15:52:08.388917 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m15:52:08.389686 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m15:52:08.390382 [info ] [Thread-1 (]: 6 of 7 START sql view model main.members ....................................... [RUN]
[0m15:52:08.391038 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m15:52:08.391519 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m15:52:08.396683 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m15:52:08.397563 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m15:52:08.401797 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m15:52:08.402777 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:52:08.403278 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m15:52:08.403694 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:52:08.405436 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:52:08.406074 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:52:08.406721 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
  create view memory."main"."members__dbt_tmp" as (
    with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m15:52:11.272189 [debug] [Thread-1 (]: SQL status: OK in 2.865 seconds
[0m15:52:11.275684 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:52:11.276143 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter view memory."main"."members__dbt_tmp" rename to "members"
[0m15:52:11.277095 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:11.278531 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m15:52:11.279017 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:52:11.279412 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m15:52:11.280186 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:11.282662 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:52:11.283076 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop view if exists memory."main"."members__dbt_backup" cascade
    
[0m15:52:11.283760 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:11.285215 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m15:52:11.285821 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1113a7c7-7576-4bed-af9f-0cd68da33092', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107beab40>]}
[0m15:52:11.286495 [info ] [Thread-1 (]: 6 of 7 OK created sql view model main.members .................................. [[32mOK[0m in 2.89s]
[0m15:52:11.287170 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m15:52:11.287619 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m15:52:11.288123 [info ] [Thread-1 (]: 7 of 7 START sql view model main.stats ......................................... [RUN]
[0m15:52:11.288701 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m15:52:11.289123 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m15:52:11.294819 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m15:52:11.295859 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m15:52:11.299209 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m15:52:11.300088 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:52:11.300520 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m15:52:11.300966 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:52:11.302612 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:52:11.303027 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:52:11.303859 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
  create view memory."main"."stats__dbt_tmp" as (
    with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
  );

[0m15:52:13.389178 [debug] [Thread-1 (]: SQL status: OK in 2.084 seconds
[0m15:52:13.392325 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:52:13.392756 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter view memory."main"."stats__dbt_tmp" rename to "stats"
[0m15:52:13.393964 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:13.395406 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m15:52:13.395887 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:52:13.396294 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m15:52:13.397506 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:13.401645 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:52:13.402103 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop view if exists memory."main"."stats__dbt_backup" cascade
    
[0m15:52:13.402872 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:13.404322 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m15:52:13.404918 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1113a7c7-7576-4bed-af9f-0cd68da33092', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ca07a0>]}
[0m15:52:13.405604 [info ] [Thread-1 (]: 7 of 7 OK created sql view model main.stats .................................... [[32mOK[0m in 2.12s]
[0m15:52:13.406379 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m15:52:13.407705 [debug] [MainThread]: Using duckdb connection "master"
[0m15:52:13.408080 [debug] [MainThread]: On master: BEGIN
[0m15:52:13.408405 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m15:52:13.409990 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m15:52:13.410348 [debug] [MainThread]: On master: COMMIT
[0m15:52:13.410689 [debug] [MainThread]: Using duckdb connection "master"
[0m15:52:13.411014 [debug] [MainThread]: On master: COMMIT
[0m15:52:13.411534 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:52:13.411885 [debug] [MainThread]: On master: Close
[0m15:52:13.412319 [debug] [MainThread]: Connection 'master' was properly closed.
[0m15:52:13.412641 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m15:52:13.413649 [info ] [MainThread]: 
[0m15:52:13.414093 [info ] [MainThread]: Finished running 7 view models in 0 hours 0 minutes and 9.93 seconds (9.93s).
[0m15:52:13.415963 [debug] [MainThread]: Command end result
[0m15:52:13.439471 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:52:13.441715 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:52:13.449040 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m15:52:13.449522 [info ] [MainThread]: 
[0m15:52:13.450345 [info ] [MainThread]: [32mCompleted successfully[0m
[0m15:52:13.450808 [info ] [MainThread]: 
[0m15:52:13.451221 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m15:52:13.454105 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 12.19652, "process_in_blocks": "0", "process_kernel_time": 0.433436, "process_mem_max_rss": "175058944", "process_out_blocks": "0", "process_user_time": 4.905618}
[0m15:52:13.454755 [debug] [MainThread]: Command `dbt run` succeeded at 15:52:13.454631 after 12.20 seconds
[0m15:52:13.455789 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10688bbf0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1048573b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1074fb020>]}
[0m15:52:13.456359 [debug] [MainThread]: Flushing usage events
[0m15:52:13.994067 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:52:39.167244 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b77fa70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0ce810>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0ce5a0>]}


============================== 15:52:39.172809 | e6aa210e-7528-4499-aaef-2d8298725968 ==============================
[0m15:52:39.172809 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:52:39.173626 [debug] [MainThread]: running dbt with arguments {'indirect_selection': 'eager', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'no_print': 'None', 'partial_parse': 'True', 'warn_error': 'None', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'invocation_command': 'dbt run --target dev', 'log_cache_events': 'False', 'use_colors': 'True', 'send_anonymous_usage_stats': 'True', 'write_json': 'True', 'cache_selected_only': 'False', 'introspect': 'True', 'target_path': 'None', 'printer_width': '80', 'fail_fast': 'False', 'use_experimental_parser': 'False', 'debug': 'False', 'empty': 'False', 'log_format': 'default', 'version_check': 'True', 'quiet': 'False'}
[0m15:52:39.474684 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'e6aa210e-7528-4499-aaef-2d8298725968', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e1f43b0>]}
[0m15:52:39.552106 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'e6aa210e-7528-4499-aaef-2d8298725968', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc7d4f0>]}
[0m15:52:39.554137 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:52:39.693211 [debug] [MainThread]: checksum: 29ea1ce3a69c23697e5b867170111b74ec8b8d94cb5dc8274e6fc1c7cd223092, vars: {}, profile: , target: dev, version: 1.10.9
[0m15:52:39.790789 [info ] [MainThread]: Unable to do partial parsing because a project config has changed
[0m15:52:39.791405 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'e6aa210e-7528-4499-aaef-2d8298725968', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e5b5c10>]}
[0m15:52:41.185852 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.fct_salesforce
- models.dbt_project
- models.dbt_project.references
[0m15:52:41.198356 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'e6aa210e-7528-4499-aaef-2d8298725968', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e6e7f20>]}
[0m15:52:41.276681 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:52:41.279058 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:52:41.294900 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'e6aa210e-7528-4499-aaef-2d8298725968', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e7f4bc0>]}
[0m15:52:41.295479 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:52:41.295888 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'e6aa210e-7528-4499-aaef-2d8298725968', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2c02f0>]}
[0m15:52:41.298142 [info ] [MainThread]: 
[0m15:52:41.298579 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m15:52:41.298945 [info ] [MainThread]: 
[0m15:52:41.299508 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m15:52:41.306660 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m15:52:41.364314 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m15:52:41.364810 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m15:52:41.365171 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m15:52:41.409734 [debug] [ThreadPool]: SQL status: OK in 0.044 seconds
[0m15:52:41.411401 [debug] [ThreadPool]: On list_memory: Close
[0m15:52:41.413000 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now list_memory_main)
[0m15:52:41.419175 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m15:52:41.419611 [debug] [ThreadPool]: On list_memory_main: BEGIN
[0m15:52:41.419948 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m15:52:41.421626 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m15:52:41.422016 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m15:52:41.422372 [debug] [ThreadPool]: On list_memory_main: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_main"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'memory'
  
[0m15:52:41.438225 [debug] [ThreadPool]: SQL status: OK in 0.015 seconds
[0m15:52:41.440697 [debug] [ThreadPool]: On list_memory_main: ROLLBACK
[0m15:52:41.442154 [debug] [ThreadPool]: Failed to rollback 'list_memory_main'
[0m15:52:41.442520 [debug] [ThreadPool]: On list_memory_main: Close
[0m15:52:41.443187 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'e6aa210e-7528-4499-aaef-2d8298725968', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ba7e9c0>]}
[0m15:52:41.443705 [debug] [MainThread]: Using duckdb connection "master"
[0m15:52:41.444053 [debug] [MainThread]: On master: BEGIN
[0m15:52:41.444382 [debug] [MainThread]: Opening a new connection, currently in state init
[0m15:52:41.445919 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m15:52:41.446289 [debug] [MainThread]: On master: COMMIT
[0m15:52:41.446641 [debug] [MainThread]: Using duckdb connection "master"
[0m15:52:41.446974 [debug] [MainThread]: On master: COMMIT
[0m15:52:41.447503 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:52:41.447860 [debug] [MainThread]: On master: Close
[0m15:52:41.449844 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m15:52:41.450491 [info ] [Thread-1 (]: 1 of 7 START sql view model main.states ........................................ [RUN]
[0m15:52:41.451208 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_main, now model.usawfl.states)
[0m15:52:41.451670 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m15:52:41.459770 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m15:52:41.460688 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m15:52:41.495608 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m15:52:41.496674 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:52:41.497107 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m15:52:41.497495 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:52:41.499172 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:52:41.499668 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:52:41.500244 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
  create view memory."main"."states__dbt_tmp" as (
    select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
  );

[0m15:52:41.502336 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:41.509433 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:52:41.509971 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter view memory."main"."states__dbt_tmp" rename to "states"
[0m15:52:41.510925 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:41.522288 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m15:52:41.522845 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:52:41.523248 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m15:52:41.524074 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:41.530030 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:52:41.530495 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop view if exists memory."main"."states__dbt_backup" cascade
    
[0m15:52:41.531279 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:41.533889 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m15:52:41.535707 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e6aa210e-7528-4499-aaef-2d8298725968', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0fd3a0>]}
[0m15:52:41.536545 [info ] [Thread-1 (]: 1 of 7 OK created sql view model main.states ................................... [[32mOK[0m in 0.08s]
[0m15:52:41.537267 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m15:52:41.537745 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m15:52:41.538279 [info ] [Thread-1 (]: 2 of 7 START sql view model main.tournaments ................................... [RUN]
[0m15:52:41.538934 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m15:52:41.539362 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m15:52:41.543404 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m15:52:41.544954 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m15:52:41.549434 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m15:52:41.550409 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:52:41.551177 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m15:52:41.551722 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:52:41.553567 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:52:41.554024 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:52:41.554695 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
  create view memory."main"."tournaments__dbt_tmp" as (
    with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:52:42.039792 [debug] [Thread-1 (]: SQL status: OK in 0.484 seconds
[0m15:52:42.047604 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:52:42.048259 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter view memory."main"."tournaments__dbt_tmp" rename to "tournaments"
[0m15:52:42.049492 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:42.051405 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m15:52:42.052008 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:52:42.052571 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m15:52:42.053616 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:42.056660 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:52:42.057161 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop view if exists memory."main"."tournaments__dbt_backup" cascade
    
[0m15:52:42.057994 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:42.059678 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m15:52:42.060429 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e6aa210e-7528-4499-aaef-2d8298725968', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ec83e30>]}
[0m15:52:42.061234 [info ] [Thread-1 (]: 2 of 7 OK created sql view model main.tournaments .............................. [[32mOK[0m in 0.52s]
[0m15:52:42.062027 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m15:52:42.062566 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m15:52:42.063171 [info ] [Thread-1 (]: 3 of 7 START sql view model main.contacts ...................................... [RUN]
[0m15:52:42.063771 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m15:52:42.064269 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m15:52:42.073411 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m15:52:42.074480 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m15:52:42.077937 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m15:52:42.078865 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:52:42.079308 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m15:52:42.079719 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:52:42.081346 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:52:42.081764 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:52:42.082442 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
  create view memory."main"."contacts__dbt_tmp" as (
    with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."main"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."main"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:52:42.842688 [debug] [Thread-1 (]: SQL status: OK in 0.759 seconds
[0m15:52:42.846324 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:52:42.846831 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter view memory."main"."contacts__dbt_tmp" rename to "contacts"
[0m15:52:42.847956 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:42.849479 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m15:52:42.849954 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:52:42.850375 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m15:52:42.851376 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:42.854073 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:52:42.854512 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop view if exists memory."main"."contacts__dbt_backup" cascade
    
[0m15:52:42.855289 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:42.856796 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m15:52:42.857450 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e6aa210e-7528-4499-aaef-2d8298725968', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10eb7be60>]}
[0m15:52:42.858143 [info ] [Thread-1 (]: 3 of 7 OK created sql view model main.contacts ................................. [[32mOK[0m in 0.79s]
[0m15:52:42.858831 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m15:52:42.859694 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m15:52:42.860256 [info ] [Thread-1 (]: 4 of 7 START sql view model main.officials ..................................... [RUN]
[0m15:52:42.860877 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m15:52:42.861322 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m15:52:42.866689 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m15:52:42.867600 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m15:52:42.872115 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m15:52:42.873469 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:52:42.874247 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m15:52:42.874805 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:52:42.876614 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:52:42.877084 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:52:42.877961 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
  create view memory."main"."officials__dbt_tmp" as (
    with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."main"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."main"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m15:52:44.810604 [debug] [Thread-1 (]: SQL status: OK in 1.932 seconds
[0m15:52:44.814236 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:52:44.814704 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter view memory."main"."officials__dbt_tmp" rename to "officials"
[0m15:52:44.815699 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:44.817098 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m15:52:44.817583 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:52:44.817980 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m15:52:44.818831 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:44.821329 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:52:44.821756 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop view if exists memory."main"."officials__dbt_backup" cascade
    
[0m15:52:44.822486 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:44.823939 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m15:52:44.824561 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e6aa210e-7528-4499-aaef-2d8298725968', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10eb2a6f0>]}
[0m15:52:44.825225 [info ] [Thread-1 (]: 4 of 7 OK created sql view model main.officials ................................ [[32mOK[0m in 1.96s]
[0m15:52:44.825885 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m15:52:44.826332 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m15:52:44.826839 [info ] [Thread-1 (]: 5 of 7 START sql view model main.teams ......................................... [RUN]
[0m15:52:44.827403 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m15:52:44.827832 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m15:52:44.831962 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m15:52:44.832982 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m15:52:44.839269 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m15:52:44.840300 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:52:44.840861 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m15:52:44.841363 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:52:44.843560 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:52:44.844118 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:52:44.844920 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
  create view memory."main"."teams__dbt_tmp" as (
    with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."main"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:52:46.015657 [debug] [Thread-1 (]: SQL status: OK in 1.170 seconds
[0m15:52:46.019400 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:52:46.019898 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter view memory."main"."teams__dbt_tmp" rename to "teams"
[0m15:52:46.020933 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:46.022531 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m15:52:46.023003 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:52:46.023416 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m15:52:46.024202 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:46.026754 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:52:46.027172 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop view if exists memory."main"."teams__dbt_backup" cascade
    
[0m15:52:46.027861 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:46.029245 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m15:52:46.029837 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e6aa210e-7528-4499-aaef-2d8298725968', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ece8e60>]}
[0m15:52:46.030495 [info ] [Thread-1 (]: 5 of 7 OK created sql view model main.teams .................................... [[32mOK[0m in 1.20s]
[0m15:52:46.031144 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m15:52:46.031900 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m15:52:46.032426 [info ] [Thread-1 (]: 6 of 7 START sql view model main.members ....................................... [RUN]
[0m15:52:46.033091 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m15:52:46.033534 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m15:52:46.038578 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m15:52:46.039534 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m15:52:46.043587 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m15:52:46.044597 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:52:46.045084 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m15:52:46.045484 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:52:46.047290 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:52:46.047794 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:52:46.048328 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
  create view memory."main"."members__dbt_tmp" as (
    with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m15:52:48.404048 [debug] [Thread-1 (]: SQL status: OK in 2.355 seconds
[0m15:52:48.408276 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:52:48.408807 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter view memory."main"."members__dbt_tmp" rename to "members"
[0m15:52:48.409716 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:48.411312 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m15:52:48.411803 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:52:48.412197 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m15:52:48.412976 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:48.415558 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:52:48.416026 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop view if exists memory."main"."members__dbt_backup" cascade
    
[0m15:52:48.416867 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:48.418497 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m15:52:48.419237 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e6aa210e-7528-4499-aaef-2d8298725968', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ecb2210>]}
[0m15:52:48.419918 [info ] [Thread-1 (]: 6 of 7 OK created sql view model main.members .................................. [[32mOK[0m in 2.39s]
[0m15:52:48.420663 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m15:52:48.421135 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m15:52:48.421672 [info ] [Thread-1 (]: 7 of 7 START sql view model main.stats ......................................... [RUN]
[0m15:52:48.422725 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m15:52:48.423259 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m15:52:48.429733 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m15:52:48.430678 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m15:52:48.434497 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m15:52:48.435480 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:52:48.435916 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m15:52:48.436301 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:52:48.438103 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:52:48.439062 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:52:48.440380 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
  create view memory."main"."stats__dbt_tmp" as (
    with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
  );

[0m15:52:50.915714 [debug] [Thread-1 (]: SQL status: OK in 2.474 seconds
[0m15:52:50.919086 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:52:50.919545 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter view memory."main"."stats__dbt_tmp" rename to "stats"
[0m15:52:50.920840 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:50.922604 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m15:52:50.923076 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:52:50.923467 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m15:52:50.924644 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:52:50.928857 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:52:50.929300 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop view if exists memory."main"."stats__dbt_backup" cascade
    
[0m15:52:50.930047 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:52:50.931578 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m15:52:50.932324 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e6aa210e-7528-4499-aaef-2d8298725968', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ed02c90>]}
[0m15:52:50.933024 [info ] [Thread-1 (]: 7 of 7 OK created sql view model main.stats .................................... [[32mOK[0m in 2.51s]
[0m15:52:50.933800 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m15:52:50.935105 [debug] [MainThread]: Using duckdb connection "master"
[0m15:52:50.935502 [debug] [MainThread]: On master: BEGIN
[0m15:52:50.935843 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m15:52:50.937471 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m15:52:50.937882 [debug] [MainThread]: On master: COMMIT
[0m15:52:50.938277 [debug] [MainThread]: Using duckdb connection "master"
[0m15:52:50.938614 [debug] [MainThread]: On master: COMMIT
[0m15:52:50.939220 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:52:50.940298 [debug] [MainThread]: On master: Close
[0m15:52:50.940846 [debug] [MainThread]: Connection 'master' was properly closed.
[0m15:52:50.941177 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m15:52:50.941594 [info ] [MainThread]: 
[0m15:52:50.941976 [info ] [MainThread]: Finished running 7 view models in 0 hours 0 minutes and 9.64 seconds (9.64s).
[0m15:52:50.943732 [debug] [MainThread]: Command end result
[0m15:52:50.967624 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:52:50.969733 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:52:50.977644 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m15:52:50.978114 [info ] [MainThread]: 
[0m15:52:50.978702 [info ] [MainThread]: [32mCompleted successfully[0m
[0m15:52:50.979154 [info ] [MainThread]: 
[0m15:52:50.979562 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m15:52:50.982361 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 11.901878, "process_in_blocks": "0", "process_kernel_time": 0.459964, "process_mem_max_rss": "175820800", "process_out_blocks": "0", "process_user_time": 4.862038}
[0m15:52:50.983110 [debug] [MainThread]: Command `dbt run` succeeded at 15:52:50.982980 after 11.90 seconds
[0m15:52:50.983568 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0ce480>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e1f6330>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2e6420>]}
[0m15:52:50.984090 [debug] [MainThread]: Flushing usage events
[0m15:52:51.482634 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:53:18.812595 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108560f50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1085a66c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1085a6420>]}


============================== 15:53:18.818029 | 38f846b4-b6ce-4e94-ab86-6042ffead3fa ==============================
[0m15:53:18.818029 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:53:18.818786 [debug] [MainThread]: running dbt with arguments {'use_colors': 'True', 'introspect': 'True', 'static_parser': 'True', 'invocation_command': 'dbt run --target dev', 'version_check': 'True', 'use_experimental_parser': 'False', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'no_print': 'None', 'send_anonymous_usage_stats': 'True', 'log_cache_events': 'False', 'indirect_selection': 'eager', 'empty': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'target_path': 'None', 'log_format': 'default', 'debug': 'False', 'warn_error': 'None', 'cache_selected_only': 'False', 'write_json': 'True', 'fail_fast': 'False', 'quiet': 'False', 'partial_parse': 'True', 'printer_width': '80', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs'}
[0m15:53:19.116768 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '38f846b4-b6ce-4e94-ab86-6042ffead3fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107e1a570>]}
[0m15:53:19.194655 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '38f846b4-b6ce-4e94-ab86-6042ffead3fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108001820>]}
[0m15:53:19.196669 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:53:19.335803 [debug] [MainThread]: checksum: 29ea1ce3a69c23697e5b867170111b74ec8b8d94cb5dc8274e6fc1c7cd223092, vars: {}, profile: , target: dev, version: 1.10.9
[0m15:53:19.432982 [info ] [MainThread]: Unable to do partial parsing because a project config has changed
[0m15:53:19.433627 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '38f846b4-b6ce-4e94-ab86-6042ffead3fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10866dc40>]}
[0m15:53:20.876312 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.references
- models.dbt_project.fct_salesforce
- models.dbt_project
[0m15:53:20.888958 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '38f846b4-b6ce-4e94-ab86-6042ffead3fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108b25a60>]}
[0m15:53:20.968342 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:53:20.970551 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:53:20.987032 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '38f846b4-b6ce-4e94-ab86-6042ffead3fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108cb9580>]}
[0m15:53:20.987653 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:53:20.988095 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '38f846b4-b6ce-4e94-ab86-6042ffead3fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108b4e0c0>]}
[0m15:53:20.990412 [info ] [MainThread]: 
[0m15:53:20.990903 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m15:53:20.991287 [info ] [MainThread]: 
[0m15:53:20.991862 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m15:53:20.998752 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m15:53:21.061028 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m15:53:21.061491 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m15:53:21.061855 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m15:53:21.103924 [debug] [ThreadPool]: SQL status: OK in 0.042 seconds
[0m15:53:21.105492 [debug] [ThreadPool]: On list_memory: Close
[0m15:53:21.107055 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now list_memory_main)
[0m15:53:21.113136 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m15:53:21.113681 [debug] [ThreadPool]: On list_memory_main: BEGIN
[0m15:53:21.114013 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m15:53:21.115905 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m15:53:21.116275 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m15:53:21.116623 [debug] [ThreadPool]: On list_memory_main: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_main"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'memory'
  
[0m15:53:21.132521 [debug] [ThreadPool]: SQL status: OK in 0.015 seconds
[0m15:53:21.134196 [debug] [ThreadPool]: On list_memory_main: ROLLBACK
[0m15:53:21.135612 [debug] [ThreadPool]: Failed to rollback 'list_memory_main'
[0m15:53:21.135986 [debug] [ThreadPool]: On list_memory_main: Close
[0m15:53:21.136707 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '38f846b4-b6ce-4e94-ab86-6042ffead3fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10884b770>]}
[0m15:53:21.137253 [debug] [MainThread]: Using duckdb connection "master"
[0m15:53:21.137604 [debug] [MainThread]: On master: BEGIN
[0m15:53:21.137999 [debug] [MainThread]: Opening a new connection, currently in state init
[0m15:53:21.139745 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m15:53:21.140147 [debug] [MainThread]: On master: COMMIT
[0m15:53:21.140520 [debug] [MainThread]: Using duckdb connection "master"
[0m15:53:21.140860 [debug] [MainThread]: On master: COMMIT
[0m15:53:21.141420 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:53:21.141787 [debug] [MainThread]: On master: Close
[0m15:53:21.144052 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m15:53:21.144723 [info ] [Thread-1 (]: 1 of 7 START sql view model main.states ........................................ [RUN]
[0m15:53:21.145295 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_main, now model.usawfl.states)
[0m15:53:21.145734 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m15:53:21.154153 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m15:53:21.155201 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m15:53:21.191940 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m15:53:21.192934 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:53:21.193364 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m15:53:21.193761 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:53:21.195511 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:53:21.195964 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:53:21.196538 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
  create view memory."main"."states__dbt_tmp" as (
    select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
  );

[0m15:53:21.198419 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:53:21.205728 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:53:21.206298 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter view memory."main"."states__dbt_tmp" rename to "states"
[0m15:53:21.207340 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:53:21.218859 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m15:53:21.219403 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:53:21.219861 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m15:53:21.220721 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:53:21.227060 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:53:21.227564 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop view if exists memory."main"."states__dbt_backup" cascade
    
[0m15:53:21.228358 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:53:21.231161 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m15:53:21.233011 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '38f846b4-b6ce-4e94-ab86-6042ffead3fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1086a38c0>]}
[0m15:53:21.233777 [info ] [Thread-1 (]: 1 of 7 OK created sql view model main.states ................................... [[32mOK[0m in 0.09s]
[0m15:53:21.234673 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m15:53:21.235201 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m15:53:21.235792 [info ] [Thread-1 (]: 2 of 7 START sql view model main.tournaments ................................... [RUN]
[0m15:53:21.236400 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m15:53:21.236920 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m15:53:21.242146 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m15:53:21.243376 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m15:53:21.248628 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m15:53:21.249573 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:53:21.250125 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m15:53:21.250672 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:53:21.252901 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:53:21.253437 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:53:21.254185 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
  create view memory."main"."tournaments__dbt_tmp" as (
    with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:53:21.917541 [debug] [Thread-1 (]: SQL status: OK in 0.662 seconds
[0m15:53:21.926361 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:53:21.927240 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter view memory."main"."tournaments__dbt_tmp" rename to "tournaments"
[0m15:53:21.928636 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:53:21.930592 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m15:53:21.931200 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:53:21.931769 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m15:53:21.932818 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:53:21.936770 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:53:21.937436 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop view if exists memory."main"."tournaments__dbt_backup" cascade
    
[0m15:53:21.938389 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:53:21.940156 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m15:53:21.940890 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '38f846b4-b6ce-4e94-ab86-6042ffead3fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109149e20>]}
[0m15:53:21.941687 [info ] [Thread-1 (]: 2 of 7 OK created sql view model main.tournaments .............................. [[32mOK[0m in 0.70s]
[0m15:53:21.942479 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m15:53:21.943029 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m15:53:21.943638 [info ] [Thread-1 (]: 3 of 7 START sql view model main.contacts ...................................... [RUN]
[0m15:53:21.944321 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m15:53:21.944836 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m15:53:21.953785 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m15:53:21.954934 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m15:53:21.959005 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m15:53:21.960029 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:53:21.960463 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m15:53:21.960877 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:53:21.962576 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:53:21.963028 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:53:21.963882 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
  create view memory."main"."contacts__dbt_tmp" as (
    with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."main"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."main"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:53:22.734260 [debug] [Thread-1 (]: SQL status: OK in 0.769 seconds
[0m15:53:22.738044 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:53:22.738544 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter view memory."main"."contacts__dbt_tmp" rename to "contacts"
[0m15:53:22.739656 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:53:22.741115 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m15:53:22.741561 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:53:22.741971 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m15:53:22.742851 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:53:22.745365 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:53:22.745817 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop view if exists memory."main"."contacts__dbt_backup" cascade
    
[0m15:53:22.746568 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:53:22.748025 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m15:53:22.748635 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '38f846b4-b6ce-4e94-ab86-6042ffead3fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10911b0e0>]}
[0m15:53:22.749297 [info ] [Thread-1 (]: 3 of 7 OK created sql view model main.contacts ................................. [[32mOK[0m in 0.80s]
[0m15:53:22.750071 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m15:53:22.750962 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m15:53:22.751534 [info ] [Thread-1 (]: 4 of 7 START sql view model main.officials ..................................... [RUN]
[0m15:53:22.752146 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m15:53:22.752582 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m15:53:22.758033 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m15:53:22.759029 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m15:53:22.763440 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m15:53:22.764339 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:53:22.764785 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m15:53:22.765192 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:53:22.766866 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:53:22.767298 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:53:22.767928 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
  create view memory."main"."officials__dbt_tmp" as (
    with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."main"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."main"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m15:53:24.600440 [debug] [Thread-1 (]: SQL status: OK in 1.832 seconds
[0m15:53:24.605742 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:53:24.606950 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter view memory."main"."officials__dbt_tmp" rename to "officials"
[0m15:53:24.608399 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:53:24.610332 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m15:53:24.611478 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:53:24.612299 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m15:53:24.613970 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:53:24.619055 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:53:24.620283 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop view if exists memory."main"."officials__dbt_backup" cascade
    
[0m15:53:24.623631 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:53:24.627417 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m15:53:24.628908 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '38f846b4-b6ce-4e94-ab86-6042ffead3fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10905b170>]}
[0m15:53:24.631096 [info ] [Thread-1 (]: 4 of 7 OK created sql view model main.officials ................................ [[32mOK[0m in 1.88s]
[0m15:53:24.632521 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m15:53:24.633495 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m15:53:24.634777 [info ] [Thread-1 (]: 5 of 7 START sql view model main.teams ......................................... [RUN]
[0m15:53:24.636296 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m15:53:24.637565 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m15:53:24.647367 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m15:53:24.651111 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m15:53:24.670530 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m15:53:24.676343 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:53:24.677555 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m15:53:24.678985 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:53:24.682899 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m15:53:24.683785 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:53:24.685431 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
  create view memory."main"."teams__dbt_tmp" as (
    with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."main"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:53:25.742789 [debug] [Thread-1 (]: SQL status: OK in 1.056 seconds
[0m15:53:25.746173 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:53:25.746627 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter view memory."main"."teams__dbt_tmp" rename to "teams"
[0m15:53:25.747483 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:53:25.748837 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m15:53:25.749259 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:53:25.749653 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m15:53:25.750493 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:53:25.753049 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:53:25.753572 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop view if exists memory."main"."teams__dbt_backup" cascade
    
[0m15:53:25.754584 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:53:25.756461 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m15:53:25.757212 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '38f846b4-b6ce-4e94-ab86-6042ffead3fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10919c1d0>]}
[0m15:53:25.757898 [info ] [Thread-1 (]: 5 of 7 OK created sql view model main.teams .................................... [[32mOK[0m in 1.12s]
[0m15:53:25.758632 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m15:53:25.759444 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m15:53:25.760064 [info ] [Thread-1 (]: 6 of 7 START sql view model main.members ....................................... [RUN]
[0m15:53:25.760604 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m15:53:25.761044 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m15:53:25.765226 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m15:53:25.766030 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m15:53:25.769600 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m15:53:25.770525 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:53:25.771061 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m15:53:25.771592 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:53:25.773487 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:53:25.774012 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:53:25.774694 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
  create view memory."main"."members__dbt_tmp" as (
    with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m15:53:28.079640 [debug] [Thread-1 (]: SQL status: OK in 2.304 seconds
[0m15:53:28.083512 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:53:28.084101 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter view memory."main"."members__dbt_tmp" rename to "members"
[0m15:53:28.085187 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:53:28.086681 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m15:53:28.087127 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:53:28.087534 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m15:53:28.088532 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:53:28.091360 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:53:28.091842 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop view if exists memory."main"."members__dbt_backup" cascade
    
[0m15:53:28.092704 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:53:28.094271 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m15:53:28.094879 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '38f846b4-b6ce-4e94-ab86-6042ffead3fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1090fbb30>]}
[0m15:53:28.095541 [info ] [Thread-1 (]: 6 of 7 OK created sql view model main.members .................................. [[32mOK[0m in 2.33s]
[0m15:53:28.096196 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m15:53:28.096641 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m15:53:28.097241 [info ] [Thread-1 (]: 7 of 7 START sql view model main.stats ......................................... [RUN]
[0m15:53:28.097919 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m15:53:28.098357 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m15:53:28.104120 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m15:53:28.105295 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m15:53:28.109167 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m15:53:28.110149 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:53:28.111204 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m15:53:28.112026 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:53:28.113911 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:53:28.114420 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:53:28.115288 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
  create view memory."main"."stats__dbt_tmp" as (
    with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
  );

[0m15:53:30.531015 [debug] [Thread-1 (]: SQL status: OK in 2.414 seconds
[0m15:53:30.534141 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:53:30.534588 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter view memory."main"."stats__dbt_tmp" rename to "stats"
[0m15:53:30.535873 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:53:30.537527 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m15:53:30.538064 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:53:30.538447 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m15:53:30.539641 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:53:30.543769 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:53:30.544213 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop view if exists memory."main"."stats__dbt_backup" cascade
    
[0m15:53:30.544951 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:53:30.546371 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m15:53:30.546955 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '38f846b4-b6ce-4e94-ab86-6042ffead3fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1091b04a0>]}
[0m15:53:30.547638 [info ] [Thread-1 (]: 7 of 7 OK created sql view model main.stats .................................... [[32mOK[0m in 2.45s]
[0m15:53:30.548294 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m15:53:30.549468 [debug] [MainThread]: Using duckdb connection "master"
[0m15:53:30.549830 [debug] [MainThread]: On master: BEGIN
[0m15:53:30.550153 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m15:53:30.551734 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m15:53:30.552097 [debug] [MainThread]: On master: COMMIT
[0m15:53:30.552438 [debug] [MainThread]: Using duckdb connection "master"
[0m15:53:30.552762 [debug] [MainThread]: On master: COMMIT
[0m15:53:30.553274 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:53:30.553627 [debug] [MainThread]: On master: Close
[0m15:53:30.554132 [debug] [MainThread]: Connection 'master' was properly closed.
[0m15:53:30.554823 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m15:53:30.555568 [info ] [MainThread]: 
[0m15:53:30.556035 [info ] [MainThread]: Finished running 7 view models in 0 hours 0 minutes and 9.56 seconds (9.56s).
[0m15:53:30.557882 [debug] [MainThread]: Command end result
[0m15:53:30.580967 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:53:30.583831 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:53:30.591891 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m15:53:30.592321 [info ] [MainThread]: 
[0m15:53:30.592742 [info ] [MainThread]: [32mCompleted successfully[0m
[0m15:53:30.593106 [info ] [MainThread]: 
[0m15:53:30.593498 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m15:53:30.595969 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 11.872119, "process_in_blocks": "0", "process_kernel_time": 0.447316, "process_mem_max_rss": "175063040", "process_out_blocks": "0", "process_user_time": 4.926593}
[0m15:53:30.596680 [debug] [MainThread]: Command `dbt run` succeeded at 15:53:30.596524 after 11.87 seconds
[0m15:53:30.597267 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108543800>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1091a1a00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107c92900>]}
[0m15:53:30.597757 [debug] [MainThread]: Flushing usage events
[0m15:53:31.119574 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:54:47.091204 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1099af830>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c1ca480>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c1ca210>]}


============================== 15:54:47.096543 | 795ad323-812d-4afe-99eb-22d42af81bd5 ==============================
[0m15:54:47.096543 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:54:47.097221 [debug] [MainThread]: running dbt with arguments {'invocation_command': 'dbt run', 'quiet': 'False', 'target_path': 'None', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'send_anonymous_usage_stats': 'True', 'introspect': 'True', 'use_colors': 'True', 'log_cache_events': 'False', 'fail_fast': 'False', 'indirect_selection': 'eager', 'log_format': 'default', 'no_print': 'None', 'printer_width': '80', 'partial_parse': 'True', 'warn_error': 'None', 'debug': 'False', 'static_parser': 'True', 'empty': 'False', 'version_check': 'True', 'use_experimental_parser': 'False', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'write_json': 'True', 'cache_selected_only': 'False'}
[0m15:54:47.403899 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '795ad323-812d-4afe-99eb-22d42af81bd5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109abcbc0>]}
[0m15:54:47.640261 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '795ad323-812d-4afe-99eb-22d42af81bd5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c1fc380>]}
[0m15:54:47.642254 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:54:47.801862 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:54:47.910361 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m15:54:47.910905 [debug] [MainThread]: previous checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, current checksum: 29ea1ce3a69c23697e5b867170111b74ec8b8d94cb5dc8274e6fc1c7cd223092
[0m15:54:47.911323 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '795ad323-812d-4afe-99eb-22d42af81bd5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c6ad4f0>]}
[0m15:54:49.463575 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.references
- models.dbt_project
- models.dbt_project.fct_salesforce
[0m15:54:49.475465 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '795ad323-812d-4afe-99eb-22d42af81bd5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c8e35f0>]}
[0m15:54:49.558997 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:54:49.561404 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:54:49.578026 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '795ad323-812d-4afe-99eb-22d42af81bd5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c8f8c20>]}
[0m15:54:49.578649 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:54:49.579134 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '795ad323-812d-4afe-99eb-22d42af81bd5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b4a4950>]}
[0m15:54:49.581439 [info ] [MainThread]: 
[0m15:54:49.581871 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m15:54:49.582232 [info ] [MainThread]: 
[0m15:54:49.582789 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m15:54:49.589212 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m15:54:49.647685 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m15:54:49.648146 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m15:54:49.648500 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m15:54:49.691378 [debug] [ThreadPool]: SQL status: OK in 0.043 seconds
[0m15:54:49.692957 [debug] [ThreadPool]: On list_memory: Close
[0m15:54:49.694538 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now list_memory_main)
[0m15:54:49.700496 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m15:54:49.700924 [debug] [ThreadPool]: On list_memory_main: BEGIN
[0m15:54:49.701255 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m15:54:49.702854 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m15:54:49.703218 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m15:54:49.703575 [debug] [ThreadPool]: On list_memory_main: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_main"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'memory'
  
[0m15:54:49.719649 [debug] [ThreadPool]: SQL status: OK in 0.016 seconds
[0m15:54:49.721277 [debug] [ThreadPool]: On list_memory_main: ROLLBACK
[0m15:54:49.722652 [debug] [ThreadPool]: Failed to rollback 'list_memory_main'
[0m15:54:49.723018 [debug] [ThreadPool]: On list_memory_main: Close
[0m15:54:49.723780 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '795ad323-812d-4afe-99eb-22d42af81bd5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c6c8680>]}
[0m15:54:49.724481 [debug] [MainThread]: Using duckdb connection "master"
[0m15:54:49.724990 [debug] [MainThread]: On master: BEGIN
[0m15:54:49.725350 [debug] [MainThread]: Opening a new connection, currently in state init
[0m15:54:49.726967 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m15:54:49.727365 [debug] [MainThread]: On master: COMMIT
[0m15:54:49.727730 [debug] [MainThread]: Using duckdb connection "master"
[0m15:54:49.728068 [debug] [MainThread]: On master: COMMIT
[0m15:54:49.728605 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:54:49.728974 [debug] [MainThread]: On master: Close
[0m15:54:49.731138 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m15:54:49.731743 [info ] [Thread-1 (]: 1 of 7 START sql view model main.states ........................................ [RUN]
[0m15:54:49.732291 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_main, now model.usawfl.states)
[0m15:54:49.732718 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m15:54:49.741519 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m15:54:49.742508 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m15:54:49.779518 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m15:54:49.780422 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:54:49.780843 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m15:54:49.781233 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:54:49.783008 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:54:49.783476 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:54:49.784107 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
  create view memory."main"."states__dbt_tmp" as (
    select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
  );

[0m15:54:49.786062 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:54:49.792983 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:54:49.793484 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter view memory."main"."states__dbt_tmp" rename to "states"
[0m15:54:49.794373 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:54:49.806614 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m15:54:49.807153 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:54:49.807662 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m15:54:49.808750 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:54:49.815237 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m15:54:49.815735 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop view if exists memory."main"."states__dbt_backup" cascade
    
[0m15:54:49.816526 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:54:49.819166 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m15:54:49.821065 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '795ad323-812d-4afe-99eb-22d42af81bd5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c863fb0>]}
[0m15:54:49.821806 [info ] [Thread-1 (]: 1 of 7 OK created sql view model main.states ................................... [[32mOK[0m in 0.09s]
[0m15:54:49.822719 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m15:54:49.823331 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m15:54:49.823958 [info ] [Thread-1 (]: 2 of 7 START sql view model main.tournaments ................................... [RUN]
[0m15:54:49.824510 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m15:54:49.824931 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m15:54:49.829199 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m15:54:49.830177 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m15:54:49.833607 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m15:54:49.834378 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:54:49.834816 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m15:54:49.835212 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:54:49.836887 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:54:49.837326 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:54:49.837851 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
  create view memory."main"."tournaments__dbt_tmp" as (
    with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:54:50.761951 [debug] [Thread-1 (]: SQL status: OK in 0.923 seconds
[0m15:54:50.769835 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:54:50.770515 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter view memory."main"."tournaments__dbt_tmp" rename to "tournaments"
[0m15:54:50.771948 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:54:50.774188 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m15:54:50.774841 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:54:50.775421 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m15:54:50.776556 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:54:50.779558 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m15:54:50.780103 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop view if exists memory."main"."tournaments__dbt_backup" cascade
    
[0m15:54:50.781128 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:54:50.782884 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m15:54:50.783601 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '795ad323-812d-4afe-99eb-22d42af81bd5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cdabdd0>]}
[0m15:54:50.784390 [info ] [Thread-1 (]: 2 of 7 OK created sql view model main.tournaments .............................. [[32mOK[0m in 0.96s]
[0m15:54:50.785178 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m15:54:50.785715 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m15:54:50.786392 [info ] [Thread-1 (]: 3 of 7 START sql view model main.contacts ...................................... [RUN]
[0m15:54:50.786975 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m15:54:50.787410 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m15:54:50.795410 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m15:54:50.796615 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m15:54:50.800453 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m15:54:50.801454 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:54:50.801868 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m15:54:50.802304 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:54:50.804044 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:54:50.804466 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:54:50.805150 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
  create view memory."main"."contacts__dbt_tmp" as (
    with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."main"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."main"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:54:51.525039 [debug] [Thread-1 (]: SQL status: OK in 0.719 seconds
[0m15:54:51.528291 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:54:51.528728 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter view memory."main"."contacts__dbt_tmp" rename to "contacts"
[0m15:54:51.529685 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:54:51.531008 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m15:54:51.531427 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:54:51.531822 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m15:54:51.532645 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:54:51.535555 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:54:51.536156 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop view if exists memory."main"."contacts__dbt_backup" cascade
    
[0m15:54:51.536986 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:54:51.538585 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m15:54:51.539379 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '795ad323-812d-4afe-99eb-22d42af81bd5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cc73fe0>]}
[0m15:54:51.540100 [info ] [Thread-1 (]: 3 of 7 OK created sql view model main.contacts ................................. [[32mOK[0m in 0.75s]
[0m15:54:51.540760 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m15:54:51.541676 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m15:54:51.542234 [info ] [Thread-1 (]: 4 of 7 START sql view model main.officials ..................................... [RUN]
[0m15:54:51.542822 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m15:54:51.543255 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m15:54:51.547956 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m15:54:51.548778 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m15:54:51.552669 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m15:54:51.553584 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:54:51.554132 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m15:54:51.554526 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:54:51.556707 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:54:51.557283 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:54:51.558074 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
  create view memory."main"."officials__dbt_tmp" as (
    with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."main"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."main"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m15:54:53.328444 [debug] [Thread-1 (]: SQL status: OK in 1.770 seconds
[0m15:54:53.331901 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:54:53.332355 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter view memory."main"."officials__dbt_tmp" rename to "officials"
[0m15:54:53.333321 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:54:53.334673 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m15:54:53.335100 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:54:53.335500 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m15:54:53.336347 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:54:53.338953 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m15:54:53.339433 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop view if exists memory."main"."officials__dbt_backup" cascade
    
[0m15:54:53.340235 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:54:53.341844 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m15:54:53.342584 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '795ad323-812d-4afe-99eb-22d42af81bd5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cccfa40>]}
[0m15:54:53.343304 [info ] [Thread-1 (]: 4 of 7 OK created sql view model main.officials ................................ [[32mOK[0m in 1.80s]
[0m15:54:53.343991 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m15:54:53.344456 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m15:54:53.344982 [info ] [Thread-1 (]: 5 of 7 START sql view model main.teams ......................................... [RUN]
[0m15:54:53.345624 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m15:54:53.346143 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m15:54:53.349764 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m15:54:53.350596 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m15:54:53.357683 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m15:54:53.358570 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:54:53.358990 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m15:54:53.359380 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:54:53.361223 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:54:53.361675 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:54:53.362164 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
  create view memory."main"."teams__dbt_tmp" as (
    with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."main"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:54:54.625035 [debug] [Thread-1 (]: SQL status: OK in 1.262 seconds
[0m15:54:54.629404 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:54:54.629946 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter view memory."main"."teams__dbt_tmp" rename to "teams"
[0m15:54:54.631178 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:54:54.633477 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m15:54:54.634095 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:54:54.634534 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m15:54:54.635535 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:54:54.640476 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m15:54:54.641687 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop view if exists memory."main"."teams__dbt_backup" cascade
    
[0m15:54:54.643612 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:54:54.645880 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m15:54:54.646723 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '795ad323-812d-4afe-99eb-22d42af81bd5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cde8440>]}
[0m15:54:54.647657 [info ] [Thread-1 (]: 5 of 7 OK created sql view model main.teams .................................... [[32mOK[0m in 1.30s]
[0m15:54:54.648760 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m15:54:54.650015 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m15:54:54.650789 [info ] [Thread-1 (]: 6 of 7 START sql view model main.members ....................................... [RUN]
[0m15:54:54.651670 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m15:54:54.652426 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m15:54:54.658772 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m15:54:54.660846 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m15:54:54.666652 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m15:54:54.668081 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:54:54.668814 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m15:54:54.669480 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:54:54.673359 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m15:54:54.674581 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:54:54.675622 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
  create view memory."main"."members__dbt_tmp" as (
    with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
  );

[0m15:54:57.022886 [debug] [Thread-1 (]: SQL status: OK in 2.346 seconds
[0m15:54:57.026412 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:54:57.026912 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter view memory."main"."members__dbt_tmp" rename to "members"
[0m15:54:57.027878 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:54:57.029492 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m15:54:57.030016 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:54:57.030442 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m15:54:57.031430 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:54:57.034168 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m15:54:57.034687 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop view if exists memory."main"."members__dbt_backup" cascade
    
[0m15:54:57.035537 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:54:57.037159 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m15:54:57.037883 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '795ad323-812d-4afe-99eb-22d42af81bd5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cd44350>]}
[0m15:54:57.038686 [info ] [Thread-1 (]: 6 of 7 OK created sql view model main.members .................................. [[32mOK[0m in 2.39s]
[0m15:54:57.039513 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m15:54:57.040032 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m15:54:57.040627 [info ] [Thread-1 (]: 7 of 7 START sql view model main.stats ......................................... [RUN]
[0m15:54:57.041342 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m15:54:57.041831 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m15:54:57.047844 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m15:54:57.048899 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m15:54:57.054558 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m15:54:57.055864 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:54:57.056431 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m15:54:57.057109 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:54:57.059666 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:54:57.060207 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:54:57.061136 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
  create view memory."main"."stats__dbt_tmp" as (
    with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."main"."teams" t
    on
        m.team__c = t.id

    left join
        memory."main"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
  );

[0m15:54:59.313719 [debug] [Thread-1 (]: SQL status: OK in 2.252 seconds
[0m15:54:59.316820 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:54:59.317248 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter view memory."main"."stats__dbt_tmp" rename to "stats"
[0m15:54:59.318452 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:54:59.319993 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m15:54:59.320440 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:54:59.320836 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m15:54:59.322066 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:54:59.326406 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m15:54:59.326862 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop view if exists memory."main"."stats__dbt_backup" cascade
    
[0m15:54:59.327627 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m15:54:59.329090 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m15:54:59.329811 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '795ad323-812d-4afe-99eb-22d42af81bd5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ce043e0>]}
[0m15:54:59.330482 [info ] [Thread-1 (]: 7 of 7 OK created sql view model main.stats .................................... [[32mOK[0m in 2.29s]
[0m15:54:59.331141 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m15:54:59.332418 [debug] [MainThread]: Using duckdb connection "master"
[0m15:54:59.332784 [debug] [MainThread]: On master: BEGIN
[0m15:54:59.333112 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m15:54:59.334680 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m15:54:59.335041 [debug] [MainThread]: On master: COMMIT
[0m15:54:59.335386 [debug] [MainThread]: Using duckdb connection "master"
[0m15:54:59.335713 [debug] [MainThread]: On master: COMMIT
[0m15:54:59.336244 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:54:59.337111 [debug] [MainThread]: On master: Close
[0m15:54:59.337809 [debug] [MainThread]: Connection 'master' was properly closed.
[0m15:54:59.338168 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m15:54:59.338916 [info ] [MainThread]: 
[0m15:54:59.339605 [info ] [MainThread]: Finished running 7 view models in 0 hours 0 minutes and 9.76 seconds (9.76s).
[0m15:54:59.341454 [debug] [MainThread]: Command end result
[0m15:54:59.364915 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:54:59.366823 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:54:59.379456 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m15:54:59.379987 [info ] [MainThread]: 
[0m15:54:59.380495 [info ] [MainThread]: [32mCompleted successfully[0m
[0m15:54:59.381052 [info ] [MainThread]: 
[0m15:54:59.381531 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m15:54:59.384441 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 12.39495, "process_in_blocks": "0", "process_kernel_time": 0.49888, "process_mem_max_rss": "175296512", "process_out_blocks": "0", "process_user_time": 5.064949}
[0m15:54:59.385360 [debug] [MainThread]: Command `dbt run` succeeded at 15:54:59.385191 after 12.40 seconds
[0m15:54:59.385934 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c1ca330>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c1ca480>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c1acf80>]}
[0m15:54:59.387942 [debug] [MainThread]: Flushing usage events
[0m15:54:59.893197 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:57:51.364986 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105676270>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105d52600>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105d52390>]}


============================== 15:57:51.372550 | e152e860-6b4e-459b-9533-30a96a88d8bf ==============================
[0m15:57:51.372550 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:57:51.373361 [debug] [MainThread]: running dbt with arguments {'indirect_selection': 'eager', 'warn_error': 'None', 'empty': 'False', 'write_json': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'send_anonymous_usage_stats': 'True', 'use_colors': 'True', 'partial_parse': 'True', 'no_print': 'None', 'static_parser': 'True', 'fail_fast': 'False', 'use_experimental_parser': 'False', 'invocation_command': 'dbt run -s contacts --debug', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'target_path': 'None', 'quiet': 'False', 'version_check': 'True', 'log_format': 'default', 'printer_width': '80', 'log_cache_events': 'False', 'introspect': 'True', 'debug': 'True', 'cache_selected_only': 'False'}
[0m15:57:51.768109 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'e152e860-6b4e-459b-9533-30a96a88d8bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105dd3a70>]}
[0m15:57:51.853480 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'e152e860-6b4e-459b-9533-30a96a88d8bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105dd3320>]}
[0m15:57:51.857246 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:57:52.024780 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:57:52.196373 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:57:52.196981 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:57:52.248235 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project
- models.dbt_project.fct_salesforce
- models.dbt_project.references
[0m15:57:52.288753 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'e152e860-6b4e-459b-9533-30a96a88d8bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105f665d0>]}
[0m15:57:52.376572 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:57:52.380073 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:57:52.411816 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'e152e860-6b4e-459b-9533-30a96a88d8bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1063219a0>]}
[0m15:57:52.412444 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:57:52.412881 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'e152e860-6b4e-459b-9533-30a96a88d8bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1062e3590>]}
[0m15:57:52.415243 [info ] [MainThread]: 
[0m15:57:52.416052 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m15:57:52.416439 [info ] [MainThread]: 
[0m15:57:52.417089 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m15:57:52.418494 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m15:57:52.491845 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m15:57:52.492449 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m15:57:52.492954 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m15:57:52.558710 [debug] [ThreadPool]: SQL status: OK in 0.066 seconds
[0m15:57:52.560450 [debug] [ThreadPool]: On list_memory: Close
[0m15:57:52.568470 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now list_memory_main)
[0m15:57:52.575420 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m15:57:52.576050 [debug] [ThreadPool]: On list_memory_main: BEGIN
[0m15:57:52.576479 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m15:57:52.578260 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m15:57:52.578711 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m15:57:52.579137 [debug] [ThreadPool]: On list_memory_main: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_main"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'memory'
  
[0m15:57:52.596587 [debug] [ThreadPool]: SQL status: OK in 0.017 seconds
[0m15:57:52.598350 [debug] [ThreadPool]: On list_memory_main: ROLLBACK
[0m15:57:52.601043 [debug] [ThreadPool]: Failed to rollback 'list_memory_main'
[0m15:57:52.601700 [debug] [ThreadPool]: On list_memory_main: Close
[0m15:57:52.602832 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'e152e860-6b4e-459b-9533-30a96a88d8bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x103702390>]}
[0m15:57:52.621449 [debug] [MainThread]: Using duckdb connection "master"
[0m15:57:52.655018 [debug] [MainThread]: On master: BEGIN
[0m15:57:52.655818 [debug] [MainThread]: Opening a new connection, currently in state init
[0m15:57:52.658693 [debug] [MainThread]: SQL status: OK in 0.003 seconds
[0m15:57:52.659528 [debug] [MainThread]: On master: COMMIT
[0m15:57:52.660131 [debug] [MainThread]: Using duckdb connection "master"
[0m15:57:52.660549 [debug] [MainThread]: On master: COMMIT
[0m15:57:52.673007 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:57:52.675143 [debug] [MainThread]: On master: Close
[0m15:57:52.678724 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m15:57:52.679663 [info ] [Thread-1 (]: 1 of 1 START sql view model main.contacts ...................................... [RUN]
[0m15:57:52.680257 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_main, now model.usawfl.contacts)
[0m15:57:52.680860 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m15:57:52.706329 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m15:57:52.707376 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m15:57:52.742739 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m15:57:52.743789 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:57:52.744259 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m15:57:52.744690 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m15:57:52.746385 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m15:57:52.747043 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m15:57:52.747888 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
  create view memory."main"."contacts__dbt_tmp" as (
    with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."main"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."main"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:57:53.665010 [debug] [Thread-1 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
  create view memory."main"."contacts__dbt_tmp" as (
    with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."main"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."main"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m15:57:53.667976 [debug] [Thread-1 (]: DuckDB adapter: Rolling back transaction.
[0m15:57:53.668707 [debug] [Thread-1 (]: On model.usawfl.contacts: ROLLBACK
[0m15:57:53.683230 [debug] [Thread-1 (]: Failed to rollback 'model.usawfl.contacts'
[0m15:57:53.683876 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m15:57:53.688117 [debug] [Thread-1 (]: Runtime Error in model contacts (models/fct_salesforce/contacts.sql)
  Catalog Error: Table with name states does not exist!
  Did you mean "information_schema.tables"?
  
  LINE 78:         memory."main"."states" sa
                   ^
[0m15:57:53.691042 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e152e860-6b4e-459b-9533-30a96a88d8bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105f65160>]}
[0m15:57:53.692117 [error] [Thread-1 (]: 1 of 1 ERROR creating sql view model main.contacts ............................. [[31mERROR[0m in 1.01s]
[0m15:57:53.692950 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m15:57:53.694077 [debug] [Thread-4 (]: Marking all children of 'model.usawfl.contacts' to be skipped because of status 'error'.  Reason: Runtime Error in model contacts (models/fct_salesforce/contacts.sql)
  Catalog Error: Table with name states does not exist!
  Did you mean "information_schema.tables"?
  
  LINE 78:         memory."main"."states" sa
                   ^.
[0m15:57:53.696926 [debug] [MainThread]: Using duckdb connection "master"
[0m15:57:53.697461 [debug] [MainThread]: On master: BEGIN
[0m15:57:53.698055 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m15:57:53.700626 [debug] [MainThread]: SQL status: OK in 0.003 seconds
[0m15:57:53.701222 [debug] [MainThread]: On master: COMMIT
[0m15:57:53.701832 [debug] [MainThread]: Using duckdb connection "master"
[0m15:57:53.702770 [debug] [MainThread]: On master: COMMIT
[0m15:57:53.703748 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:57:53.704329 [debug] [MainThread]: On master: Close
[0m15:57:53.705606 [debug] [MainThread]: Connection 'master' was properly closed.
[0m15:57:53.706698 [debug] [MainThread]: Connection 'model.usawfl.contacts' was properly closed.
[0m15:57:53.707205 [info ] [MainThread]: 
[0m15:57:53.707717 [info ] [MainThread]: Finished running 1 view model in 0 hours 0 minutes and 1.29 seconds (1.29s).
[0m15:57:53.708845 [debug] [MainThread]: Command end result
[0m15:57:53.737465 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m15:57:53.739576 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m15:57:53.748611 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m15:57:53.749096 [info ] [MainThread]: 
[0m15:57:53.749601 [info ] [MainThread]: [31mCompleted with 1 error, 0 partial successes, and 0 warnings:[0m
[0m15:57:53.750021 [info ] [MainThread]: 
[0m15:57:53.750501 [error] [MainThread]: [31mFailure in model contacts (models/fct_salesforce/contacts.sql)[0m
[0m15:57:53.751036 [error] [MainThread]:   Runtime Error in model contacts (models/fct_salesforce/contacts.sql)
  Catalog Error: Table with name states does not exist!
  Did you mean "information_schema.tables"?
  
  LINE 78:         memory."main"."states" sa
                   ^
[0m15:57:53.751603 [info ] [MainThread]: 
[0m15:57:53.752100 [info ] [MainThread]:   compiled code at target/compiled/usawfl/models/fct_salesforce/contacts.sql
[0m15:57:53.752540 [info ] [MainThread]: 
[0m15:57:53.753077 [info ] [MainThread]: Done. PASS=0 WARN=0 ERROR=1 SKIP=0 NO-OP=0 TOTAL=1
[0m15:57:53.756252 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": false, "command_wall_clock_time": 2.4891093, "process_in_blocks": "0", "process_kernel_time": 0.624143, "process_mem_max_rss": "140697600", "process_out_blocks": "0", "process_user_time": 3.230138}
[0m15:57:53.756985 [debug] [MainThread]: Command `dbt run` failed at 15:57:53.756848 after 2.49 seconds
[0m15:57:53.757569 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1051c85c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105cef0e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105e78320>]}
[0m15:57:53.758133 [debug] [MainThread]: Flushing usage events
[0m15:57:54.252194 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:01:00.959522 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114087800>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114702660>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1147023c0>]}


============================== 16:01:00.967263 | b976bdc3-0c62-4803-81aa-3e79c637678d ==============================
[0m16:01:00.967263 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:01:00.967960 [debug] [MainThread]: running dbt with arguments {'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'printer_width': '80', 'send_anonymous_usage_stats': 'True', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'fail_fast': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'debug': 'True', 'use_colors': 'True', 'static_parser': 'True', 'empty': 'False', 'cache_selected_only': 'False', 'write_json': 'True', 'use_experimental_parser': 'False', 'introspect': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'warn_error': 'None', 'log_format': 'default', 'quiet': 'False', 'version_check': 'True', 'no_print': 'None', 'invocation_command': 'dbt run -s contacts --debug', 'target_path': 'None', 'partial_parse': 'True'}
[0m16:01:01.518930 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'b976bdc3-0c62-4803-81aa-3e79c637678d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114702c00>]}
[0m16:01:01.606493 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'b976bdc3-0c62-4803-81aa-3e79c637678d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11213ec60>]}
[0m16:01:01.609894 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:01:01.764724 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:01:01.869541 [info ] [MainThread]: Unable to do partial parsing because a project config has changed
[0m16:01:01.870139 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'b976bdc3-0c62-4803-81aa-3e79c637678d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114be55e0>]}
[0m16:01:03.311221 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.dbt_project.fct_salesforce
- models.dbt_project
- models.dbt_project.references
[0m16:01:03.323802 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'b976bdc3-0c62-4803-81aa-3e79c637678d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114984950>]}
[0m16:01:03.407394 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:01:03.409926 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:01:03.439020 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'b976bdc3-0c62-4803-81aa-3e79c637678d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1148ec980>]}
[0m16:01:03.439647 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:01:03.440068 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'b976bdc3-0c62-4803-81aa-3e79c637678d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114735490>]}
[0m16:01:03.441920 [info ] [MainThread]: 
[0m16:01:03.442368 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m16:01:03.442760 [info ] [MainThread]: 
[0m16:01:03.443347 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:01:03.444726 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m16:01:03.512749 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:01:03.514227 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:01:03.517228 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:01:03.598174 [debug] [ThreadPool]: SQL status: OK in 0.081 seconds
[0m16:01:03.599851 [debug] [ThreadPool]: On list_memory: Close
[0m16:01:03.607794 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now list_memory_main)
[0m16:01:03.616029 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m16:01:03.616685 [debug] [ThreadPool]: On list_memory_main: BEGIN
[0m16:01:03.617206 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:01:03.620037 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:01:03.620658 [debug] [ThreadPool]: Using duckdb connection "list_memory_main"
[0m16:01:03.621828 [debug] [ThreadPool]: On list_memory_main: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_main"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'memory'
  
[0m16:01:03.644391 [debug] [ThreadPool]: SQL status: OK in 0.022 seconds
[0m16:01:03.646148 [debug] [ThreadPool]: On list_memory_main: ROLLBACK
[0m16:01:03.648190 [debug] [ThreadPool]: Failed to rollback 'list_memory_main'
[0m16:01:03.648911 [debug] [ThreadPool]: On list_memory_main: Close
[0m16:01:03.650022 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'b976bdc3-0c62-4803-81aa-3e79c637678d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114dda1b0>]}
[0m16:01:03.651129 [debug] [MainThread]: Using duckdb connection "master"
[0m16:01:03.651804 [debug] [MainThread]: On master: BEGIN
[0m16:01:03.652293 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:01:03.654221 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:01:03.654718 [debug] [MainThread]: On master: COMMIT
[0m16:01:03.655160 [debug] [MainThread]: Using duckdb connection "master"
[0m16:01:03.655599 [debug] [MainThread]: On master: COMMIT
[0m16:01:03.656735 [debug] [MainThread]: SQL status: OK in 0.001 seconds
[0m16:01:03.657372 [debug] [MainThread]: On master: Close
[0m16:01:03.660807 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m16:01:03.661511 [info ] [Thread-1 (]: 1 of 1 START sql view model main.contacts ...................................... [RUN]
[0m16:01:03.662643 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_main, now model.usawfl.contacts)
[0m16:01:03.663220 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m16:01:03.678731 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m16:01:03.679811 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m16:01:03.719719 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m16:01:03.721201 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:01:03.721737 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m16:01:03.722196 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:01:03.724108 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:01:03.724632 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:01:03.725756 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
  create view memory."main"."contacts__dbt_tmp" as (
    with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."main"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."main"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m16:01:04.609662 [debug] [Thread-1 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
  create view memory."main"."contacts__dbt_tmp" as (
    with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."main"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."main"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
  );

[0m16:01:04.612025 [debug] [Thread-1 (]: DuckDB adapter: Rolling back transaction.
[0m16:01:04.613132 [debug] [Thread-1 (]: On model.usawfl.contacts: ROLLBACK
[0m16:01:04.630849 [debug] [Thread-1 (]: Failed to rollback 'model.usawfl.contacts'
[0m16:01:04.632308 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m16:01:04.635480 [debug] [Thread-1 (]: Runtime Error in model contacts (models/fct_salesforce/contacts.sql)
  Catalog Error: Table with name states does not exist!
  Did you mean "information_schema.tables"?
  
  LINE 78:         memory."main"."states" sa
                   ^
[0m16:01:04.637975 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b976bdc3-0c62-4803-81aa-3e79c637678d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114cea270>]}
[0m16:01:04.638996 [error] [Thread-1 (]: 1 of 1 ERROR creating sql view model main.contacts ............................. [[31mERROR[0m in 0.97s]
[0m16:01:04.639872 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m16:01:04.640770 [debug] [Thread-4 (]: Marking all children of 'model.usawfl.contacts' to be skipped because of status 'error'.  Reason: Runtime Error in model contacts (models/fct_salesforce/contacts.sql)
  Catalog Error: Table with name states does not exist!
  Did you mean "information_schema.tables"?
  
  LINE 78:         memory."main"."states" sa
                   ^.
[0m16:01:04.645512 [debug] [MainThread]: Using duckdb connection "master"
[0m16:01:04.646099 [debug] [MainThread]: On master: BEGIN
[0m16:01:04.646535 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:01:04.648652 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:01:04.649211 [debug] [MainThread]: On master: COMMIT
[0m16:01:04.649648 [debug] [MainThread]: Using duckdb connection "master"
[0m16:01:04.650116 [debug] [MainThread]: On master: COMMIT
[0m16:01:04.650857 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:01:04.652282 [debug] [MainThread]: On master: Close
[0m16:01:04.653840 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:01:04.654484 [debug] [MainThread]: Connection 'model.usawfl.contacts' was properly closed.
[0m16:01:04.654959 [info ] [MainThread]: 
[0m16:01:04.655367 [info ] [MainThread]: Finished running 1 view model in 0 hours 0 minutes and 1.21 seconds (1.21s).
[0m16:01:04.656289 [debug] [MainThread]: Command end result
[0m16:01:04.685044 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:01:04.687733 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:01:04.696127 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m16:01:04.696990 [info ] [MainThread]: 
[0m16:01:04.697610 [info ] [MainThread]: [31mCompleted with 1 error, 0 partial successes, and 0 warnings:[0m
[0m16:01:04.698116 [info ] [MainThread]: 
[0m16:01:04.698654 [error] [MainThread]: [31mFailure in model contacts (models/fct_salesforce/contacts.sql)[0m
[0m16:01:04.699338 [error] [MainThread]:   Runtime Error in model contacts (models/fct_salesforce/contacts.sql)
  Catalog Error: Table with name states does not exist!
  Did you mean "information_schema.tables"?
  
  LINE 78:         memory."main"."states" sa
                   ^
[0m16:01:04.699942 [info ] [MainThread]: 
[0m16:01:04.700549 [info ] [MainThread]:   compiled code at target/compiled/usawfl/models/fct_salesforce/contacts.sql
[0m16:01:04.701491 [info ] [MainThread]: 
[0m16:01:04.703211 [info ] [MainThread]: Done. PASS=0 WARN=0 ERROR=1 SKIP=0 NO-OP=0 TOTAL=1
[0m16:01:04.706345 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": false, "command_wall_clock_time": 3.8553836, "process_in_blocks": "0", "process_kernel_time": 0.623011, "process_mem_max_rss": "145240064", "process_out_blocks": "0", "process_user_time": 4.479396}
[0m16:01:04.707078 [debug] [MainThread]: Command `dbt run` failed at 16:01:04.706933 after 3.86 seconds
[0m16:01:04.707610 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114e2e870>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114533dd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1152a7d40>]}
[0m16:01:04.708106 [debug] [MainThread]: Flushing usage events
[0m16:01:05.140459 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:01:53.542007 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a9d32f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3e2570>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3e2300>]}


============================== 16:01:53.548639 | 1776d5e7-24a8-4620-ae19-290bd3acbf8c ==============================
[0m16:01:53.548639 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:01:53.549414 [debug] [MainThread]: running dbt with arguments {'invocation_command': 'dbt run', 'introspect': 'True', 'log_cache_events': 'False', 'indirect_selection': 'eager', 'static_parser': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'version_check': 'True', 'send_anonymous_usage_stats': 'True', 'log_format': 'default', 'use_experimental_parser': 'False', 'fail_fast': 'False', 'write_json': 'True', 'use_colors': 'True', 'empty': 'False', 'partial_parse': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'printer_width': '80', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'target_path': 'None', 'quiet': 'False', 'cache_selected_only': 'False', 'no_print': 'None', 'warn_error': 'None', 'debug': 'False'}
[0m16:01:54.022124 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '1776d5e7-24a8-4620-ae19-290bd3acbf8c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108e96bd0>]}
[0m16:01:54.099857 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '1776d5e7-24a8-4620-ae19-290bd3acbf8c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108e064b0>]}
[0m16:01:54.104066 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:01:54.259427 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:01:54.362672 [info ] [MainThread]: Unable to do partial parsing because a project config has changed
[0m16:01:54.363321 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '1776d5e7-24a8-4620-ae19-290bd3acbf8c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8b1280>]}
[0m16:01:55.993397 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '1776d5e7-24a8-4620-ae19-290bd3acbf8c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10babd790>]}
[0m16:01:56.074343 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:01:56.077487 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:01:56.108582 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '1776d5e7-24a8-4620-ae19-290bd3acbf8c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb22fc0>]}
[0m16:01:56.109141 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:01:56.109548 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '1776d5e7-24a8-4620-ae19-290bd3acbf8c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109725ee0>]}
[0m16:01:56.111740 [info ] [MainThread]: 
[0m16:01:56.112151 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m16:01:56.112509 [info ] [MainThread]: 
[0m16:01:56.113086 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:01:56.120049 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m16:01:56.190968 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:01:56.191475 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:01:56.192046 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:01:56.267175 [debug] [ThreadPool]: SQL status: OK in 0.075 seconds
[0m16:01:56.268819 [debug] [ThreadPool]: On list_memory: Close
[0m16:01:56.271404 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:01:56.271876 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:01:56.272236 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:01:56.274486 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:01:56.275987 [debug] [ThreadPool]: On list_memory: Close
[0m16:01:56.276743 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_salesforce)
[0m16:01:56.277267 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m16:01:56.284697 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:01:56.285152 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:01:56.285501 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:01:56.288135 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:01:56.289726 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:01:56.290191 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m16:01:56.290811 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:01:56.291163 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:01:56.291548 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m16:01:56.292214 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:01:56.293220 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:01:56.293597 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:01:56.293942 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:01:56.294521 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:01:56.295007 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m16:01:56.295694 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now create_memory_references)
[0m16:01:56.296271 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "references"
"
[0m16:01:56.298469 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:01:56.299221 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:01:56.299785 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:01:56.301778 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:01:56.303462 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:01:56.303904 [debug] [ThreadPool]: On create_memory_references: BEGIN
[0m16:01:56.304515 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:01:56.304874 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:01:56.305318 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
    
        create schema if not exists memory."references"
    
[0m16:01:56.305970 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:01:56.307059 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:01:56.307462 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:01:56.307848 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:01:56.308520 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:01:56.308903 [debug] [ThreadPool]: On create_memory_references: Close
[0m16:01:56.310460 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_references, now list_memory_fct_salesforce)
[0m16:01:56.316967 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:01:56.317410 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m16:01:56.317748 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:01:56.319609 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:01:56.320024 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:01:56.320393 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m16:01:56.341583 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m16:01:56.343046 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m16:01:56.344687 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m16:01:56.345070 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m16:01:56.345671 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now list_memory_references)
[0m16:01:56.347699 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:01:56.348069 [debug] [ThreadPool]: On list_memory_references: BEGIN
[0m16:01:56.348396 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:01:56.350009 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:01:56.350396 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:01:56.350757 [debug] [ThreadPool]: On list_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'references'
    and lower(table_catalog) = 'memory'
  
[0m16:01:56.354669 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m16:01:56.356178 [debug] [ThreadPool]: On list_memory_references: ROLLBACK
[0m16:01:56.357254 [debug] [ThreadPool]: Failed to rollback 'list_memory_references'
[0m16:01:56.357622 [debug] [ThreadPool]: On list_memory_references: Close
[0m16:01:56.358273 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '1776d5e7-24a8-4620-ae19-290bd3acbf8c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108e06750>]}
[0m16:01:56.358791 [debug] [MainThread]: Using duckdb connection "master"
[0m16:01:56.359150 [debug] [MainThread]: On master: BEGIN
[0m16:01:56.359494 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:01:56.361072 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:01:56.361466 [debug] [MainThread]: On master: COMMIT
[0m16:01:56.361827 [debug] [MainThread]: Using duckdb connection "master"
[0m16:01:56.362170 [debug] [MainThread]: On master: COMMIT
[0m16:01:56.362696 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:01:56.363063 [debug] [MainThread]: On master: Close
[0m16:01:56.366067 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m16:01:56.366697 [info ] [Thread-1 (]: 1 of 7 START sql table model references.states ................................. [RUN]
[0m16:01:56.367262 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_references, now model.usawfl.states)
[0m16:01:56.367712 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m16:01:56.376903 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m16:01:56.377732 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m16:01:56.416910 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m16:01:56.418000 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:01:56.418469 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m16:01:56.418871 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:01:56.420559 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:01:56.420985 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:01:56.421554 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m16:01:56.465229 [debug] [Thread-1 (]: SQL status: OK in 0.043 seconds
[0m16:01:56.472713 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:01:56.473234 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."references"."states__dbt_tmp" rename to "states"
[0m16:01:56.474723 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:01:56.481241 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:01:56.481773 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:01:56.489816 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m16:01:56.502399 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:01:56.502941 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:01:56.503379 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:01:56.504615 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:01:56.511056 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:01:56.511621 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop table if exists memory."references"."states__dbt_backup" cascade
    
[0m16:01:56.512459 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:01:56.515265 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m16:01:56.517597 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1776d5e7-24a8-4620-ae19-290bd3acbf8c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108d33c20>]}
[0m16:01:56.518429 [info ] [Thread-1 (]: 1 of 7 OK created sql table model references.states ............................ [[32mOK[0m in 0.15s]
[0m16:01:56.519152 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m16:01:56.519637 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m16:01:56.520322 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m16:01:56.520937 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m16:01:56.521377 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m16:01:56.526107 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m16:01:56.527002 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m16:01:56.530289 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m16:01:56.532265 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:01:56.532840 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m16:01:56.533573 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:01:56.535289 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:01:56.535728 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:01:56.536251 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:01:57.199244 [debug] [Thread-1 (]: SQL status: OK in 0.662 seconds
[0m16:01:57.202949 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:01:57.203473 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m16:01:57.204322 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:01:57.206805 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:01:57.207250 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:01:57.210636 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:01:57.212057 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:01:57.212506 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:01:57.212910 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:01:57.213876 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:01:57.216485 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:01:57.216946 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m16:01:57.217695 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:01:57.219269 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m16:01:57.219941 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1776d5e7-24a8-4620-ae19-290bd3acbf8c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bfece00>]}
[0m16:01:57.220669 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.70s]
[0m16:01:57.221535 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m16:01:57.222045 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m16:01:57.222659 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m16:01:57.223204 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m16:01:57.223644 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m16:01:57.231376 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m16:01:57.232363 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m16:01:57.237474 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m16:01:57.238386 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:01:57.238816 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m16:01:57.239209 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:01:57.240917 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:01:57.241371 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:01:57.242125 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:02:03.367349 [debug] [Thread-1 (]: SQL status: OK in 6.124 seconds
[0m16:02:03.372905 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:02:03.373474 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m16:02:03.374381 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:03.376998 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:02:03.377452 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:02:03.583551 [debug] [Thread-1 (]: SQL status: OK in 0.206 seconds
[0m16:02:03.585042 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:02:03.585477 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:02:03.585876 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:02:03.593204 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m16:02:03.596162 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:02:03.596645 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m16:02:03.597431 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:03.598974 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m16:02:03.599632 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1776d5e7-24a8-4620-ae19-290bd3acbf8c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c00a9f0>]}
[0m16:02:03.600399 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.38s]
[0m16:02:03.601242 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m16:02:03.602144 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m16:02:03.602713 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m16:02:03.603251 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m16:02:03.603690 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m16:02:03.608649 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m16:02:03.609725 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m16:02:03.613796 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m16:02:03.614900 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:02:03.616140 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m16:02:03.617114 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:02:03.618951 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:03.619428 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:02:03.620008 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:02:04.542514 [debug] [Thread-1 (]: SQL status: OK in 0.922 seconds
[0m16:02:04.545911 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:02:04.546337 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m16:02:04.547139 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:04.549428 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:02:04.549857 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:02:04.554614 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:02:04.556132 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:02:04.556569 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:02:04.556982 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:02:04.559712 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:04.562754 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:02:04.563282 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m16:02:04.564191 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:04.565758 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m16:02:04.566719 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1776d5e7-24a8-4620-ae19-290bd3acbf8c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bff3e90>]}
[0m16:02:04.567433 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 0.96s]
[0m16:02:04.568110 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m16:02:04.568556 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m16:02:04.569067 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m16:02:04.569630 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m16:02:04.570059 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m16:02:04.573398 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m16:02:04.574531 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m16:02:04.578042 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m16:02:04.579000 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:02:04.579466 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m16:02:04.579863 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:02:04.581772 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:04.582273 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:02:04.582768 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:02:05.041009 [debug] [Thread-1 (]: SQL status: OK in 0.458 seconds
[0m16:02:05.044621 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:02:05.045100 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m16:02:05.045966 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:05.048503 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:02:05.048988 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:02:05.053012 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:02:05.054595 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:02:05.055069 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:02:05.055494 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:02:05.056965 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:02:05.061885 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:02:05.062854 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m16:02:05.063890 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:05.065729 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m16:02:05.066439 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1776d5e7-24a8-4620-ae19-290bd3acbf8c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c01f800>]}
[0m16:02:05.067148 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.50s]
[0m16:02:05.067890 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m16:02:05.068919 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m16:02:05.069781 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m16:02:05.070594 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m16:02:05.071113 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m16:02:05.076391 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m16:02:05.077506 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m16:02:05.083482 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m16:02:05.084534 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:02:05.085048 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m16:02:05.085475 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:02:05.087921 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:05.088998 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:02:05.089677 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:02:07.024437 [debug] [Thread-1 (]: SQL status: OK in 1.934 seconds
[0m16:02:07.027703 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:02:07.028125 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m16:02:07.028919 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:07.031274 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:02:07.031716 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:02:07.037199 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m16:02:07.038714 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:02:07.039168 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:02:07.039565 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:02:07.042276 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:07.045128 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:02:07.045601 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m16:02:07.046411 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:07.047927 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m16:02:07.048558 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1776d5e7-24a8-4620-ae19-290bd3acbf8c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c006900>]}
[0m16:02:07.049252 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.98s]
[0m16:02:07.049913 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m16:02:07.050361 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m16:02:07.050910 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m16:02:07.051500 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m16:02:07.051936 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m16:02:07.057756 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m16:02:07.058703 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m16:02:07.063979 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m16:02:07.064979 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:02:07.065396 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m16:02:07.065779 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:02:07.067362 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:07.067776 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:02:07.068611 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m16:02:09.044033 [debug] [Thread-1 (]: SQL status: OK in 1.974 seconds
[0m16:02:09.047747 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:02:09.048212 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m16:02:09.049178 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:02:09.052032 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:02:09.052670 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:02:09.055550 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:09.057110 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:02:09.057626 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:02:09.058061 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:02:09.058827 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:09.061761 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:02:09.062274 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m16:02:09.063073 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:09.064580 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m16:02:09.065665 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1776d5e7-24a8-4620-ae19-290bd3acbf8c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c00a9c0>]}
[0m16:02:09.066430 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 2.01s]
[0m16:02:09.067238 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m16:02:09.068582 [debug] [MainThread]: Using duckdb connection "master"
[0m16:02:09.068999 [debug] [MainThread]: On master: BEGIN
[0m16:02:09.069362 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:02:09.070946 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:02:09.071333 [debug] [MainThread]: On master: COMMIT
[0m16:02:09.071690 [debug] [MainThread]: Using duckdb connection "master"
[0m16:02:09.072025 [debug] [MainThread]: On master: COMMIT
[0m16:02:09.072558 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:02:09.072954 [debug] [MainThread]: On master: Close
[0m16:02:09.074049 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:02:09.074411 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m16:02:09.074844 [info ] [MainThread]: 
[0m16:02:09.075241 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.96 seconds (12.96s).
[0m16:02:09.077149 [debug] [MainThread]: Command end result
[0m16:02:09.105038 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:02:09.107849 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:02:09.115360 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m16:02:09.116320 [info ] [MainThread]: 
[0m16:02:09.117293 [info ] [MainThread]: [32mCompleted successfully[0m
[0m16:02:09.117901 [info ] [MainThread]: 
[0m16:02:09.118316 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m16:02:09.120948 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 15.672915, "process_in_blocks": "0", "process_kernel_time": 1.085267, "process_mem_max_rss": "388317184", "process_out_blocks": "0", "process_user_time": 11.612991}
[0m16:02:09.121524 [debug] [MainThread]: Command `dbt run` succeeded at 16:02:09.121403 after 15.67 seconds
[0m16:02:09.121982 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ab7d5b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a9d32f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10baf7980>]}
[0m16:02:09.122934 [debug] [MainThread]: Flushing usage events
[0m16:02:09.651754 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:02:23.014937 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ad83f80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b0064e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b006240>]}


============================== 16:02:23.021666 | af699126-81a2-4f9d-bad0-03c4363a2de7 ==============================
[0m16:02:23.021666 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:02:23.022416 [debug] [MainThread]: running dbt with arguments {'debug': 'False', 'warn_error': 'None', 'quiet': 'False', 'log_format': 'default', 'invocation_command': 'dbt run', 'introspect': 'True', 'version_check': 'True', 'target_path': 'None', 'write_json': 'True', 'empty': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'indirect_selection': 'eager', 'partial_parse': 'True', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'printer_width': '80', 'use_colors': 'True', 'log_cache_events': 'False', 'no_print': 'None', 'send_anonymous_usage_stats': 'True', 'fail_fast': 'False', 'use_experimental_parser': 'False', 'static_parser': 'True', 'cache_selected_only': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])'}
[0m16:02:23.334878 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'af699126-81a2-4f9d-bad0-03c4363a2de7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b1f3320>]}
[0m16:02:23.412591 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'af699126-81a2-4f9d-bad0-03c4363a2de7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10afc3710>]}
[0m16:02:23.416233 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:02:23.578221 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:02:23.683892 [info ] [MainThread]: Unable to do partial parsing because a project config has changed
[0m16:02:23.684544 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'af699126-81a2-4f9d-bad0-03c4363a2de7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a98cd40>]}
[0m16:02:25.244394 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'af699126-81a2-4f9d-bad0-03c4363a2de7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b71fce0>]}
[0m16:02:25.330492 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:02:25.332975 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:02:25.365311 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'af699126-81a2-4f9d-bad0-03c4363a2de7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b76a210>]}
[0m16:02:25.365886 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:02:25.366322 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'af699126-81a2-4f9d-bad0-03c4363a2de7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b7c1460>]}
[0m16:02:25.368834 [info ] [MainThread]: 
[0m16:02:25.369404 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m16:02:25.369819 [info ] [MainThread]: 
[0m16:02:25.370569 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:02:25.377221 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m16:02:25.444489 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:02:25.444975 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:02:25.445344 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:02:25.504533 [debug] [ThreadPool]: SQL status: OK in 0.059 seconds
[0m16:02:25.506115 [debug] [ThreadPool]: On list_memory: Close
[0m16:02:25.508584 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:02:25.509061 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:02:25.509474 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:02:25.512309 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:02:25.513819 [debug] [ThreadPool]: On list_memory: Close
[0m16:02:25.515607 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_salesforce)
[0m16:02:25.518565 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m16:02:25.526376 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:02:25.526841 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:02:25.527196 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:02:25.529250 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:02:25.531077 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:02:25.531595 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m16:02:25.532409 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:02:25.532816 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:02:25.533256 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m16:02:25.533943 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:02:25.535000 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:02:25.535404 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:02:25.535755 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:02:25.536382 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:02:25.536767 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m16:02:25.537542 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now create_memory_references)
[0m16:02:25.538084 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "references"
"
[0m16:02:25.540445 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:02:25.540879 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:02:25.541236 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:02:25.543303 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:02:25.544942 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:02:25.545322 [debug] [ThreadPool]: On create_memory_references: BEGIN
[0m16:02:25.545897 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:02:25.546265 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:02:25.546746 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
    
        create schema if not exists memory."references"
    
[0m16:02:25.547527 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:02:25.548535 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:02:25.549037 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:02:25.549390 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:02:25.550035 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:02:25.550423 [debug] [ThreadPool]: On create_memory_references: Close
[0m16:02:25.552103 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_references, now list_memory_fct_salesforce)
[0m16:02:25.558325 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:02:25.558766 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m16:02:25.559105 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:02:25.560801 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:02:25.561178 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:02:25.561542 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m16:02:25.578138 [debug] [ThreadPool]: SQL status: OK in 0.016 seconds
[0m16:02:25.579744 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m16:02:25.581803 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m16:02:25.582242 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m16:02:25.582901 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now list_memory_references)
[0m16:02:25.584989 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:02:25.585415 [debug] [ThreadPool]: On list_memory_references: BEGIN
[0m16:02:25.585785 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:02:25.587636 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:02:25.588086 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:02:25.588544 [debug] [ThreadPool]: On list_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'references'
    and lower(table_catalog) = 'memory'
  
[0m16:02:25.592808 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m16:02:25.594330 [debug] [ThreadPool]: On list_memory_references: ROLLBACK
[0m16:02:25.595376 [debug] [ThreadPool]: Failed to rollback 'list_memory_references'
[0m16:02:25.595746 [debug] [ThreadPool]: On list_memory_references: Close
[0m16:02:25.596453 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'af699126-81a2-4f9d-bad0-03c4363a2de7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b28ee10>]}
[0m16:02:25.597220 [debug] [MainThread]: Using duckdb connection "master"
[0m16:02:25.600690 [debug] [MainThread]: On master: BEGIN
[0m16:02:25.601096 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:02:25.602755 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:02:25.603159 [debug] [MainThread]: On master: COMMIT
[0m16:02:25.603524 [debug] [MainThread]: Using duckdb connection "master"
[0m16:02:25.603869 [debug] [MainThread]: On master: COMMIT
[0m16:02:25.604539 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:02:25.604941 [debug] [MainThread]: On master: Close
[0m16:02:25.608269 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m16:02:25.608939 [info ] [Thread-1 (]: 1 of 7 START sql table model references.states ................................. [RUN]
[0m16:02:25.609474 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_references, now model.usawfl.states)
[0m16:02:25.609904 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m16:02:25.619975 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m16:02:25.620866 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m16:02:25.662128 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m16:02:25.663173 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:02:25.663724 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m16:02:25.664185 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:02:25.665970 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:25.666413 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:02:25.666970 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m16:02:25.701496 [debug] [Thread-1 (]: SQL status: OK in 0.034 seconds
[0m16:02:25.708736 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:02:25.709244 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."references"."states__dbt_tmp" rename to "states"
[0m16:02:25.710210 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:02:25.716549 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:02:25.717068 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:02:25.718851 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:02:25.731390 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:02:25.731897 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:02:25.732365 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:02:25.733390 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:02:25.740613 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:02:25.741128 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop table if exists memory."references"."states__dbt_backup" cascade
    
[0m16:02:25.741933 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:25.744884 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m16:02:25.747118 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'af699126-81a2-4f9d-bad0-03c4363a2de7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1088fc320>]}
[0m16:02:25.748179 [info ] [Thread-1 (]: 1 of 7 OK created sql table model references.states ............................ [[32mOK[0m in 0.14s]
[0m16:02:25.748937 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m16:02:25.749416 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m16:02:25.749952 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m16:02:25.750665 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m16:02:25.751369 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m16:02:25.756216 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m16:02:25.757031 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m16:02:25.760482 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m16:02:25.761329 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:02:25.761777 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m16:02:25.762221 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:02:25.764264 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:25.764735 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:02:25.765731 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:02:26.230252 [debug] [Thread-1 (]: SQL status: OK in 0.464 seconds
[0m16:02:26.234593 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:02:26.235472 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m16:02:26.236455 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:26.239029 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:02:26.239557 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:02:26.241897 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:26.243442 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:02:26.243925 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:02:26.244333 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:02:26.245433 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:02:26.248892 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:02:26.249612 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m16:02:26.250599 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:26.253554 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m16:02:26.254367 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'af699126-81a2-4f9d-bad0-03c4363a2de7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b2906e0>]}
[0m16:02:26.255137 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.50s]
[0m16:02:26.255993 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m16:02:26.256801 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m16:02:26.257568 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m16:02:26.258284 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m16:02:26.258798 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m16:02:26.268439 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m16:02:26.269494 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m16:02:26.277466 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m16:02:26.278468 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:02:26.278936 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m16:02:26.279399 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:02:26.282146 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:02:26.283721 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:02:26.284957 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:02:32.271450 [debug] [Thread-1 (]: SQL status: OK in 5.985 seconds
[0m16:02:32.276404 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:02:32.276918 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m16:02:32.277855 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:32.280880 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:02:32.281374 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:02:32.482671 [debug] [Thread-1 (]: SQL status: OK in 0.201 seconds
[0m16:02:32.484183 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:02:32.484697 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:02:32.485108 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:02:32.491488 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m16:02:32.494364 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:02:32.494839 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m16:02:32.495664 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:32.497197 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m16:02:32.497890 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'af699126-81a2-4f9d-bad0-03c4363a2de7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb7b410>]}
[0m16:02:32.498781 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.24s]
[0m16:02:32.499609 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m16:02:32.500581 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m16:02:32.501188 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m16:02:32.501845 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m16:02:32.502304 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m16:02:32.506978 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m16:02:32.507772 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m16:02:32.511094 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m16:02:32.512023 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:02:32.512449 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m16:02:32.512845 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:02:32.514498 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:32.515157 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:02:32.515839 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:02:33.626875 [debug] [Thread-1 (]: SQL status: OK in 1.110 seconds
[0m16:02:33.630159 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:02:33.630619 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m16:02:33.631455 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:33.633794 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:02:33.634229 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:02:33.637257 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:02:33.638788 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:02:33.639239 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:02:33.639637 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:02:33.641865 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:33.644519 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:02:33.644949 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m16:02:33.645766 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:33.647343 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m16:02:33.648002 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'af699126-81a2-4f9d-bad0-03c4363a2de7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bc48b00>]}
[0m16:02:33.648701 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 1.15s]
[0m16:02:33.649370 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m16:02:33.649822 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m16:02:33.650340 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m16:02:33.651012 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m16:02:33.651457 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m16:02:33.655420 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m16:02:33.656369 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m16:02:33.660017 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m16:02:33.660938 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:02:33.662027 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m16:02:33.663044 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:02:33.664806 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:33.665248 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:02:33.665744 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:02:34.180552 [debug] [Thread-1 (]: SQL status: OK in 0.514 seconds
[0m16:02:34.184362 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:02:34.184889 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m16:02:34.185765 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:34.188355 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:02:34.188924 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:02:34.191551 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:34.192940 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:02:34.193417 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:02:34.193850 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:02:34.195279 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:02:34.199977 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:02:34.200497 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m16:02:34.201439 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:34.203341 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m16:02:34.204009 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'af699126-81a2-4f9d-bad0-03c4363a2de7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bc861e0>]}
[0m16:02:34.204749 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.55s]
[0m16:02:34.205505 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m16:02:34.206280 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m16:02:34.206884 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m16:02:34.207472 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m16:02:34.207915 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m16:02:34.212459 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m16:02:34.213439 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m16:02:34.217103 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m16:02:34.218227 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:02:34.218886 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m16:02:34.219325 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:02:34.223300 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:02:34.223894 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:02:34.224678 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:02:36.327894 [debug] [Thread-1 (]: SQL status: OK in 2.102 seconds
[0m16:02:36.331545 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:02:36.332290 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m16:02:36.333150 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:36.335702 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:02:36.336159 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:02:36.341176 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m16:02:36.342685 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:02:36.343426 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:02:36.343894 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:02:36.346197 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:36.349484 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:02:36.350167 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m16:02:36.351011 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:36.353049 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m16:02:36.354171 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'af699126-81a2-4f9d-bad0-03c4363a2de7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bc85820>]}
[0m16:02:36.355478 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 2.15s]
[0m16:02:36.357225 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m16:02:36.358117 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m16:02:36.359300 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m16:02:36.360864 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m16:02:36.362206 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m16:02:36.372538 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m16:02:36.374438 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m16:02:36.380564 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m16:02:36.382145 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:02:36.382909 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m16:02:36.383803 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:02:36.386872 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:02:36.387739 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:02:36.389763 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m16:02:38.191764 [debug] [Thread-1 (]: SQL status: OK in 1.800 seconds
[0m16:02:38.195278 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:02:38.195737 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m16:02:38.196610 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:38.199145 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:02:38.199632 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:02:38.202009 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:02:38.203478 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:02:38.203922 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:02:38.204323 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:02:38.205135 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:38.207775 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:02:38.208202 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m16:02:38.208934 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:02:38.210426 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m16:02:38.211259 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'af699126-81a2-4f9d-bad0-03c4363a2de7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b2900b0>]}
[0m16:02:38.211994 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.85s]
[0m16:02:38.212760 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m16:02:38.214087 [debug] [MainThread]: Using duckdb connection "master"
[0m16:02:38.214461 [debug] [MainThread]: On master: BEGIN
[0m16:02:38.214795 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:02:38.216299 [debug] [MainThread]: SQL status: OK in 0.001 seconds
[0m16:02:38.216662 [debug] [MainThread]: On master: COMMIT
[0m16:02:38.217012 [debug] [MainThread]: Using duckdb connection "master"
[0m16:02:38.217934 [debug] [MainThread]: On master: COMMIT
[0m16:02:38.218742 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:02:38.219164 [debug] [MainThread]: On master: Close
[0m16:02:38.219746 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:02:38.220124 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m16:02:38.220562 [info ] [MainThread]: 
[0m16:02:38.220996 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.85 seconds (12.85s).
[0m16:02:38.222893 [debug] [MainThread]: Command end result
[0m16:02:38.250022 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:02:38.252495 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:02:38.259591 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m16:02:38.260120 [info ] [MainThread]: 
[0m16:02:38.260920 [info ] [MainThread]: [32mCompleted successfully[0m
[0m16:02:38.261442 [info ] [MainThread]: 
[0m16:02:38.261884 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m16:02:38.264577 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 15.343425, "process_in_blocks": "0", "process_kernel_time": 0.967727, "process_mem_max_rss": "391094272", "process_out_blocks": "0", "process_user_time": 8.063774}
[0m16:02:38.265226 [debug] [MainThread]: Command `dbt run` succeeded at 16:02:38.265092 after 15.34 seconds
[0m16:02:38.265707 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10afa33e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b006450>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a92b530>]}
[0m16:02:38.266124 [debug] [MainThread]: Flushing usage events
[0m16:02:39.005231 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:04:18.795089 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104af59a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10656e5a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10656e330>]}


============================== 16:04:18.802789 | 88f52a11-a4de-42c5-a867-f074d1fe0f9c ==============================
[0m16:04:18.802789 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:04:18.804624 [debug] [MainThread]: running dbt with arguments {'log_format': 'default', 'invocation_command': 'dbt run', 'empty': 'False', 'indirect_selection': 'eager', 'printer_width': '80', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'warn_error': 'None', 'no_print': 'None', 'quiet': 'False', 'send_anonymous_usage_stats': 'True', 'log_cache_events': 'False', 'version_check': 'True', 'use_colors': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'introspect': 'True', 'cache_selected_only': 'False', 'write_json': 'True', 'partial_parse': 'True', 'debug': 'False', 'target_path': 'None', 'static_parser': 'True', 'fail_fast': 'False', 'use_experimental_parser': 'False', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl'}
[0m16:04:19.156217 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '88f52a11-a4de-42c5-a867-f074d1fe0f9c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10615ad20>]}
[0m16:04:19.242860 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '88f52a11-a4de-42c5-a867-f074d1fe0f9c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105b18da0>]}
[0m16:04:19.246011 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:04:19.396478 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:04:19.495691 [info ] [MainThread]: Unable to do partial parsing because a project config has changed
[0m16:04:19.496252 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '88f52a11-a4de-42c5-a867-f074d1fe0f9c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105ef4e90>]}
[0m16:04:21.088453 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '88f52a11-a4de-42c5-a867-f074d1fe0f9c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106cea9f0>]}
[0m16:04:21.182090 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:04:21.184827 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:04:21.212425 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '88f52a11-a4de-42c5-a867-f074d1fe0f9c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106c72960>]}
[0m16:04:21.213026 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:04:21.213700 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '88f52a11-a4de-42c5-a867-f074d1fe0f9c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106c8a390>]}
[0m16:04:21.216281 [info ] [MainThread]: 
[0m16:04:21.216819 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m16:04:21.217302 [info ] [MainThread]: 
[0m16:04:21.217989 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:04:21.226240 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m16:04:21.298163 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:04:21.298634 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:04:21.298999 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:04:21.363783 [debug] [ThreadPool]: SQL status: OK in 0.065 seconds
[0m16:04:21.365426 [debug] [ThreadPool]: On list_memory: Close
[0m16:04:21.368019 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:04:21.368530 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:04:21.368910 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:04:21.371102 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:04:21.372634 [debug] [ThreadPool]: On list_memory: Close
[0m16:04:21.373409 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_salesforce)
[0m16:04:21.373962 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m16:04:21.381040 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:04:21.381477 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:04:21.381825 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:04:21.383899 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:04:21.385403 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:04:21.385799 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m16:04:21.386409 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:04:21.386782 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:04:21.387137 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m16:04:21.387818 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:04:21.388831 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:04:21.389229 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:04:21.389586 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:04:21.390204 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:04:21.390584 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m16:04:21.391236 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now create_memory_references)
[0m16:04:21.391770 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "references"
"
[0m16:04:21.393797 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:04:21.394208 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:04:21.394567 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:04:21.396593 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:04:21.398337 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:04:21.398744 [debug] [ThreadPool]: On create_memory_references: BEGIN
[0m16:04:21.399370 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:04:21.399729 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:04:21.400075 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
    
        create schema if not exists memory."references"
    
[0m16:04:21.400709 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:04:21.401691 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:04:21.402095 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:04:21.402446 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:04:21.403091 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:04:21.403471 [debug] [ThreadPool]: On create_memory_references: Close
[0m16:04:21.405031 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_references, now list_memory_fct_salesforce)
[0m16:04:21.411056 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:04:21.411480 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m16:04:21.411825 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:04:21.413562 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:04:21.413972 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:04:21.414358 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m16:04:21.430668 [debug] [ThreadPool]: SQL status: OK in 0.016 seconds
[0m16:04:21.432261 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m16:04:21.434224 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m16:04:21.435152 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m16:04:21.435886 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now list_memory_references)
[0m16:04:21.438578 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:04:21.439054 [debug] [ThreadPool]: On list_memory_references: BEGIN
[0m16:04:21.439416 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:04:21.441702 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:04:21.442132 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:04:21.442646 [debug] [ThreadPool]: On list_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'references'
    and lower(table_catalog) = 'memory'
  
[0m16:04:21.447251 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m16:04:21.452311 [debug] [ThreadPool]: On list_memory_references: ROLLBACK
[0m16:04:21.453471 [debug] [ThreadPool]: Failed to rollback 'list_memory_references'
[0m16:04:21.453864 [debug] [ThreadPool]: On list_memory_references: Close
[0m16:04:21.454627 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '88f52a11-a4de-42c5-a867-f074d1fe0f9c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10663ec00>]}
[0m16:04:21.455236 [debug] [MainThread]: Using duckdb connection "master"
[0m16:04:21.455752 [debug] [MainThread]: On master: BEGIN
[0m16:04:21.456110 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:04:21.458895 [debug] [MainThread]: SQL status: OK in 0.003 seconds
[0m16:04:21.459362 [debug] [MainThread]: On master: COMMIT
[0m16:04:21.459789 [debug] [MainThread]: Using duckdb connection "master"
[0m16:04:21.460181 [debug] [MainThread]: On master: COMMIT
[0m16:04:21.461019 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:04:21.461565 [debug] [MainThread]: On master: Close
[0m16:04:21.465324 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m16:04:21.465994 [info ] [Thread-1 (]: 1 of 7 START sql table model references.states ................................. [RUN]
[0m16:04:21.466859 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_references, now model.usawfl.states)
[0m16:04:21.467402 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m16:04:21.477900 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m16:04:21.478784 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m16:04:21.519833 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m16:04:21.520877 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:04:21.521422 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m16:04:21.524259 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:04:21.526883 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:04:21.527376 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:04:21.527960 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m16:04:21.561092 [debug] [Thread-1 (]: SQL status: OK in 0.032 seconds
[0m16:04:21.568335 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:04:21.568836 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."references"."states__dbt_tmp" rename to "states"
[0m16:04:21.569838 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:04:21.577640 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:04:21.578133 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:04:21.580090 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:04:21.596406 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:04:21.597025 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:04:21.597590 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:04:21.598957 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:04:21.605949 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:04:21.606659 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop table if exists memory."references"."states__dbt_backup" cascade
    
[0m16:04:21.607480 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:04:21.610258 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m16:04:21.612340 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88f52a11-a4de-42c5-a867-f074d1fe0f9c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107168c20>]}
[0m16:04:21.613101 [info ] [Thread-1 (]: 1 of 7 OK created sql table model references.states ............................ [[32mOK[0m in 0.14s]
[0m16:04:21.613832 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m16:04:21.614433 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m16:04:21.615069 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m16:04:21.615702 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m16:04:21.616240 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m16:04:21.620795 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m16:04:21.621589 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m16:04:21.625196 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m16:04:21.626053 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:04:21.626500 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m16:04:21.626902 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:04:21.628760 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:04:21.629222 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:04:21.629760 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:04:21.993661 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m16:04:21.995186 [debug] [MainThread]: DuckDB adapter: cancelling query on connection model.usawfl.tournaments. Details: Connection(type='duckdb', name='model.usawfl.tournaments', state=<ConnectionState.OPEN: 'open'>, transaction_open=True, _handle=<dbt.adapters.duckdb.environments.local.DuckDBConnectionWrapper object at 0x106ca6c90>, _credentials=DuckDBCredentials(database='memory', schema='main', path=':memory:', config_options=None, extensions=['httpfs', 'parquet'], settings={'s3_region': 'sfo3', 's3_url_style': 'vhost', 's3_endpoint': 'sfo3.digitaloceanspaces.com', 's3_access_key_id': 'DO00T2EA2W67YG6UN94R', 's3_secret_access_key': 'YuSEBV7kiNvErlkyKW5mOkgvjsu8rV4sB0vOYBxaXmA'}, secrets=[], external_root='.', use_credential_provider=None, attach=None, filesystems=None, remote=None, plugins=None, disable_transactions=False, keep_open=True, module_paths=None, retries=None, is_ducklake=None))
[0m16:04:21.996372 [debug] [MainThread]: DuckDB adapter: query cancelled on connection model.usawfl.tournaments
[0m16:04:21.997306 [error] [MainThread]: CANCEL query model.usawfl.tournaments .......................................... [[31mCANCEL[0m]
[0m16:04:22.104701 [debug] [Thread-1 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:04:22.105673 [debug] [Thread-1 (]: DuckDB adapter: Rolling back transaction.
[0m16:04:22.106882 [debug] [Thread-1 (]: On model.usawfl.tournaments: ROLLBACK
[0m16:04:22.125909 [debug] [Thread-1 (]: Failed to rollback 'model.usawfl.tournaments'
[0m16:04:22.126846 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m16:04:22.132897 [debug] [Thread-1 (]: Runtime Error in model tournaments (models/fct_salesforce/tournaments.sql)
  INTERRUPT Error: Interrupted!
[0m16:04:22.134364 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88f52a11-a4de-42c5-a867-f074d1fe0f9c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10719e180>]}
[0m16:04:22.137049 [error] [Thread-1 (]: 2 of 7 ERROR creating sql table model fct_salesforce.tournaments ............... [[31mERROR[0m in 0.52s]
[0m16:04:22.139519 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m16:04:22.140618 [info ] [MainThread]: 
[0m16:04:22.142094 [info ] [MainThread]: [33mExited because of keyboard interrupt[0m
[0m16:04:22.143655 [info ] [MainThread]: 
[0m16:04:22.145844 [info ] [MainThread]: Done. PASS=1 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=1
[0m16:04:22.147746 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:04:22.148899 [debug] [MainThread]: Connection 'model.usawfl.tournaments' was properly closed.
[0m16:04:22.153485 [info ] [MainThread]: 
[0m16:04:22.159255 [info ] [MainThread]: Finished running 1 table model in 0 hours 0 minutes and 0.94 seconds (0.94s).
[0m16:04:22.160390 [error] [MainThread]: Encountered an error:

[0m16:04:22.175821 [error] [MainThread]: Traceback (most recent call last):
  File "/Users/vongly/dev/python/usawfl-data-dbt/venv/lib/python3.12/site-packages/dbt/cli/requires.py", line 178, in wrapper
    result, success = func(*args, **kwargs)
                      ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/vongly/dev/python/usawfl-data-dbt/venv/lib/python3.12/site-packages/dbt/cli/requires.py", line 128, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/vongly/dev/python/usawfl-data-dbt/venv/lib/python3.12/site-packages/dbt/cli/requires.py", line 272, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/vongly/dev/python/usawfl-data-dbt/venv/lib/python3.12/site-packages/dbt/cli/requires.py", line 303, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/vongly/dev/python/usawfl-data-dbt/venv/lib/python3.12/site-packages/dbt/cli/requires.py", line 373, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/vongly/dev/python/usawfl-data-dbt/venv/lib/python3.12/site-packages/dbt/cli/requires.py", line 350, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/vongly/dev/python/usawfl-data-dbt/venv/lib/python3.12/site-packages/dbt/cli/requires.py", line 390, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/vongly/dev/python/usawfl-data-dbt/venv/lib/python3.12/site-packages/dbt/cli/main.py", line 586, in run
    results = task.run()
              ^^^^^^^^^^
  File "/Users/vongly/dev/python/usawfl-data-dbt/venv/lib/python3.12/site-packages/dbt/task/runnable.py", line 599, in run
    result = self.execute_with_hooks(selected_uids)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/vongly/dev/python/usawfl-data-dbt/venv/lib/python3.12/site-packages/dbt/task/runnable.py", line 536, in execute_with_hooks
    res = self.execute_nodes()
          ^^^^^^^^^^^^^^^^^^^^
  File "/Users/vongly/dev/python/usawfl-data-dbt/venv/lib/python3.12/site-packages/dbt/task/runnable.py", line 416, in execute_nodes
    self.run_queue(pool)
  File "/Users/vongly/dev/python/usawfl-data-dbt/venv/lib/python3.12/site-packages/dbt/task/runnable.py", line 333, in run_queue
    self.handle_job_queue(pool, callback)
  File "/Users/vongly/dev/python/usawfl-data-dbt/venv/lib/python3.12/site-packages/dbt/task/run.py", line 853, in handle_job_queue
    node = self.job_queue.get()
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/vongly/dev/python/usawfl-data-dbt/venv/lib/python3.12/site-packages/dbt/graph/queue.py", line 133, in get
    _, node_id = self.inner.get(block=block, timeout=timeout)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/Cellar/python@3.12/3.12.10_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/queue.py", line 171, in get
    self.not_empty.wait()
  File "/usr/local/Cellar/python@3.12/3.12.10_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/threading.py", line 355, in wait
    waiter.acquire()
KeyboardInterrupt

[0m16:04:22.182131 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": false, "command_wall_clock_time": 3.4862092, "process_in_blocks": "0", "process_kernel_time": 0.636659, "process_mem_max_rss": "153374720", "process_out_blocks": "0", "process_user_time": 4.817478}
[0m16:04:22.183342 [debug] [MainThread]: Command `dbt run` failed at 16:04:22.183075 after 3.49 seconds
[0m16:04:22.184308 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10656e450>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1071450a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106cdc740>]}
[0m16:04:22.185909 [debug] [MainThread]: Flushing usage events
[0m16:04:22.609727 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:04:28.573962 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1082be660>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1089fe810>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1089fe570>]}


============================== 16:04:28.580013 | 73b35591-5c03-49f6-8964-46f3e0a8ef29 ==============================
[0m16:04:28.580013 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:04:28.580733 [debug] [MainThread]: running dbt with arguments {'debug': 'False', 'quiet': 'False', 'warn_error': 'None', 'use_experimental_parser': 'False', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'target_path': 'None', 'fail_fast': 'False', 'version_check': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'send_anonymous_usage_stats': 'True', 'use_colors': 'True', 'write_json': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'log_format': 'default', 'printer_width': '80', 'partial_parse': 'True', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'empty': 'None', 'cache_selected_only': 'False', 'log_cache_events': 'False', 'static_parser': 'True', 'introspect': 'True', 'indirect_selection': 'eager'}
[0m16:04:28.879231 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '73b35591-5c03-49f6-8964-46f3e0a8ef29', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108be9010>]}
[0m16:04:28.955597 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '73b35591-5c03-49f6-8964-46f3e0a8ef29', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108b00ad0>]}
[0m16:04:28.957580 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:04:29.091040 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:04:29.227096 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:04:29.227629 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:04:29.272763 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '73b35591-5c03-49f6-8964-46f3e0a8ef29', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108dd4620>]}
[0m16:04:29.354188 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:04:29.356702 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:04:29.374265 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '73b35591-5c03-49f6-8964-46f3e0a8ef29', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108bca030>]}
[0m16:04:29.374862 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:04:29.375271 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '73b35591-5c03-49f6-8964-46f3e0a8ef29', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106cec770>]}
[0m16:04:29.376531 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:04:29.377151 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:04:29.377698 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:04:29.378319 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:04:29.378862 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:04:29.379412 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:04:29.379965 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:04:29.382596 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.8980006, "process_in_blocks": "0", "process_kernel_time": 0.281744, "process_mem_max_rss": "120999936", "process_out_blocks": "0", "process_user_time": 2.381929}
[0m16:04:29.383245 [debug] [MainThread]: Command `dbt ls` succeeded at 16:04:29.383110 after 0.90 seconds
[0m16:04:29.383734 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108f99850>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106cec770>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108a2e330>]}
[0m16:04:29.384240 [debug] [MainThread]: Flushing usage events
[0m16:04:29.768410 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:04:34.638986 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1078fce60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1093a23f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1093a2150>]}


============================== 16:04:34.644442 | 69313e16-b956-4f0b-932a-d8da3d9a0f49 ==============================
[0m16:04:34.644442 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:04:34.645131 [debug] [MainThread]: running dbt with arguments {'empty': 'False', 'static_parser': 'True', 'log_cache_events': 'False', 'use_experimental_parser': 'False', 'write_json': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'True', 'warn_error': 'None', 'no_print': 'None', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'quiet': 'False', 'log_format': 'default', 'use_colors': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'invocation_command': 'dbt run', 'printer_width': '80', 'indirect_selection': 'eager', 'debug': 'False', 'version_check': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'partial_parse': 'True', 'introspect': 'True', 'cache_selected_only': 'False', 'fail_fast': 'False'}
[0m16:04:35.013706 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '69313e16-b956-4f0b-932a-d8da3d9a0f49', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1094c1520>]}
[0m16:04:35.092252 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '69313e16-b956-4f0b-932a-d8da3d9a0f49', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108d1f860>]}
[0m16:04:35.094193 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:04:35.235212 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:04:35.368801 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:04:35.369262 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:04:35.418660 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '69313e16-b956-4f0b-932a-d8da3d9a0f49', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1095b6840>]}
[0m16:04:35.506616 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:04:35.508940 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:04:35.528647 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '69313e16-b956-4f0b-932a-d8da3d9a0f49', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10996da60>]}
[0m16:04:35.529434 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:04:35.530148 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '69313e16-b956-4f0b-932a-d8da3d9a0f49', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10946e0f0>]}
[0m16:04:35.533365 [info ] [MainThread]: 
[0m16:04:35.534239 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m16:04:35.535878 [info ] [MainThread]: 
[0m16:04:35.536888 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:04:35.545209 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m16:04:35.617551 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:04:35.618040 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:04:35.618524 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:04:35.683804 [debug] [ThreadPool]: SQL status: OK in 0.065 seconds
[0m16:04:35.685592 [debug] [ThreadPool]: On list_memory: Close
[0m16:04:35.688188 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:04:35.688635 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:04:35.689003 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:04:35.691272 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:04:35.692807 [debug] [ThreadPool]: On list_memory: Close
[0m16:04:35.693603 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_references)
[0m16:04:35.694239 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "references"
"
[0m16:04:35.703002 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:04:35.703456 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:04:35.703899 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:04:35.705865 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:04:35.707414 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:04:35.707815 [debug] [ThreadPool]: On create_memory_references: BEGIN
[0m16:04:35.708484 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:04:35.708840 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:04:35.709183 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
    
        create schema if not exists memory."references"
    
[0m16:04:35.709818 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:04:35.710806 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:04:35.711174 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:04:35.711512 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:04:35.712073 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:04:35.712443 [debug] [ThreadPool]: On create_memory_references: Close
[0m16:04:35.713085 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_references, now create_memory_fct_salesforce)
[0m16:04:35.713647 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m16:04:35.715697 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:04:35.716093 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:04:35.716468 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:04:35.718399 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:04:35.719870 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:04:35.720236 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m16:04:35.720841 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:04:35.721195 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:04:35.721536 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m16:04:35.722123 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:04:35.723280 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:04:35.723721 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:04:35.724070 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:04:35.724808 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:04:35.725213 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m16:04:35.726842 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_references)
[0m16:04:35.733225 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:04:35.733659 [debug] [ThreadPool]: On list_memory_references: BEGIN
[0m16:04:35.734004 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:04:35.735556 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:04:35.735920 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:04:35.736277 [debug] [ThreadPool]: On list_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'references'
    and lower(table_catalog) = 'memory'
  
[0m16:04:35.751966 [debug] [ThreadPool]: SQL status: OK in 0.015 seconds
[0m16:04:35.753458 [debug] [ThreadPool]: On list_memory_references: ROLLBACK
[0m16:04:35.756706 [debug] [ThreadPool]: Failed to rollback 'list_memory_references'
[0m16:04:35.757181 [debug] [ThreadPool]: On list_memory_references: Close
[0m16:04:35.757828 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_references, now list_memory_fct_salesforce)
[0m16:04:35.760110 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:04:35.760605 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m16:04:35.760978 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:04:35.762740 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:04:35.763160 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:04:35.763555 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m16:04:35.767488 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m16:04:35.768930 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m16:04:35.769938 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m16:04:35.770293 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m16:04:35.770959 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '69313e16-b956-4f0b-932a-d8da3d9a0f49', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10964fef0>]}
[0m16:04:35.771505 [debug] [MainThread]: Using duckdb connection "master"
[0m16:04:35.771871 [debug] [MainThread]: On master: BEGIN
[0m16:04:35.772311 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:04:35.773883 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:04:35.774268 [debug] [MainThread]: On master: COMMIT
[0m16:04:35.774629 [debug] [MainThread]: Using duckdb connection "master"
[0m16:04:35.774971 [debug] [MainThread]: On master: COMMIT
[0m16:04:35.775567 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:04:35.775956 [debug] [MainThread]: On master: Close
[0m16:04:35.779859 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m16:04:35.780534 [info ] [Thread-1 (]: 1 of 7 START sql table model references.states ................................. [RUN]
[0m16:04:35.781129 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m16:04:35.781594 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m16:04:35.789832 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m16:04:35.790672 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m16:04:35.828698 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m16:04:35.829890 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:04:35.830351 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m16:04:35.830745 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:04:35.832451 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:04:35.832891 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:04:35.833447 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m16:04:35.865051 [debug] [Thread-1 (]: SQL status: OK in 0.031 seconds
[0m16:04:35.872114 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:04:35.872598 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."references"."states__dbt_tmp" rename to "states"
[0m16:04:35.873418 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:04:35.880947 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:04:35.881456 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:04:35.883391 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:04:35.895105 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:04:35.895714 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:04:35.896170 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:04:35.897170 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:04:35.903339 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:04:35.903839 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop table if exists memory."references"."states__dbt_backup" cascade
    
[0m16:04:35.904641 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:04:35.907320 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m16:04:35.910065 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '69313e16-b956-4f0b-932a-d8da3d9a0f49', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10864ccb0>]}
[0m16:04:35.910989 [info ] [Thread-1 (]: 1 of 7 OK created sql table model references.states ............................ [[32mOK[0m in 0.13s]
[0m16:04:35.911766 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m16:04:35.912247 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m16:04:35.912789 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m16:04:35.913500 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m16:04:35.913945 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m16:04:35.919349 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m16:04:35.920138 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m16:04:35.926387 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m16:04:35.927270 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:04:35.927758 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m16:04:35.928166 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:04:35.929876 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:04:35.930314 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:04:35.930889 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:04:36.389051 [debug] [Thread-1 (]: SQL status: OK in 0.457 seconds
[0m16:04:36.393800 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:04:36.394458 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m16:04:36.395564 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:04:36.400561 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:04:36.401142 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:04:36.404008 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:04:36.405683 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:04:36.406159 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:04:36.406599 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:04:36.407749 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:04:36.410726 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:04:36.411212 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m16:04:36.412055 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:04:36.413752 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m16:04:36.414477 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '69313e16-b956-4f0b-932a-d8da3d9a0f49', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109df0470>]}
[0m16:04:36.415314 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.50s]
[0m16:04:36.416205 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m16:04:36.416710 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m16:04:36.417313 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m16:04:36.417962 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m16:04:36.418431 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m16:04:36.437489 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m16:04:36.438459 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m16:04:36.441922 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m16:04:36.442869 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:04:36.443467 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m16:04:36.443863 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:04:36.445692 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:04:36.446164 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:04:36.447040 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:04:42.889978 [debug] [Thread-1 (]: SQL status: OK in 6.442 seconds
[0m16:04:42.894851 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:04:42.895435 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m16:04:42.896461 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:04:42.901358 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:04:42.901998 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:04:43.105461 [debug] [Thread-1 (]: SQL status: OK in 0.203 seconds
[0m16:04:43.106967 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:04:43.107414 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:04:43.107811 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:04:43.113103 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m16:04:43.115812 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:04:43.116297 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m16:04:43.117063 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:04:43.118563 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m16:04:43.119170 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '69313e16-b956-4f0b-932a-d8da3d9a0f49', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109de4d10>]}
[0m16:04:43.119836 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.70s]
[0m16:04:43.120566 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m16:04:43.121319 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m16:04:43.121859 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m16:04:43.122475 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m16:04:43.122915 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m16:04:43.127795 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m16:04:43.128833 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m16:04:43.132719 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m16:04:43.134528 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:04:43.135826 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m16:04:43.136411 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:04:43.138000 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:04:43.138433 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:04:43.139010 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:04:44.036011 [debug] [Thread-1 (]: SQL status: OK in 0.896 seconds
[0m16:04:44.039438 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:04:44.039917 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m16:04:44.040742 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:04:44.044598 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:04:44.045067 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:04:44.048268 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:04:44.049723 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:04:44.050154 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:04:44.050542 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:04:44.053916 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:04:44.058484 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:04:44.059007 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m16:04:44.059843 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:04:44.061431 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m16:04:44.062058 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '69313e16-b956-4f0b-932a-d8da3d9a0f49', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109e13f80>]}
[0m16:04:44.062758 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 0.94s]
[0m16:04:44.063425 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m16:04:44.063937 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m16:04:44.064449 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m16:04:44.065003 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m16:04:44.065419 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m16:04:44.068943 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m16:04:44.070266 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m16:04:44.074100 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m16:04:44.074999 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:04:44.075427 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m16:04:44.075826 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:04:44.078777 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:04:44.079309 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:04:44.079818 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:04:44.569972 [debug] [Thread-1 (]: SQL status: OK in 0.489 seconds
[0m16:04:44.573569 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:04:44.574225 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m16:04:44.575160 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:04:44.579255 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:04:44.579724 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:04:44.582832 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:04:44.584329 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:04:44.584790 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:04:44.585194 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:04:44.586571 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:04:44.589332 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:04:44.589831 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m16:04:44.590750 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:04:44.594431 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m16:04:44.595230 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '69313e16-b956-4f0b-932a-d8da3d9a0f49', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1094225a0>]}
[0m16:04:44.596328 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.53s]
[0m16:04:44.597646 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m16:04:44.598866 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m16:04:44.599890 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m16:04:44.600789 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m16:04:44.601405 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m16:04:44.607941 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m16:04:44.608992 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m16:04:44.614894 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m16:04:44.616623 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:04:44.617288 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m16:04:44.617961 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:04:44.620756 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:04:44.621299 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:04:44.621875 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:04:46.819835 [debug] [Thread-1 (]: SQL status: OK in 2.197 seconds
[0m16:04:46.823097 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:04:46.823546 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m16:04:46.824354 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:04:46.828139 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:04:46.828600 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:04:46.833477 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:04:46.834976 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:04:46.835415 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:04:46.835820 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:04:46.838427 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:04:46.841496 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:04:46.842037 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m16:04:46.842895 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:04:46.844451 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m16:04:46.845068 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '69313e16-b956-4f0b-932a-d8da3d9a0f49', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109de4920>]}
[0m16:04:46.845732 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 2.24s]
[0m16:04:46.846390 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m16:04:46.846838 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m16:04:46.847344 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m16:04:46.847911 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m16:04:46.848343 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m16:04:46.853815 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m16:04:46.854735 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m16:04:46.861982 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m16:04:46.862940 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:04:46.863382 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m16:04:46.863787 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:04:46.866135 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:04:46.866653 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:04:46.867493 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m16:04:49.069008 [debug] [Thread-1 (]: SQL status: OK in 2.201 seconds
[0m16:04:49.135998 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:04:49.136680 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m16:04:49.137752 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:04:49.143168 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:04:49.143820 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:04:49.147023 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:04:49.149008 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:04:49.149580 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:04:49.150101 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:04:49.151091 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:04:49.154221 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:04:49.154784 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m16:04:49.155720 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:04:49.157660 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m16:04:49.158479 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '69313e16-b956-4f0b-932a-d8da3d9a0f49', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109591790>]}
[0m16:04:49.159412 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 2.31s]
[0m16:04:49.160238 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m16:04:49.161538 [debug] [MainThread]: Using duckdb connection "master"
[0m16:04:49.161977 [debug] [MainThread]: On master: BEGIN
[0m16:04:49.162371 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:04:49.164554 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:04:49.165064 [debug] [MainThread]: On master: COMMIT
[0m16:04:49.165852 [debug] [MainThread]: Using duckdb connection "master"
[0m16:04:49.166295 [debug] [MainThread]: On master: COMMIT
[0m16:04:49.166986 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:04:49.167404 [debug] [MainThread]: On master: Close
[0m16:04:49.167932 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:04:49.168295 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m16:04:49.168763 [info ] [MainThread]: 
[0m16:04:49.169197 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 13.63 seconds (13.63s).
[0m16:04:49.171115 [debug] [MainThread]: Command end result
[0m16:04:49.198702 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:04:49.200842 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:04:49.208087 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m16:04:49.208533 [info ] [MainThread]: 
[0m16:04:49.209058 [info ] [MainThread]: [32mCompleted successfully[0m
[0m16:04:49.209819 [info ] [MainThread]: 
[0m16:04:49.210263 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m16:04:49.212825 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 14.663339, "process_in_blocks": "0", "process_kernel_time": 0.854971, "process_mem_max_rss": "388153344", "process_out_blocks": "0", "process_user_time": 6.762593}
[0m16:04:49.213465 [debug] [MainThread]: Command `dbt run` succeeded at 16:04:49.213283 after 14.66 seconds
[0m16:04:49.214641 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10867fe00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1093a2300>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108a48980>]}
[0m16:04:49.215224 [debug] [MainThread]: Flushing usage events
[0m16:04:49.705047 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:04:54.120399 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bc70890>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bcb6ba0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bcb6960>]}


============================== 16:04:54.125886 | 4847825b-756d-4040-83c1-21c7097da729 ==============================
[0m16:04:54.125886 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:04:54.126614 [debug] [MainThread]: running dbt with arguments {'warn_error': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'quiet': 'False', 'fail_fast': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'send_anonymous_usage_stats': 'True', 'no_print': 'None', 'use_experimental_parser': 'False', 'use_colors': 'True', 'static_parser': 'True', 'partial_parse': 'True', 'empty': 'None', 'write_json': 'True', 'indirect_selection': 'eager', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'introspect': 'True', 'cache_selected_only': 'False', 'debug': 'False', 'target_path': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'log_format': 'default', 'version_check': 'True', 'log_cache_events': 'False', 'printer_width': '80'}
[0m16:04:54.440471 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '4847825b-756d-4040-83c1-21c7097da729', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10be50d10>]}
[0m16:04:54.518659 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '4847825b-756d-4040-83c1-21c7097da729', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd36c60>]}
[0m16:04:54.520770 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:04:54.659734 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:04:54.781697 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:04:54.782189 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:04:54.829906 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '4847825b-756d-4040-83c1-21c7097da729', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10befefc0>]}
[0m16:04:54.995102 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:04:54.999430 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:04:55.020001 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '4847825b-756d-4040-83c1-21c7097da729', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c288bf0>]}
[0m16:04:55.021067 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:04:55.021762 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '4847825b-756d-4040-83c1-21c7097da729', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bec31d0>]}
[0m16:04:55.023551 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:04:55.024412 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:04:55.025091 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:04:55.025780 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:04:55.026418 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:04:55.027001 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:04:55.027618 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:04:55.031879 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0064434, "process_in_blocks": "0", "process_kernel_time": 0.30213, "process_mem_max_rss": "121073664", "process_out_blocks": "0", "process_user_time": 2.494608}
[0m16:04:55.033000 [debug] [MainThread]: Command `dbt ls` succeeded at 16:04:55.032800 after 1.01 seconds
[0m16:04:55.033873 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bcb6c30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bcb69c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd54380>]}
[0m16:04:55.034449 [debug] [MainThread]: Flushing usage events
[0m16:04:55.470559 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:05:17.954032 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111b54f80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1110da3f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111c82540>]}


============================== 16:05:17.959972 | d94e6e37-4cfe-4350-a334-c512dc35ced6 ==============================
[0m16:05:17.959972 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:05:17.960878 [debug] [MainThread]: running dbt with arguments {'fail_fast': 'False', 'no_print': 'None', 'partial_parse': 'True', 'indirect_selection': 'eager', 'write_json': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'warn_error': 'None', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'log_format': 'default', 'empty': 'None', 'static_parser': 'True', 'use_experimental_parser': 'False', 'introspect': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'target_path': 'None', 'quiet': 'False', 'use_colors': 'True', 'send_anonymous_usage_stats': 'True', 'printer_width': '80', 'invocation_command': 'dbt ls --resource-type model --output json', 'version_check': 'True', 'debug': 'False', 'cache_selected_only': 'False', 'log_cache_events': 'False'}
[0m16:05:18.282734 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'd94e6e37-4cfe-4350-a334-c512dc35ced6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f57cda0>]}
[0m16:05:18.373258 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'd94e6e37-4cfe-4350-a334-c512dc35ced6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111992750>]}
[0m16:05:18.375236 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:05:18.524864 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:05:18.650882 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:05:18.651346 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:05:18.695494 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'd94e6e37-4cfe-4350-a334-c512dc35ced6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111ee1760>]}
[0m16:05:18.779681 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:05:18.782131 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:05:18.796892 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'd94e6e37-4cfe-4350-a334-c512dc35ced6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112250ad0>]}
[0m16:05:18.797472 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:05:18.797878 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'd94e6e37-4cfe-4350-a334-c512dc35ced6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112109820>]}
[0m16:05:18.799119 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:05:18.799756 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:05:18.800310 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:05:18.800851 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:05:18.801384 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:05:18.801922 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:05:18.802495 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:05:18.805119 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.9459621, "process_in_blocks": "0", "process_kernel_time": 0.306902, "process_mem_max_rss": "120823808", "process_out_blocks": "0", "process_user_time": 2.487758}
[0m16:05:18.805733 [debug] [MainThread]: Command `dbt ls` succeeded at 16:05:18.805600 after 0.95 seconds
[0m16:05:18.806210 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1118bf080>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111be8590>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111ee1070>]}
[0m16:05:18.806732 [debug] [MainThread]: Flushing usage events
[0m16:05:19.239721 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:06:04.784665 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e59cb00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f01e900>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f01e660>]}


============================== 16:06:04.790141 | 92435698-30f8-4a88-a8d8-52ba8dfdc0bb ==============================
[0m16:06:04.790141 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:06:04.790840 [debug] [MainThread]: running dbt with arguments {'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'send_anonymous_usage_stats': 'True', 'introspect': 'True', 'static_parser': 'True', 'printer_width': '80', 'log_cache_events': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'no_print': 'None', 'partial_parse': 'True', 'write_json': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'log_format': 'default', 'fail_fast': 'False', 'quiet': 'False', 'warn_error': 'None', 'target_path': 'None', 'debug': 'False', 'empty': 'None', 'indirect_selection': 'eager', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'use_experimental_parser': 'False', 'use_colors': 'True', 'cache_selected_only': 'False', 'version_check': 'True'}
[0m16:06:05.127819 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '92435698-30f8-4a88-a8d8-52ba8dfdc0bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f0ea840>]}
[0m16:06:05.208290 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '92435698-30f8-4a88-a8d8-52ba8dfdc0bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2d0f80>]}
[0m16:06:05.210267 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:06:05.350337 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:06:05.470773 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:06:05.471257 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:06:05.515651 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '92435698-30f8-4a88-a8d8-52ba8dfdc0bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f259f40>]}
[0m16:06:05.599226 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:06:05.601690 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:06:05.616149 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '92435698-30f8-4a88-a8d8-52ba8dfdc0bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f5c7b60>]}
[0m16:06:05.616734 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:06:05.617144 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '92435698-30f8-4a88-a8d8-52ba8dfdc0bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f1b0d10>]}
[0m16:06:05.618362 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:06:05.618993 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:06:05.619564 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:06:05.620103 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:06:05.620644 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:06:05.621185 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:06:05.621742 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:06:05.624341 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.9275891, "process_in_blocks": "0", "process_kernel_time": 0.280202, "process_mem_max_rss": "121012224", "process_out_blocks": "0", "process_user_time": 2.395091}
[0m16:06:05.624976 [debug] [MainThread]: Command `dbt ls` succeeded at 16:06:05.624842 after 0.93 seconds
[0m16:06:05.625551 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10eab5460>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f25ab10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f01e7e0>]}
[0m16:06:05.625996 [debug] [MainThread]: Flushing usage events
[0m16:06:06.071839 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:06:17.626973 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c913a10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f132960>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f132720>]}


============================== 16:06:17.632043 | 3fe3d727-1fac-4056-9310-42cf6446375a ==============================
[0m16:06:17.632043 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:06:17.632722 [debug] [MainThread]: running dbt with arguments {'use_colors': 'True', 'partial_parse': 'True', 'introspect': 'True', 'use_experimental_parser': 'False', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'quiet': 'False', 'write_json': 'True', 'log_format': 'default', 'invocation_command': 'dbt ls --resource-type model --output json', 'printer_width': '80', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'empty': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_cache_events': 'False', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'indirect_selection': 'eager', 'fail_fast': 'False', 'version_check': 'True', 'no_print': 'None'}
[0m16:06:17.956196 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '3fe3d727-1fac-4056-9310-42cf6446375a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f1b2b10>]}
[0m16:06:18.032528 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '3fe3d727-1fac-4056-9310-42cf6446375a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f1d0d70>]}
[0m16:06:18.034477 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:06:18.170994 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:06:18.291287 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:06:18.291777 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:06:18.336092 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '3fe3d727-1fac-4056-9310-42cf6446375a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f3bfaa0>]}
[0m16:06:18.418501 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:06:18.420978 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:06:18.435192 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '3fe3d727-1fac-4056-9310-42cf6446375a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f700e00>]}
[0m16:06:18.435782 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:06:18.436184 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '3fe3d727-1fac-4056-9310-42cf6446375a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f6f1820>]}
[0m16:06:18.437501 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:06:18.438133 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:06:18.438740 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:06:18.439292 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:06:18.439833 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:06:18.440373 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:06:18.440913 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:06:18.443551 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.9061714, "process_in_blocks": "0", "process_kernel_time": 0.276197, "process_mem_max_rss": "120918016", "process_out_blocks": "0", "process_user_time": 2.361502}
[0m16:06:18.444178 [debug] [MainThread]: Command `dbt ls` succeeded at 16:06:18.444044 after 0.91 seconds
[0m16:06:18.444769 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e5fcef0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f3e6b40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f2fa240>]}
[0m16:06:18.445213 [debug] [MainThread]: Flushing usage events
[0m16:06:18.878221 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:09:12.097012 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1106ffaa0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11114ea20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11114e780>]}


============================== 16:09:12.104440 | d2a48398-88a5-4214-9c96-495b95b28044 ==============================
[0m16:09:12.104440 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:09:12.105200 [debug] [MainThread]: running dbt with arguments {'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'fail_fast': 'False', 'send_anonymous_usage_stats': 'True', 'no_print': 'None', 'debug': 'False', 'target_path': 'None', 'log_format': 'default', 'use_colors': 'True', 'static_parser': 'True', 'empty': 'None', 'partial_parse': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'invocation_command': 'dbt ls --resource-type model --output json', 'printer_width': '80', 'log_cache_events': 'False', 'use_experimental_parser': 'False', 'version_check': 'True', 'indirect_selection': 'eager', 'introspect': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'warn_error': 'None', 'cache_selected_only': 'False', 'write_json': 'True', 'quiet': 'False'}
[0m16:09:12.489077 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'd2a48398-88a5-4214-9c96-495b95b28044', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1110eb380>]}
[0m16:09:12.566129 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'd2a48398-88a5-4214-9c96-495b95b28044', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11047f5c0>]}
[0m16:09:12.570439 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:09:12.725168 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:09:12.891164 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:09:12.891657 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:09:12.935763 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'd2a48398-88a5-4214-9c96-495b95b28044', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1113d69c0>]}
[0m16:09:13.017041 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:09:13.020847 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:09:13.057032 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'd2a48398-88a5-4214-9c96-495b95b28044', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1115ce600>]}
[0m16:09:13.057643 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:09:13.058079 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'd2a48398-88a5-4214-9c96-495b95b28044', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1116e5790>]}
[0m16:09:13.059411 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:09:13.060075 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:09:13.060720 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:09:13.061315 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:09:13.061903 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:09:13.062510 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:09:13.063116 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-dev/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:09:13.065871 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0655822, "process_in_blocks": "0", "process_kernel_time": 0.549139, "process_mem_max_rss": "120709120", "process_out_blocks": "0", "process_user_time": 2.925104}
[0m16:09:13.066627 [debug] [MainThread]: Command `dbt ls` succeeded at 16:09:13.066414 after 1.07 seconds
[0m16:09:13.067173 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110f57980>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111318a70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111271d30>]}
[0m16:09:13.067626 [debug] [MainThread]: Flushing usage events
[0m16:09:13.552726 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:09:38.040740 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fb937a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1122c76b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11232a540>]}


============================== 16:09:38.048725 | 82968ac3-4209-45f8-aaa7-32ceb732373e ==============================
[0m16:09:38.048725 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:09:38.049671 [debug] [MainThread]: running dbt with arguments {'send_anonymous_usage_stats': 'True', 'no_print': 'None', 'use_experimental_parser': 'False', 'target_path': 'None', 'version_check': 'True', 'write_json': 'True', 'debug': 'False', 'invocation_command': 'dbt run --target prod', 'empty': 'False', 'fail_fast': 'False', 'quiet': 'False', 'introspect': 'True', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_format': 'default', 'warn_error': 'None', 'printer_width': '80', 'use_colors': 'True', 'partial_parse': 'True', 'static_parser': 'True', 'log_cache_events': 'False', 'cache_selected_only': 'False', 'indirect_selection': 'eager', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs'}
[0m16:09:38.493672 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '82968ac3-4209-45f8-aaa7-32ceb732373e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1122e40b0>]}
[0m16:09:38.577248 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '82968ac3-4209-45f8-aaa7-32ceb732373e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111fee1e0>]}
[0m16:09:38.580714 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:09:38.742919 [debug] [MainThread]: checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, vars: {}, profile: , target: prod, version: 1.10.9
[0m16:09:38.847258 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m16:09:38.847839 [debug] [MainThread]: previous checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, current checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23
[0m16:09:38.848269 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '82968ac3-4209-45f8-aaa7-32ceb732373e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1127fd1c0>]}
[0m16:09:40.344374 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '82968ac3-4209-45f8-aaa7-32ceb732373e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1127a70e0>]}
[0m16:09:40.422343 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:09:40.425438 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:09:40.465949 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '82968ac3-4209-45f8-aaa7-32ceb732373e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112aa5400>]}
[0m16:09:40.466577 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:09:40.467055 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '82968ac3-4209-45f8-aaa7-32ceb732373e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112ac0950>]}
[0m16:09:40.469556 [info ] [MainThread]: 
[0m16:09:40.470046 [info ] [MainThread]: Concurrency: 1 threads (target='prod')
[0m16:09:40.470501 [info ] [MainThread]: 
[0m16:09:40.471178 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:09:40.478187 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m16:09:40.613820 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:09:40.614327 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:09:40.614709 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:09:40.688964 [debug] [ThreadPool]: SQL status: OK in 0.074 seconds
[0m16:09:40.690634 [debug] [ThreadPool]: On list_memory: Close
[0m16:09:40.693170 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:09:40.693627 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:09:40.694025 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:09:40.696391 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:09:40.697900 [debug] [ThreadPool]: On list_memory: Close
[0m16:09:40.698669 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_references)
[0m16:09:40.699227 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "references"
"
[0m16:09:40.706389 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:09:40.706823 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:09:40.707174 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:09:40.709876 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:09:40.711515 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:09:40.711922 [debug] [ThreadPool]: On create_memory_references: BEGIN
[0m16:09:40.712534 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:09:40.712884 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:09:40.713225 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_references"} */

    
    
        create schema if not exists memory."references"
    
[0m16:09:40.713858 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:09:40.714810 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:09:40.715178 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:09:40.715513 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:09:40.716071 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:09:40.716432 [debug] [ThreadPool]: On create_memory_references: Close
[0m16:09:40.717087 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_references, now create_memory_fct_salesforce)
[0m16:09:40.717587 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m16:09:40.719762 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:09:40.720142 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:09:40.720486 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:09:40.722362 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:09:40.723954 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:09:40.724328 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m16:09:40.724936 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:09:40.725301 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:09:40.725646 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m16:09:40.726249 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:09:40.727206 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:09:40.727567 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:09:40.727899 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:09:40.728497 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:09:40.728883 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m16:09:40.730421 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_references)
[0m16:09:40.736905 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:09:40.737336 [debug] [ThreadPool]: On list_memory_references: BEGIN
[0m16:09:40.737726 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:09:40.739385 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:09:40.739785 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:09:40.740155 [debug] [ThreadPool]: On list_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'references'
    and lower(table_catalog) = 'memory'
  
[0m16:09:40.761866 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m16:09:40.763594 [debug] [ThreadPool]: On list_memory_references: ROLLBACK
[0m16:09:40.765659 [debug] [ThreadPool]: Failed to rollback 'list_memory_references'
[0m16:09:40.766139 [debug] [ThreadPool]: On list_memory_references: Close
[0m16:09:40.766869 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_references, now list_memory_fct_salesforce)
[0m16:09:40.769308 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:09:40.769741 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m16:09:40.770136 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:09:40.772113 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:09:40.772565 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:09:40.772994 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m16:09:40.777181 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m16:09:40.778717 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m16:09:40.779793 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m16:09:40.780159 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m16:09:40.780850 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '82968ac3-4209-45f8-aaa7-32ceb732373e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112ac26c0>]}
[0m16:09:40.781410 [debug] [MainThread]: Using duckdb connection "master"
[0m16:09:40.781792 [debug] [MainThread]: On master: BEGIN
[0m16:09:40.782144 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:09:40.783853 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:09:40.784264 [debug] [MainThread]: On master: COMMIT
[0m16:09:40.784637 [debug] [MainThread]: Using duckdb connection "master"
[0m16:09:40.784991 [debug] [MainThread]: On master: COMMIT
[0m16:09:40.785545 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:09:40.785925 [debug] [MainThread]: On master: Close
[0m16:09:40.789534 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m16:09:40.790275 [info ] [Thread-1 (]: 1 of 7 START sql table model references.states ................................. [RUN]
[0m16:09:40.790886 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m16:09:40.791333 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m16:09:40.801295 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m16:09:40.802188 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m16:09:40.840772 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m16:09:40.841724 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:09:40.842141 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m16:09:40.842526 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:09:40.844131 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:09:40.844538 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:09:40.845082 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m16:09:40.889409 [debug] [Thread-1 (]: SQL status: OK in 0.044 seconds
[0m16:09:40.896326 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:09:40.896853 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */
alter table memory."references"."states__dbt_tmp" rename to "states"
[0m16:09:40.898732 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:09:40.906950 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:09:40.907498 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:09:40.920003 [debug] [Thread-1 (]: SQL status: OK in 0.012 seconds
[0m16:09:40.932861 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:09:40.933429 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:09:40.934079 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:09:40.935439 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:09:40.942278 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:09:40.942799 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

      drop table if exists memory."references"."states__dbt_backup" cascade
    
[0m16:09:40.943611 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:09:40.946287 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m16:09:40.948348 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '82968ac3-4209-45f8-aaa7-32ceb732373e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fc7fd40>]}
[0m16:09:40.949148 [info ] [Thread-1 (]: 1 of 7 OK created sql table model references.states ............................ [[32mOK[0m in 0.16s]
[0m16:09:40.949948 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m16:09:40.950449 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m16:09:40.951222 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m16:09:40.951860 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m16:09:40.952322 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m16:09:40.957354 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m16:09:40.958295 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m16:09:40.961931 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m16:09:40.962922 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:09:40.963969 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m16:09:40.965206 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:09:40.967945 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:09:40.968509 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:09:40.969246 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:09:42.124026 [debug] [Thread-1 (]: SQL status: OK in 1.154 seconds
[0m16:09:42.129301 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:09:42.129934 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m16:09:42.131043 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:09:42.136770 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:09:42.137398 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:09:42.141697 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:09:42.143567 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:09:42.144207 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:09:42.144699 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:09:42.146450 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:09:42.149645 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:09:42.150306 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m16:09:42.151251 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:09:42.153212 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m16:09:42.153956 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '82968ac3-4209-45f8-aaa7-32ceb732373e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112e39490>]}
[0m16:09:42.154687 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 1.20s]
[0m16:09:42.155387 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m16:09:42.155859 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m16:09:42.156389 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m16:09:42.157001 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m16:09:42.157446 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m16:09:42.165824 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m16:09:42.166852 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m16:09:42.174068 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m16:09:42.174998 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:09:42.175429 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m16:09:42.175830 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:09:42.177768 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:09:42.178249 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:09:42.179106 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:09:49.232276 [debug] [Thread-1 (]: SQL status: OK in 7.052 seconds
[0m16:09:49.237573 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:09:49.238628 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m16:09:49.239820 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:09:49.244894 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:09:49.245417 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:09:49.444852 [debug] [Thread-1 (]: SQL status: OK in 0.199 seconds
[0m16:09:49.446309 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:09:49.446779 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:09:49.447205 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:09:49.457033 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m16:09:49.459929 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:09:49.460388 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m16:09:49.461170 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:09:49.462890 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m16:09:49.463643 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '82968ac3-4209-45f8-aaa7-32ceb732373e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112f378f0>]}
[0m16:09:49.464409 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 7.31s]
[0m16:09:49.465140 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m16:09:49.466069 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m16:09:49.466637 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m16:09:49.467289 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m16:09:49.467758 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m16:09:49.472658 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m16:09:49.473561 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m16:09:49.477156 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m16:09:49.479272 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:09:49.480418 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m16:09:49.481009 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:09:49.482695 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:09:49.483138 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:09:49.483805 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:09:50.423704 [debug] [Thread-1 (]: SQL status: OK in 0.939 seconds
[0m16:09:50.427123 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:09:50.427586 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m16:09:50.428412 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:09:50.432478 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:09:50.433062 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:09:50.437511 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:09:50.439465 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:09:50.439994 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:09:50.440421 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:09:50.443002 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:09:50.445665 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:09:50.446108 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m16:09:50.447009 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:09:50.448676 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m16:09:50.449360 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '82968ac3-4209-45f8-aaa7-32ceb732373e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112ee3da0>]}
[0m16:09:50.450029 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 0.98s]
[0m16:09:50.450678 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m16:09:50.451121 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m16:09:50.451619 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m16:09:50.452164 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m16:09:50.452575 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m16:09:50.456754 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m16:09:50.457801 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m16:09:50.461227 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m16:09:50.462176 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:09:50.462628 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m16:09:50.463566 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:09:50.466905 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:09:50.467417 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:09:50.467972 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:09:50.958092 [debug] [Thread-1 (]: SQL status: OK in 0.490 seconds
[0m16:09:50.962395 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:09:50.963012 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m16:09:50.963939 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:09:50.968450 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:09:50.969164 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:09:50.972064 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:09:50.973715 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:09:50.974217 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:09:50.974648 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:09:50.976135 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:09:50.981029 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:09:50.981553 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m16:09:50.982409 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:09:50.983992 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m16:09:50.984717 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '82968ac3-4209-45f8-aaa7-32ceb732373e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112f5a3c0>]}
[0m16:09:50.985940 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.53s]
[0m16:09:50.986760 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m16:09:50.987921 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m16:09:50.989080 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m16:09:50.990011 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m16:09:50.990536 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m16:09:50.996794 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m16:09:50.997802 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m16:09:51.002422 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m16:09:51.003388 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:09:51.003843 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m16:09:51.004247 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:09:51.005988 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:09:51.006477 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:09:51.007027 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:09:53.215208 [debug] [Thread-1 (]: SQL status: OK in 2.208 seconds
[0m16:09:53.219278 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:09:53.219796 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m16:09:53.220625 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:09:53.225068 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:09:53.225623 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:09:53.231283 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m16:09:53.232977 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:09:53.233744 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:09:53.234288 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:09:53.236876 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:09:53.240255 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:09:53.240849 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m16:09:53.241661 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:09:53.243534 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m16:09:53.244321 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '82968ac3-4209-45f8-aaa7-32ceb732373e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1129f8920>]}
[0m16:09:53.245083 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 2.25s]
[0m16:09:53.246346 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m16:09:53.246863 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m16:09:53.247534 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m16:09:53.248151 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m16:09:53.248604 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m16:09:53.255716 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m16:09:53.256676 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m16:09:53.260799 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m16:09:53.262006 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:09:53.262550 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m16:09:53.263196 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:09:53.265231 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:09:53.265749 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:09:53.266623 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m16:09:55.200028 [debug] [Thread-1 (]: SQL status: OK in 1.932 seconds
[0m16:09:55.204353 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:09:55.204934 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m16:09:55.205757 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:09:55.209980 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:09:55.210476 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/python/usawfl-data-dbt/model-output-prod/fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:09:55.212799 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:09:55.214357 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:09:55.214913 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:09:55.215317 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:09:55.216126 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:09:55.219180 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:09:55.219722 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m16:09:55.220834 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:09:55.222818 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m16:09:55.223486 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '82968ac3-4209-45f8-aaa7-32ceb732373e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112a44e00>]}
[0m16:09:55.224215 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.98s]
[0m16:09:55.225018 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m16:09:55.226234 [debug] [MainThread]: Using duckdb connection "master"
[0m16:09:55.226637 [debug] [MainThread]: On master: BEGIN
[0m16:09:55.226993 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:09:55.229022 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:09:55.229471 [debug] [MainThread]: On master: COMMIT
[0m16:09:55.229840 [debug] [MainThread]: Using duckdb connection "master"
[0m16:09:55.230194 [debug] [MainThread]: On master: COMMIT
[0m16:09:55.231538 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:09:55.231955 [debug] [MainThread]: On master: Close
[0m16:09:55.232509 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:09:55.232902 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m16:09:55.233337 [info ] [MainThread]: 
[0m16:09:55.234019 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 14.76 seconds (14.76s).
[0m16:09:55.236563 [debug] [MainThread]: Command end result
[0m16:09:55.262999 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:09:55.265314 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:09:55.272858 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m16:09:55.273349 [info ] [MainThread]: 
[0m16:09:55.273777 [info ] [MainThread]: [32mCompleted successfully[0m
[0m16:09:55.274232 [info ] [MainThread]: 
[0m16:09:55.274677 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m16:09:55.277509 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 17.334743, "process_in_blocks": "0", "process_kernel_time": 1.080244, "process_mem_max_rss": "394293248", "process_out_blocks": "0", "process_user_time": 6.806947}
[0m16:09:55.278291 [debug] [MainThread]: Command `dbt run` succeeded at 16:09:55.278146 after 17.34 seconds
[0m16:09:55.278847 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1115b3b00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112957ad0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1122c76b0>]}
[0m16:09:55.280333 [debug] [MainThread]: Flushing usage events
[0m16:09:55.781129 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:36:16.691965 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b20faa0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bc076b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bc6a840>]}


============================== 16:36:16.699212 | dff8c4c9-19af-4c34-aad0-c3dbab6904b7 ==============================
[0m16:36:16.699212 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:36:16.700304 [debug] [MainThread]: running dbt with arguments {'invocation_command': 'dbt ls --resource-type model --output json', 'quiet': 'False', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'send_anonymous_usage_stats': 'True', 'version_check': 'True', 'no_print': 'None', 'target_path': 'None', 'printer_width': '80', 'fail_fast': 'False', 'cache_selected_only': 'False', 'warn_error': 'None', 'partial_parse': 'True', 'log_format': 'default', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'write_json': 'True', 'debug': 'False', 'indirect_selection': 'eager', 'use_colors': 'True', 'use_experimental_parser': 'False', 'log_cache_events': 'False', 'introspect': 'True', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'empty': 'None'}
[0m16:36:17.167331 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'dff8c4c9-19af-4c34-aad0-c3dbab6904b7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd046b0>]}
[0m16:36:17.246084 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'dff8c4c9-19af-4c34-aad0-c3dbab6904b7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bc07b00>]}
[0m16:36:17.250168 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:36:17.416854 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:36:17.529451 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m16:36:17.529964 [debug] [MainThread]: previous checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, current checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e
[0m16:36:17.530351 [info ] [MainThread]: Unable to do partial parsing because a project config has changed
[0m16:36:17.530876 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'dff8c4c9-19af-4c34-aad0-c3dbab6904b7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bce7ec0>]}
[0m16:36:19.102726 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'dff8c4c9-19af-4c34-aad0-c3dbab6904b7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd68140>]}
[0m16:36:19.179186 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:36:19.182400 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:36:19.210293 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'dff8c4c9-19af-4c34-aad0-c3dbab6904b7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c375ac0>]}
[0m16:36:19.210870 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:36:19.211289 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'dff8c4c9-19af-4c34-aad0-c3dbab6904b7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bdff920>]}
[0m16:36:19.212515 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:36:19.213154 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:36:19.213720 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:36:19.214280 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:36:19.214831 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:36:19.215382 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:36:19.215930 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:36:19.218785 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 2.6278684, "process_in_blocks": "0", "process_kernel_time": 0.535103, "process_mem_max_rss": "125059072", "process_out_blocks": "0", "process_user_time": 4.196582}
[0m16:36:19.219453 [debug] [MainThread]: Command `dbt ls` succeeded at 16:36:19.219323 after 2.63 seconds
[0m16:36:19.219947 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b701640>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bc07620>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c3e4f50>]}
[0m16:36:19.220396 [debug] [MainThread]: Flushing usage events
[0m16:36:19.731380 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:36:32.794259 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105328fb0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105a6e6c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105a6e450>]}


============================== 16:36:32.799892 | 8a728f07-1b79-4098-87cf-5e9156560068 ==============================
[0m16:36:32.799892 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:36:32.800783 [debug] [MainThread]: running dbt with arguments {'target_path': 'None', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'send_anonymous_usage_stats': 'True', 'use_colors': 'True', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'quiet': 'False', 'printer_width': '80', 'indirect_selection': 'eager', 'version_check': 'True', 'static_parser': 'True', 'empty': 'False', 'log_cache_events': 'False', 'warn_error': 'None', 'use_experimental_parser': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'partial_parse': 'True', 'introspect': 'True', 'write_json': 'True', 'debug': 'False', 'log_format': 'default', 'cache_selected_only': 'False', 'invocation_command': 'dbt run', 'fail_fast': 'False'}
[0m16:36:33.126481 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '8a728f07-1b79-4098-87cf-5e9156560068', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x103360e00>]}
[0m16:36:33.203359 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '8a728f07-1b79-4098-87cf-5e9156560068', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105b91ca0>]}
[0m16:36:33.205397 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:36:33.344232 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:36:33.466229 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 7 files changed.
[0m16:36:33.466970 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/references/states.sql
[0m16:36:33.467443 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/tournaments.sql
[0m16:36:33.467896 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/stats.sql
[0m16:36:33.468348 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/officials.sql
[0m16:36:33.468800 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/contacts.sql
[0m16:36:33.469250 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/teams.sql
[0m16:36:33.469693 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/members.sql
[0m16:36:33.860303 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '8a728f07-1b79-4098-87cf-5e9156560068', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10618af60>]}
[0m16:36:33.940496 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:36:33.943001 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:36:33.961234 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '8a728f07-1b79-4098-87cf-5e9156560068', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1061c3ce0>]}
[0m16:36:33.961803 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:36:33.962228 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '8a728f07-1b79-4098-87cf-5e9156560068', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106189940>]}
[0m16:36:33.964542 [info ] [MainThread]: 
[0m16:36:33.965007 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m16:36:33.965408 [info ] [MainThread]: 
[0m16:36:33.966110 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:36:33.972712 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m16:36:34.047563 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:36:34.048124 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:36:34.048663 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:36:34.126072 [debug] [ThreadPool]: SQL status: OK in 0.077 seconds
[0m16:36:34.127728 [debug] [ThreadPool]: On list_memory: Close
[0m16:36:34.130218 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:36:34.130654 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:36:34.131009 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:36:34.133350 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:36:34.134867 [debug] [ThreadPool]: On list_memory: Close
[0m16:36:34.135690 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_salesforce)
[0m16:36:34.136209 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m16:36:34.143313 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:36:34.143746 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:36:34.144096 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:36:34.147059 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:36:34.148905 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:36:34.149317 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m16:36:34.149966 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:36:34.150337 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:36:34.150693 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m16:36:34.151418 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:36:34.152421 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:36:34.152800 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:36:34.153149 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:36:34.153738 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:36:34.154116 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m16:36:34.154818 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now create_memory_references)
[0m16:36:34.155348 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "references"
"
[0m16:36:34.157576 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:36:34.157982 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:36:34.158344 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:36:34.160343 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:36:34.161799 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:36:34.162155 [debug] [ThreadPool]: On create_memory_references: BEGIN
[0m16:36:34.162700 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:36:34.163041 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:36:34.163380 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
    
        create schema if not exists memory."references"
    
[0m16:36:34.163949 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:36:34.164875 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:36:34.165236 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:36:34.165567 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:36:34.166094 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:36:34.166451 [debug] [ThreadPool]: On create_memory_references: Close
[0m16:36:34.168018 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_references, now list_memory_fct_salesforce)
[0m16:36:34.174183 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:36:34.174618 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m16:36:34.174950 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:36:34.176665 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:36:34.177067 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:36:34.177436 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m16:36:34.199864 [debug] [ThreadPool]: SQL status: OK in 0.022 seconds
[0m16:36:34.201610 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m16:36:34.204053 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m16:36:34.204561 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m16:36:34.205443 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now list_memory_references)
[0m16:36:34.208467 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:36:34.209041 [debug] [ThreadPool]: On list_memory_references: BEGIN
[0m16:36:34.209534 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:36:34.211793 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:36:34.212314 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:36:34.212814 [debug] [ThreadPool]: On list_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'references'
    and lower(table_catalog) = 'memory'
  
[0m16:36:34.217443 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m16:36:34.219080 [debug] [ThreadPool]: On list_memory_references: ROLLBACK
[0m16:36:34.220244 [debug] [ThreadPool]: Failed to rollback 'list_memory_references'
[0m16:36:34.220647 [debug] [ThreadPool]: On list_memory_references: Close
[0m16:36:34.221394 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '8a728f07-1b79-4098-87cf-5e9156560068', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105eea330>]}
[0m16:36:34.222072 [debug] [MainThread]: Using duckdb connection "master"
[0m16:36:34.222491 [debug] [MainThread]: On master: BEGIN
[0m16:36:34.222887 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:36:34.224778 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:36:34.225177 [debug] [MainThread]: On master: COMMIT
[0m16:36:34.225552 [debug] [MainThread]: Using duckdb connection "master"
[0m16:36:34.225903 [debug] [MainThread]: On master: COMMIT
[0m16:36:34.226469 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:36:34.226850 [debug] [MainThread]: On master: Close
[0m16:36:34.231532 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m16:36:34.232249 [info ] [Thread-1 (]: 1 of 7 START sql table model references.states ................................. [RUN]
[0m16:36:34.232826 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_references, now model.usawfl.states)
[0m16:36:34.233265 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m16:36:34.241616 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m16:36:34.242610 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m16:36:34.283404 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m16:36:34.285223 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:36:34.285784 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m16:36:34.286204 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:36:34.287875 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:36:34.288372 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:36:34.288968 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m16:36:34.332838 [debug] [Thread-1 (]: SQL status: OK in 0.043 seconds
[0m16:36:34.404303 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:36:34.405037 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."references"."states__dbt_tmp" rename to "states"
[0m16:36:34.407394 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:36:34.418618 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:36:34.419227 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/tmp/model-output-default/references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:36:34.430488 [debug] [Thread-1 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/tmp/model-output-default/references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:36:34.431470 [debug] [Thread-1 (]: DuckDB adapter: Rolling back transaction.
[0m16:36:34.432154 [debug] [Thread-1 (]: On model.usawfl.states: ROLLBACK
[0m16:36:34.447157 [debug] [Thread-1 (]: Failed to rollback 'model.usawfl.states'
[0m16:36:34.447779 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m16:36:34.451871 [debug] [Thread-1 (]: Runtime Error in model states (models/references/states.sql)
  IO Error: Cannot open file "/tmp/model-output-default/references/states/states.parquet": No such file or directory
[0m16:36:34.454519 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8a728f07-1b79-4098-87cf-5e9156560068', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106621ee0>]}
[0m16:36:34.455447 [error] [Thread-1 (]: 1 of 7 ERROR creating sql table model references.states ........................ [[31mERROR[0m in 0.22s]
[0m16:36:34.456270 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m16:36:34.456747 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m16:36:34.457277 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m16:36:34.457797 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m16:36:34.458213 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m16:36:34.462921 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m16:36:34.463792 [debug] [Thread-4 (]: Marking all children of 'model.usawfl.states' to be skipped because of status 'error'.  Reason: Runtime Error in model states (models/references/states.sql)
  IO Error: Cannot open file "/tmp/model-output-default/references/states/states.parquet": No such file or directory.
[0m16:36:34.465434 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m16:36:34.469486 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m16:36:34.470377 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:36:34.470807 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m16:36:34.471201 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:36:34.475090 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:36:34.475723 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:36:34.476466 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:36:35.009135 [debug] [Thread-1 (]: SQL status: OK in 0.532 seconds
[0m16:36:35.013780 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:36:35.014418 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m16:36:35.015381 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:36:35.021372 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:36:35.021954 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/tmp/model-output-default/fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:36:35.023614 [debug] [Thread-1 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/tmp/model-output-default/fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:36:35.024147 [debug] [Thread-1 (]: DuckDB adapter: Rolling back transaction.
[0m16:36:35.024874 [debug] [Thread-1 (]: On model.usawfl.tournaments: ROLLBACK
[0m16:36:35.028481 [debug] [Thread-1 (]: Failed to rollback 'model.usawfl.tournaments'
[0m16:36:35.028936 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m16:36:35.032971 [debug] [Thread-1 (]: Runtime Error in model tournaments (models/fct_salesforce/tournaments.sql)
  IO Error: Cannot open file "/tmp/model-output-default/fct_salesforce/tournaments/tournaments.parquet": No such file or directory
[0m16:36:35.033544 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8a728f07-1b79-4098-87cf-5e9156560068', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105cceea0>]}
[0m16:36:35.034288 [error] [Thread-1 (]: 2 of 7 ERROR creating sql table model fct_salesforce.tournaments ............... [[31mERROR[0m in 0.58s]
[0m16:36:35.035001 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m16:36:35.035484 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m16:36:35.035966 [info ] [Thread-1 (]: 3 of 7 SKIP relation fct_salesforce.contacts ................................... [[33mSKIP[0m]
[0m16:36:35.036639 [debug] [Thread-4 (]: Marking all children of 'model.usawfl.tournaments' to be skipped because of status 'error'.  Reason: Runtime Error in model tournaments (models/fct_salesforce/tournaments.sql)
  IO Error: Cannot open file "/tmp/model-output-default/fct_salesforce/tournaments/tournaments.parquet": No such file or directory.
[0m16:36:35.037100 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m16:36:35.038053 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m16:36:35.038557 [info ] [Thread-1 (]: 4 of 7 SKIP relation fct_salesforce.officials .................................. [[33mSKIP[0m]
[0m16:36:35.039162 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m16:36:35.039628 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m16:36:35.040069 [info ] [Thread-1 (]: 5 of 7 SKIP relation fct_salesforce.teams ...................................... [[33mSKIP[0m]
[0m16:36:35.040880 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m16:36:35.041820 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m16:36:35.042601 [info ] [Thread-1 (]: 6 of 7 SKIP relation fct_salesforce.members .................................... [[33mSKIP[0m]
[0m16:36:35.043193 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m16:36:35.043685 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m16:36:35.044130 [info ] [Thread-1 (]: 7 of 7 SKIP relation fct_salesforce.stats ...................................... [[33mSKIP[0m]
[0m16:36:35.044686 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m16:36:35.045855 [debug] [MainThread]: Using duckdb connection "master"
[0m16:36:35.046335 [debug] [MainThread]: On master: BEGIN
[0m16:36:35.046693 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:36:35.049199 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:36:35.049699 [debug] [MainThread]: On master: COMMIT
[0m16:36:35.050095 [debug] [MainThread]: Using duckdb connection "master"
[0m16:36:35.050443 [debug] [MainThread]: On master: COMMIT
[0m16:36:35.051030 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:36:35.051403 [debug] [MainThread]: On master: Close
[0m16:36:35.051885 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:36:35.052368 [debug] [MainThread]: Connection 'model.usawfl.tournaments' was properly closed.
[0m16:36:35.054036 [info ] [MainThread]: 
[0m16:36:35.054984 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 1.09 seconds (1.09s).
[0m16:36:35.056378 [debug] [MainThread]: Command end result
[0m16:36:35.087359 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:36:35.089547 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:36:35.098345 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m16:36:35.098925 [info ] [MainThread]: 
[0m16:36:35.099401 [info ] [MainThread]: [31mCompleted with 2 errors, 0 partial successes, and 0 warnings:[0m
[0m16:36:35.099803 [info ] [MainThread]: 
[0m16:36:35.100280 [error] [MainThread]: [31mFailure in model states (models/references/states.sql)[0m
[0m16:36:35.100812 [error] [MainThread]:   Runtime Error in model states (models/references/states.sql)
  IO Error: Cannot open file "/tmp/model-output-default/references/states/states.parquet": No such file or directory
[0m16:36:35.101206 [info ] [MainThread]: 
[0m16:36:35.101724 [info ] [MainThread]:   compiled code at target/compiled/usawfl/models/references/states.sql
[0m16:36:35.102135 [info ] [MainThread]: 
[0m16:36:35.102686 [error] [MainThread]: [31mFailure in model tournaments (models/fct_salesforce/tournaments.sql)[0m
[0m16:36:35.103503 [error] [MainThread]:   Runtime Error in model tournaments (models/fct_salesforce/tournaments.sql)
  IO Error: Cannot open file "/tmp/model-output-default/fct_salesforce/tournaments/tournaments.parquet": No such file or directory
[0m16:36:35.103907 [info ] [MainThread]: 
[0m16:36:35.104979 [info ] [MainThread]:   compiled code at target/compiled/usawfl/models/fct_salesforce/tournaments.sql
[0m16:36:35.105437 [info ] [MainThread]: 
[0m16:36:35.105880 [info ] [MainThread]: Done. PASS=0 WARN=0 ERROR=2 SKIP=5 NO-OP=0 TOTAL=7
[0m16:36:35.109025 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": false, "command_wall_clock_time": 2.4035833, "process_in_blocks": "0", "process_kernel_time": 0.430223, "process_mem_max_rss": "154804224", "process_out_blocks": "0", "process_user_time": 3.354508}
[0m16:36:35.109732 [debug] [MainThread]: Command `dbt run` failed at 16:36:35.109588 after 2.40 seconds
[0m16:36:35.110359 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10565ade0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104d198e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1058d0950>]}
[0m16:36:35.110956 [debug] [MainThread]: Flushing usage events
[0m16:36:35.570367 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:37:06.340124 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1071cfda0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1078aa750>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1078aa4e0>]}


============================== 16:37:06.345424 | e2b3acac-3278-44fc-835c-b2a23deb8a67 ==============================
[0m16:37:06.345424 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:37:06.346125 [debug] [MainThread]: running dbt with arguments {'cache_selected_only': 'False', 'warn_error': 'None', 'introspect': 'True', 'static_parser': 'True', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'target_path': 'None', 'fail_fast': 'False', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'write_json': 'True', 'send_anonymous_usage_stats': 'True', 'log_format': 'default', 'use_colors': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'version_check': 'True', 'log_cache_events': 'False', 'empty': 'False', 'quiet': 'False', 'use_experimental_parser': 'False', 'no_print': 'None', 'invocation_command': 'dbt run', 'partial_parse': 'True', 'indirect_selection': 'eager', 'debug': 'False', 'printer_width': '80'}
[0m16:37:06.651761 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'e2b3acac-3278-44fc-835c-b2a23deb8a67', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107948a70>]}
[0m16:37:06.730088 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'e2b3acac-3278-44fc-835c-b2a23deb8a67', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106f9b4a0>]}
[0m16:37:06.731993 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:37:06.877082 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:37:06.974002 [info ] [MainThread]: Unable to do partial parsing because a project config has changed
[0m16:37:06.974632 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'e2b3acac-3278-44fc-835c-b2a23deb8a67', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107d957c0>]}
[0m16:37:08.073181 [error] [MainThread]: Encountered an error:
Parsing Error
  Env var required but not provided: 'OUTPUT_PATH_DEV'
[0m16:37:08.076286 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": false, "command_wall_clock_time": 1.8242021, "process_in_blocks": "0", "process_kernel_time": 0.287947, "process_mem_max_rss": "122359808", "process_out_blocks": "0", "process_user_time": 3.303174}
[0m16:37:08.077015 [debug] [MainThread]: Command `dbt run` failed at 16:37:08.076869 after 1.83 seconds
[0m16:37:08.077535 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107524980>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107cf5c10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107e420c0>]}
[0m16:37:08.077992 [debug] [MainThread]: Flushing usage events
[0m16:37:08.562021 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:39:34.454713 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107cd39b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a4ea750>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a4ea4e0>]}


============================== 16:39:34.460394 | fb2094ab-668d-4074-81b2-71142154991b ==============================
[0m16:39:34.460394 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:39:34.461127 [debug] [MainThread]: running dbt with arguments {'static_parser': 'True', 'version_check': 'True', 'use_experimental_parser': 'False', 'send_anonymous_usage_stats': 'True', 'cache_selected_only': 'False', 'target_path': 'None', 'debug': 'False', 'warn_error': 'None', 'quiet': 'False', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'invocation_command': 'dbt run', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_cache_events': 'False', 'fail_fast': 'False', 'introspect': 'True', 'use_colors': 'True', 'write_json': 'True', 'partial_parse': 'True', 'printer_width': '80', 'log_format': 'default', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'empty': 'False', 'indirect_selection': 'eager'}
[0m16:39:34.766025 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'fb2094ab-668d-4074-81b2-71142154991b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10889b920>]}
[0m16:39:34.842622 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'fb2094ab-668d-4074-81b2-71142154991b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a1a7260>]}
[0m16:39:34.844739 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:39:34.987143 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:39:35.084883 [info ] [MainThread]: Unable to do partial parsing because a project config has changed
[0m16:39:35.085515 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'fb2094ab-668d-4074-81b2-71142154991b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a9d5970>]}
[0m16:39:36.577375 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'fb2094ab-668d-4074-81b2-71142154991b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ac1c230>]}
[0m16:39:36.657689 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:39:36.660581 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:39:36.679974 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'fb2094ab-668d-4074-81b2-71142154991b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ac5e300>]}
[0m16:39:36.680572 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:39:36.681012 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'fb2094ab-668d-4074-81b2-71142154991b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a973980>]}
[0m16:39:36.683589 [info ] [MainThread]: 
[0m16:39:36.684111 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m16:39:36.684487 [info ] [MainThread]: 
[0m16:39:36.685075 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:39:36.691777 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m16:39:36.757425 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:39:36.757933 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:39:36.758426 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:39:36.816316 [debug] [ThreadPool]: SQL status: OK in 0.058 seconds
[0m16:39:36.818143 [debug] [ThreadPool]: On list_memory: Close
[0m16:39:36.820955 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:39:36.821429 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:39:36.821891 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:39:36.824084 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:39:36.825589 [debug] [ThreadPool]: On list_memory: Close
[0m16:39:36.826586 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_references)
[0m16:39:36.827382 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "references"
"
[0m16:39:36.834979 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:39:36.835471 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:39:36.835846 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:39:36.837878 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:39:36.839388 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:39:36.839769 [debug] [ThreadPool]: On create_memory_references: BEGIN
[0m16:39:36.840372 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:39:36.840738 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:39:36.841116 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
    
        create schema if not exists memory."references"
    
[0m16:39:36.841765 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:39:36.842732 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:39:36.843100 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:39:36.843441 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:39:36.844009 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:39:36.844378 [debug] [ThreadPool]: On create_memory_references: Close
[0m16:39:36.845044 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_references, now create_memory_fct_salesforce)
[0m16:39:36.845542 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m16:39:36.847913 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:39:36.848405 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:39:36.848779 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:39:36.850803 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:39:36.852469 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:39:36.852859 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m16:39:36.853421 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:39:36.853774 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:39:36.854122 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m16:39:36.854716 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:39:36.855667 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:39:36.856028 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:39:36.856371 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:39:36.856993 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:39:36.857363 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m16:39:36.858993 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_references)
[0m16:39:36.865434 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:39:36.866469 [debug] [ThreadPool]: On list_memory_references: BEGIN
[0m16:39:36.867448 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:39:36.869964 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:39:36.870473 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:39:36.870987 [debug] [ThreadPool]: On list_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'references'
    and lower(table_catalog) = 'memory'
  
[0m16:39:36.887074 [debug] [ThreadPool]: SQL status: OK in 0.016 seconds
[0m16:39:36.888671 [debug] [ThreadPool]: On list_memory_references: ROLLBACK
[0m16:39:36.891153 [debug] [ThreadPool]: Failed to rollback 'list_memory_references'
[0m16:39:36.891735 [debug] [ThreadPool]: On list_memory_references: Close
[0m16:39:36.892421 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_references, now list_memory_fct_salesforce)
[0m16:39:36.894715 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:39:36.895121 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m16:39:36.895472 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:39:36.897146 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:39:36.897511 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:39:36.897875 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m16:39:36.901578 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:39:36.903022 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m16:39:36.904032 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m16:39:36.904379 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m16:39:36.905033 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'fb2094ab-668d-4074-81b2-71142154991b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b0248c0>]}
[0m16:39:36.905560 [debug] [MainThread]: Using duckdb connection "master"
[0m16:39:36.905909 [debug] [MainThread]: On master: BEGIN
[0m16:39:36.906239 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:39:36.907814 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:39:36.908195 [debug] [MainThread]: On master: COMMIT
[0m16:39:36.908552 [debug] [MainThread]: Using duckdb connection "master"
[0m16:39:36.908895 [debug] [MainThread]: On master: COMMIT
[0m16:39:36.909431 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:39:36.909800 [debug] [MainThread]: On master: Close
[0m16:39:36.913737 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m16:39:36.914471 [info ] [Thread-1 (]: 1 of 7 START sql table model references.states ................................. [RUN]
[0m16:39:36.915066 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m16:39:36.915515 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m16:39:36.925485 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m16:39:36.926380 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m16:39:36.965300 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m16:39:36.966229 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:39:36.966658 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m16:39:36.967048 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:39:36.968676 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:39:36.969093 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:39:36.969639 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m16:39:37.001469 [debug] [Thread-1 (]: SQL status: OK in 0.031 seconds
[0m16:39:37.008216 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:39:37.008693 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."references"."states__dbt_tmp" rename to "states"
[0m16:39:37.009522 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:39:37.017948 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:39:37.018470 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/Users/vongly/dev/python/usawfl-data-dbt/output/model-output-dev//references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:39:37.029279 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m16:39:37.040653 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:39:37.041211 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:39:37.041630 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:39:37.046938 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m16:39:37.053627 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:39:37.054124 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop table if exists memory."references"."states__dbt_backup" cascade
    
[0m16:39:37.057012 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:39:37.060096 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m16:39:37.062301 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'fb2094ab-668d-4074-81b2-71142154991b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ac6aab0>]}
[0m16:39:37.063096 [info ] [Thread-1 (]: 1 of 7 OK created sql table model references.states ............................ [[32mOK[0m in 0.15s]
[0m16:39:37.063837 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m16:39:37.064338 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m16:39:37.064900 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m16:39:37.065555 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m16:39:37.066024 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m16:39:37.070781 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m16:39:37.071897 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m16:39:37.075517 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m16:39:37.076462 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:39:37.076933 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m16:39:37.077329 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:39:37.082541 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m16:39:37.083239 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:39:37.083844 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:39:37.590489 [debug] [Thread-1 (]: SQL status: OK in 0.506 seconds
[0m16:39:37.595140 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:39:37.595772 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m16:39:37.596896 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:39:37.602789 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:39:37.603330 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/python/usawfl-data-dbt/output/model-output-dev//fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:39:37.608498 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m16:39:37.610208 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:39:37.610731 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:39:37.611207 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:39:37.612263 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:39:37.615266 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:39:37.615949 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m16:39:37.616817 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:39:37.618676 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m16:39:37.619341 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'fb2094ab-668d-4074-81b2-71142154991b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b11b020>]}
[0m16:39:37.620051 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.55s]
[0m16:39:37.620756 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m16:39:37.621233 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m16:39:37.621772 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m16:39:37.622360 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m16:39:37.622817 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m16:39:37.632631 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m16:39:37.633625 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m16:39:37.638488 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m16:39:37.640038 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:39:37.640804 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m16:39:37.641506 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:39:37.643575 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:39:37.644097 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:39:37.644931 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:39:43.764139 [debug] [Thread-1 (]: SQL status: OK in 6.118 seconds
[0m16:39:43.768403 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:39:43.768853 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m16:39:43.769782 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:39:43.774882 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:39:43.775443 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/python/usawfl-data-dbt/output/model-output-dev//fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:39:43.982793 [debug] [Thread-1 (]: SQL status: OK in 0.207 seconds
[0m16:39:43.984384 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:39:43.984845 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:39:43.985264 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:39:43.994530 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m16:39:43.997439 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:39:43.997896 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m16:39:43.998733 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:39:44.000272 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m16:39:44.000916 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'fb2094ab-668d-4074-81b2-71142154991b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b133a70>]}
[0m16:39:44.001625 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.38s]
[0m16:39:44.002355 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m16:39:44.003105 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m16:39:44.003666 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m16:39:44.004371 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m16:39:44.004828 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m16:39:44.009877 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m16:39:44.011332 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m16:39:44.014957 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m16:39:44.015912 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:39:44.016441 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m16:39:44.017062 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:39:44.018696 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:39:44.019149 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:39:44.020188 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:39:45.263708 [debug] [Thread-1 (]: SQL status: OK in 1.242 seconds
[0m16:39:45.267487 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:39:45.267965 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m16:39:45.268834 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:39:45.274171 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:39:45.274663 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/python/usawfl-data-dbt/output/model-output-dev//fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:39:45.278819 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:39:45.280524 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:39:45.281159 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:39:45.281582 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:39:45.283601 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:39:45.286516 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:39:45.287025 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m16:39:45.287838 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:39:45.290652 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m16:39:45.291769 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'fb2094ab-668d-4074-81b2-71142154991b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b113470>]}
[0m16:39:45.292531 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 1.29s]
[0m16:39:45.293326 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m16:39:45.293844 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m16:39:45.294401 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m16:39:45.295086 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m16:39:45.295536 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m16:39:45.300273 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m16:39:45.301133 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m16:39:45.304432 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m16:39:45.305574 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:39:45.306071 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m16:39:45.306542 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:39:45.308300 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:39:45.308779 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:39:45.309317 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:39:45.824908 [debug] [Thread-1 (]: SQL status: OK in 0.515 seconds
[0m16:39:45.829381 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:39:45.830077 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m16:39:45.831157 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:39:45.840647 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:39:45.841449 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/python/usawfl-data-dbt/output/model-output-dev//fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:39:45.845821 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:39:45.848501 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:39:45.849150 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:39:45.849610 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:39:45.851631 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:39:45.855504 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:39:45.856124 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m16:39:45.857292 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:39:45.859772 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m16:39:45.861205 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'fb2094ab-668d-4074-81b2-71142154991b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b1659d0>]}
[0m16:39:45.862857 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.57s]
[0m16:39:45.864080 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m16:39:45.864972 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m16:39:45.865792 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m16:39:45.866728 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m16:39:45.867348 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m16:39:45.873834 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m16:39:45.874781 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m16:39:45.880190 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m16:39:45.881165 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:39:45.881810 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m16:39:45.882289 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:39:45.886670 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:39:45.887703 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:39:45.889283 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:39:47.733437 [debug] [Thread-1 (]: SQL status: OK in 1.843 seconds
[0m16:39:47.736737 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:39:47.737191 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m16:39:47.738006 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:39:47.742712 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:39:47.743300 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/python/usawfl-data-dbt/output/model-output-dev//fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:39:47.748096 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:39:47.749616 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:39:47.750059 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:39:47.750465 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:39:47.752854 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:39:47.755598 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:39:47.756262 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m16:39:47.757099 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:39:47.758702 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m16:39:47.759365 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'fb2094ab-668d-4074-81b2-71142154991b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b164530>]}
[0m16:39:47.760047 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.89s]
[0m16:39:47.760771 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m16:39:47.761236 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m16:39:47.761752 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m16:39:47.762322 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m16:39:47.762777 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m16:39:47.768344 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m16:39:47.769425 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m16:39:47.772847 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m16:39:47.773815 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:39:47.774266 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m16:39:47.774669 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:39:47.776421 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:39:47.776979 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:39:47.777991 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m16:39:50.201959 [debug] [Thread-1 (]: SQL status: OK in 2.423 seconds
[0m16:39:50.206248 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:39:50.207087 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m16:39:50.208347 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:39:50.215861 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:39:50.216671 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/python/usawfl-data-dbt/output/model-output-dev//fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:39:50.219388 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:39:50.221633 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:39:50.222270 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:39:50.222716 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:39:50.223620 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:39:50.226814 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:39:50.227612 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m16:39:50.228596 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:39:50.230268 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m16:39:50.230937 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'fb2094ab-668d-4074-81b2-71142154991b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b12ce00>]}
[0m16:39:50.231646 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 2.47s]
[0m16:39:50.232347 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m16:39:50.233732 [debug] [MainThread]: Using duckdb connection "master"
[0m16:39:50.234180 [debug] [MainThread]: On master: BEGIN
[0m16:39:50.234544 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:39:50.236350 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:39:50.236846 [debug] [MainThread]: On master: COMMIT
[0m16:39:50.237246 [debug] [MainThread]: Using duckdb connection "master"
[0m16:39:50.237599 [debug] [MainThread]: On master: COMMIT
[0m16:39:50.238600 [debug] [MainThread]: SQL status: OK in 0.001 seconds
[0m16:39:50.239240 [debug] [MainThread]: On master: Close
[0m16:39:50.239774 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:39:50.240146 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m16:39:50.240607 [info ] [MainThread]: 
[0m16:39:50.241037 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 13.56 seconds (13.56s).
[0m16:39:50.242867 [debug] [MainThread]: Command end result
[0m16:39:50.267828 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:39:50.269903 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:39:50.277107 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m16:39:50.277552 [info ] [MainThread]: 
[0m16:39:50.278081 [info ] [MainThread]: [32mCompleted successfully[0m
[0m16:39:50.278496 [info ] [MainThread]: 
[0m16:39:50.278939 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m16:39:50.281607 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 15.91814, "process_in_blocks": "0", "process_kernel_time": 0.87278, "process_mem_max_rss": "387457024", "process_out_blocks": "0", "process_user_time": 8.833773}
[0m16:39:50.282268 [debug] [MainThread]: Command `dbt run` succeeded at 16:39:50.282129 after 15.92 seconds
[0m16:39:50.282740 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109cdb470>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a4ea870>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a927e30>]}
[0m16:39:50.283181 [debug] [MainThread]: Flushing usage events
[0m16:39:50.843248 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:40:58.780387 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fe228a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1104fe960>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1104fe720>]}


============================== 16:40:58.786076 | b6d49ffa-e33a-40d8-8620-350889432d93 ==============================
[0m16:40:58.786076 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:40:58.786886 [debug] [MainThread]: running dbt with arguments {'write_json': 'True', 'partial_parse': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'empty': 'None', 'version_check': 'True', 'use_colors': 'True', 'printer_width': '80', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'no_print': 'None', 'introspect': 'True', 'quiet': 'False', 'use_experimental_parser': 'False', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'warn_error': 'None', 'log_format': 'default', 'invocation_command': 'dbt ls --resource-type model --output json', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'True', 'cache_selected_only': 'False', 'debug': 'False', 'fail_fast': 'False'}
[0m16:40:59.247102 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'b6d49ffa-e33a-40d8-8620-350889432d93', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11027b290>]}
[0m16:40:59.336025 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'b6d49ffa-e33a-40d8-8620-350889432d93', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10deae570>]}
[0m16:40:59.338216 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:40:59.490680 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:40:59.642193 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:40:59.642837 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:40:59.694113 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'b6d49ffa-e33a-40d8-8620-350889432d93', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1107b7650>]}
[0m16:40:59.788739 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:40:59.791450 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:40:59.809416 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'b6d49ffa-e33a-40d8-8620-350889432d93', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110ad0c80>]}
[0m16:40:59.810013 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:40:59.810437 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'b6d49ffa-e33a-40d8-8620-350889432d93', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11049bbc0>]}
[0m16:40:59.811692 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:40:59.812310 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:40:59.812868 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:40:59.813421 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:40:59.813966 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:40:59.814555 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:40:59.815233 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:40:59.818004 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.1349155, "process_in_blocks": "0", "process_kernel_time": 0.319538, "process_mem_max_rss": "121110528", "process_out_blocks": "0", "process_user_time": 2.471723}
[0m16:40:59.818675 [debug] [MainThread]: Command `dbt ls` succeeded at 16:40:59.818539 after 1.14 seconds
[0m16:40:59.819252 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1101b63f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11049bbc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110942ba0>]}
[0m16:40:59.819697 [debug] [MainThread]: Flushing usage events
[0m16:41:00.359002 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:41:18.521567 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b453620>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bdee9f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bdee780>]}


============================== 16:41:18.527406 | 5915a49b-6c22-49cd-bde4-3d2b741e7340 ==============================
[0m16:41:18.527406 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:41:18.528218 [debug] [MainThread]: running dbt with arguments {'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'use_colors': 'True', 'debug': 'False', 'introspect': 'True', 'log_format': 'default', 'cache_selected_only': 'False', 'write_json': 'True', 'static_parser': 'True', 'quiet': 'False', 'warn_error': 'None', 'use_experimental_parser': 'False', 'invocation_command': 'dbt run --target prod', 'printer_width': '80', 'target_path': 'None', 'log_path': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl/logs', 'empty': 'False', 'partial_parse': 'True', 'log_cache_events': 'False', 'fail_fast': 'False', 'send_anonymous_usage_stats': 'True', 'no_print': 'None', 'indirect_selection': 'eager', 'version_check': 'True', 'profiles_dir': '/Users/vongly/dev/python/usawfl-data-dbt/usawfl'}
[0m16:41:18.878354 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '5915a49b-6c22-49cd-bde4-3d2b741e7340', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1096e8cb0>]}
[0m16:41:18.957167 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '5915a49b-6c22-49cd-bde4-3d2b741e7340', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bf142c0>]}
[0m16:41:18.959235 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:41:19.098597 [debug] [MainThread]: checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, vars: {}, profile: , target: prod, version: 1.10.9
[0m16:41:19.195828 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m16:41:19.196481 [debug] [MainThread]: previous checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, current checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23
[0m16:41:19.196911 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '5915a49b-6c22-49cd-bde4-3d2b741e7340', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2d9760>]}
[0m16:41:20.660510 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '5915a49b-6c22-49cd-bde4-3d2b741e7340', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c51c5f0>]}
[0m16:41:20.741558 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:41:20.743818 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:41:20.760425 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '5915a49b-6c22-49cd-bde4-3d2b741e7340', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c5a6960>]}
[0m16:41:20.760995 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:41:20.761437 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '5915a49b-6c22-49cd-bde4-3d2b741e7340', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c501c70>]}
[0m16:41:20.763702 [info ] [MainThread]: 
[0m16:41:20.764205 [info ] [MainThread]: Concurrency: 1 threads (target='prod')
[0m16:41:20.764598 [info ] [MainThread]: 
[0m16:41:20.765169 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:41:20.771900 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m16:41:20.833038 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:41:20.833514 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:41:20.833933 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:41:20.876293 [debug] [ThreadPool]: SQL status: OK in 0.042 seconds
[0m16:41:20.877879 [debug] [ThreadPool]: On list_memory: Close
[0m16:41:20.880310 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:41:20.880765 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:41:20.881151 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:41:20.883216 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:41:20.884617 [debug] [ThreadPool]: On list_memory: Close
[0m16:41:20.885354 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_salesforce)
[0m16:41:20.885893 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m16:41:20.892757 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:41:20.893194 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:41:20.893543 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:41:20.895607 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:41:20.897121 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:41:20.897497 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m16:41:20.898070 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:41:20.898423 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:41:20.898772 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m16:41:20.899407 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:41:20.900372 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:41:20.900754 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:41:20.901101 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:41:20.901688 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:41:20.902062 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m16:41:20.902710 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now create_memory_references)
[0m16:41:20.903209 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "references"
"
[0m16:41:20.905379 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:41:20.905901 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:41:20.906282 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:41:20.908189 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:41:20.909812 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:41:20.910189 [debug] [ThreadPool]: On create_memory_references: BEGIN
[0m16:41:20.910758 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:41:20.911115 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:41:20.911463 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_references"} */

    
    
        create schema if not exists memory."references"
    
[0m16:41:20.912069 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:41:20.913042 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:41:20.913416 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:41:20.913750 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:41:20.914318 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:41:20.914689 [debug] [ThreadPool]: On create_memory_references: Close
[0m16:41:20.916249 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_references, now list_memory_fct_salesforce)
[0m16:41:20.922314 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:41:20.922719 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m16:41:20.923071 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:41:20.924689 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:41:20.925080 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:41:20.925449 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m16:41:20.941602 [debug] [ThreadPool]: SQL status: OK in 0.016 seconds
[0m16:41:20.943092 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m16:41:20.944473 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m16:41:20.944859 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m16:41:20.945462 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now list_memory_references)
[0m16:41:20.947507 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:41:20.947878 [debug] [ThreadPool]: On list_memory_references: BEGIN
[0m16:41:20.948218 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:41:20.949861 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:41:20.950234 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:41:20.950597 [debug] [ThreadPool]: On list_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'references'
    and lower(table_catalog) = 'memory'
  
[0m16:41:20.954426 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:41:20.955851 [debug] [ThreadPool]: On list_memory_references: ROLLBACK
[0m16:41:20.956853 [debug] [ThreadPool]: Failed to rollback 'list_memory_references'
[0m16:41:20.957202 [debug] [ThreadPool]: On list_memory_references: Close
[0m16:41:20.957828 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '5915a49b-6c22-49cd-bde4-3d2b741e7340', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c26bce0>]}
[0m16:41:20.958360 [debug] [MainThread]: Using duckdb connection "master"
[0m16:41:20.958723 [debug] [MainThread]: On master: BEGIN
[0m16:41:20.959063 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:41:20.960614 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:41:20.961004 [debug] [MainThread]: On master: COMMIT
[0m16:41:20.961365 [debug] [MainThread]: Using duckdb connection "master"
[0m16:41:20.961707 [debug] [MainThread]: On master: COMMIT
[0m16:41:20.962259 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:41:20.962629 [debug] [MainThread]: On master: Close
[0m16:41:20.964708 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m16:41:20.965310 [info ] [Thread-1 (]: 1 of 7 START sql table model references.states ................................. [RUN]
[0m16:41:20.965833 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_references, now model.usawfl.states)
[0m16:41:20.966269 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m16:41:20.975325 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m16:41:20.976155 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m16:41:21.015261 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m16:41:21.016257 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:41:21.016718 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m16:41:21.017143 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:41:21.018964 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:41:21.019415 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:41:21.019972 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m16:41:21.057116 [debug] [Thread-1 (]: SQL status: OK in 0.036 seconds
[0m16:41:21.064006 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:41:21.064498 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */
alter table memory."references"."states__dbt_tmp" rename to "states"
[0m16:41:21.065353 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:41:21.073530 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:41:21.074013 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/Users/vongly/dev/python/usawfl-data-dbt/output/model-output-prod//references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:41:21.075719 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:41:21.087136 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:41:21.087647 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:41:21.088065 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:41:21.089161 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:41:21.095381 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:41:21.095874 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

      drop table if exists memory."references"."states__dbt_backup" cascade
    
[0m16:41:21.096692 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:41:21.099362 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m16:41:21.101177 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5915a49b-6c22-49cd-bde4-3d2b741e7340', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1096cbd70>]}
[0m16:41:21.101906 [info ] [Thread-1 (]: 1 of 7 OK created sql table model references.states ............................ [[32mOK[0m in 0.13s]
[0m16:41:21.102614 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m16:41:21.103082 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m16:41:21.103616 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m16:41:21.104239 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m16:41:21.104687 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m16:41:21.108841 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m16:41:21.110094 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m16:41:21.113537 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m16:41:21.114400 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:41:21.114844 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m16:41:21.115252 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:41:21.117348 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:41:21.117829 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:41:21.118366 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:41:21.612824 [debug] [Thread-1 (]: SQL status: OK in 0.494 seconds
[0m16:41:21.616505 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:41:21.617017 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m16:41:21.617887 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:41:21.622984 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:41:21.623608 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/python/usawfl-data-dbt/output/model-output-prod//fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:41:21.625743 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:41:21.627240 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:41:21.627736 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:41:21.628186 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:41:21.629169 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:41:21.631954 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:41:21.632407 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m16:41:21.633224 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:41:21.634777 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m16:41:21.635498 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5915a49b-6c22-49cd-bde4-3d2b741e7340', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c962b40>]}
[0m16:41:21.636244 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.53s]
[0m16:41:21.637015 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m16:41:21.637500 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m16:41:21.638044 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m16:41:21.638571 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m16:41:21.639000 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m16:41:21.647367 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m16:41:21.648374 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m16:41:21.654938 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m16:41:21.656061 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:41:21.656683 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m16:41:21.657419 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:41:21.659435 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:41:21.660124 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:41:21.660849 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:41:28.028081 [debug] [Thread-1 (]: SQL status: OK in 6.366 seconds
[0m16:41:28.032601 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:41:28.033405 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m16:41:28.034616 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:41:28.039878 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:41:28.040383 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/python/usawfl-data-dbt/output/model-output-prod//fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:41:28.269940 [debug] [Thread-1 (]: SQL status: OK in 0.229 seconds
[0m16:41:28.271506 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:41:28.272020 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:41:28.272528 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:41:28.282939 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m16:41:28.286589 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:41:28.287091 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m16:41:28.287890 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:41:28.289545 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m16:41:28.290300 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5915a49b-6c22-49cd-bde4-3d2b741e7340', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca31a90>]}
[0m16:41:28.291364 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.65s]
[0m16:41:28.292417 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m16:41:28.293294 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m16:41:28.293964 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m16:41:28.294830 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m16:41:28.295455 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m16:41:28.302668 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m16:41:28.303501 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m16:41:28.306915 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m16:41:28.308195 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:41:28.308726 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m16:41:28.309371 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:41:28.311498 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:41:28.312100 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:41:28.313085 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:41:29.204453 [debug] [Thread-1 (]: SQL status: OK in 0.890 seconds
[0m16:41:29.208328 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:41:29.208880 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m16:41:29.209724 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:41:29.215149 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:41:29.215786 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/python/usawfl-data-dbt/output/model-output-prod//fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:41:29.218952 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:41:29.220430 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:41:29.220959 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:41:29.221392 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:41:29.223776 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:41:29.226585 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:41:29.227063 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m16:41:29.227936 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:41:29.229871 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m16:41:29.230580 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5915a49b-6c22-49cd-bde4-3d2b741e7340', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c9c92b0>]}
[0m16:41:29.231393 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 0.94s]
[0m16:41:29.232316 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m16:41:29.232792 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m16:41:29.233449 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m16:41:29.234001 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m16:41:29.234423 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m16:41:29.267605 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m16:41:29.290082 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m16:41:29.306128 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m16:41:29.307303 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:41:29.307789 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m16:41:29.308191 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:41:29.310080 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:41:29.310734 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:41:29.311286 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:41:29.765342 [debug] [Thread-1 (]: SQL status: OK in 0.453 seconds
[0m16:41:29.769119 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:41:29.769658 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m16:41:29.770616 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:41:29.777229 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:41:29.777835 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/python/usawfl-data-dbt/output/model-output-prod//fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:41:29.780692 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:41:29.782186 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:41:29.782645 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:41:29.783056 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:41:29.784326 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:41:29.788866 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:41:29.789738 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m16:41:29.791176 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:41:29.794681 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m16:41:29.796187 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5915a49b-6c22-49cd-bde4-3d2b741e7340', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca5e300>]}
[0m16:41:29.797422 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.56s]
[0m16:41:29.798364 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m16:41:29.799300 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m16:41:29.800097 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m16:41:29.801148 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m16:41:29.801668 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m16:41:29.806865 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m16:41:29.807835 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m16:41:29.813450 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m16:41:29.815010 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:41:29.816005 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m16:41:29.816578 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:41:29.818460 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:41:29.818941 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:41:29.819526 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:41:31.865367 [debug] [Thread-1 (]: SQL status: OK in 2.045 seconds
[0m16:41:31.870291 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:41:31.870814 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m16:41:31.871802 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:41:31.877306 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:41:31.877874 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/python/usawfl-data-dbt/output/model-output-prod//fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:41:31.882464 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:41:31.883970 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:41:31.884413 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:41:31.884812 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:41:31.887282 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:41:31.890088 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:41:31.890562 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m16:41:31.891480 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:41:31.893064 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m16:41:31.893715 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5915a49b-6c22-49cd-bde4-3d2b741e7340', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c903d10>]}
[0m16:41:31.894417 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 2.09s]
[0m16:41:31.895084 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m16:41:31.895539 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m16:41:31.896050 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m16:41:31.896619 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m16:41:31.897052 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m16:41:31.902864 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m16:41:31.903848 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m16:41:31.907312 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m16:41:31.908388 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:41:31.908838 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m16:41:31.909243 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:41:31.913781 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:41:31.914343 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:41:31.915232 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m16:41:33.660372 [debug] [Thread-1 (]: SQL status: OK in 1.744 seconds
[0m16:41:33.664300 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:41:33.664923 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m16:41:33.665953 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:41:33.671246 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:41:33.671752 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/python/usawfl-data-dbt/output/model-output-prod//fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:41:33.674220 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:41:33.675758 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:41:33.676206 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:41:33.676635 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:41:33.677398 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:41:33.680156 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:41:33.680709 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m16:41:33.681599 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:41:33.683219 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m16:41:33.683844 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5915a49b-6c22-49cd-bde4-3d2b741e7340', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c91ad20>]}
[0m16:41:33.684585 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.79s]
[0m16:41:33.685263 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m16:41:33.686610 [debug] [MainThread]: Using duckdb connection "master"
[0m16:41:33.687043 [debug] [MainThread]: On master: BEGIN
[0m16:41:33.687394 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:41:33.689010 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:41:33.689523 [debug] [MainThread]: On master: COMMIT
[0m16:41:33.690052 [debug] [MainThread]: Using duckdb connection "master"
[0m16:41:33.690415 [debug] [MainThread]: On master: COMMIT
[0m16:41:33.691146 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:41:33.691945 [debug] [MainThread]: On master: Close
[0m16:41:33.692473 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:41:33.692814 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m16:41:33.693260 [info ] [MainThread]: 
[0m16:41:33.693660 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.93 seconds (12.93s).
[0m16:41:33.695653 [debug] [MainThread]: Command end result
[0m16:41:33.723569 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:41:33.727251 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:41:33.734794 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/python/usawfl-data-dbt/usawfl/target/run_results.json
[0m16:41:33.735218 [info ] [MainThread]: 
[0m16:41:33.735783 [info ] [MainThread]: [32mCompleted successfully[0m
[0m16:41:33.736363 [info ] [MainThread]: 
[0m16:41:33.736826 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m16:41:33.739715 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 15.312723, "process_in_blocks": "0", "process_kernel_time": 0.902016, "process_mem_max_rss": "386416640", "process_out_blocks": "0", "process_user_time": 6.518153}
[0m16:41:33.740436 [debug] [MainThread]: Command `dbt run` succeeded at 16:41:33.740304 after 15.31 seconds
[0m16:41:33.740915 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b944ec0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bdee9f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bdee900>]}
[0m16:41:33.741396 [debug] [MainThread]: Flushing usage events
[0m16:41:34.353062 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:58:45.763518 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110a53aa0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111342c60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111342810>]}


============================== 16:58:45.772076 | 2cf8dc2d-4033-4077-bdf8-54673bca5a5b ==============================
[0m16:58:45.772076 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:58:45.773017 [debug] [MainThread]: running dbt with arguments {'invocation_command': 'dbt run', 'empty': 'False', 'use_experimental_parser': 'False', 'warn_error': 'None', 'version_check': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/usawfl', 'indirect_selection': 'eager', 'fail_fast': 'False', 'static_parser': 'True', 'write_json': 'True', 'partial_parse': 'True', 'quiet': 'False', 'log_format': 'default', 'cache_selected_only': 'False', 'printer_width': '80', 'debug': 'False', 'send_anonymous_usage_stats': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'introspect': 'True', 'log_cache_events': 'False', 'target_path': 'None', 'use_colors': 'True', 'no_print': 'None', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/usawfl/logs'}
[0m16:58:45.785332 [error] [MainThread]: Encountered an error:
Parsing Error
  Env var required but not provided: 'S3_ACCES_KEY'
[0m16:58:45.790161 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": false, "command_wall_clock_time": 0.12891579, "process_in_blocks": "0", "process_kernel_time": 0.490451, "process_mem_max_rss": "97267712", "process_out_blocks": "0", "process_user_time": 2.243354}
[0m16:58:45.791061 [debug] [MainThread]: Command `dbt run` failed at 16:58:45.790878 after 0.13 seconds
[0m16:58:45.792639 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111342930>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1101bb470>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1110c3320>]}
[0m16:58:45.793465 [debug] [MainThread]: Flushing usage events
[0m16:58:46.264265 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:59:02.230720 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107572e10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107c4eab0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107c4e630>]}


============================== 16:59:02.235971 | 06ad4143-935f-4158-87e4-6e1ef32fd6cf ==============================
[0m16:59:02.235971 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:59:02.236693 [debug] [MainThread]: running dbt with arguments {'no_print': 'None', 'indirect_selection': 'eager', 'target_path': 'None', 'version_check': 'True', 'partial_parse': 'True', 'empty': 'False', 'invocation_command': 'dbt run', 'send_anonymous_usage_stats': 'True', 'log_cache_events': 'False', 'static_parser': 'True', 'debug': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/usawfl', 'quiet': 'False', 'use_colors': 'True', 'warn_error': 'None', 'fail_fast': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/usawfl/logs', 'printer_width': '80', 'cache_selected_only': 'False', 'write_json': 'True', 'introspect': 'True', 'log_format': 'default', 'use_experimental_parser': 'False'}
[0m16:59:02.845371 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '06ad4143-935f-4158-87e4-6e1ef32fd6cf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1075cc890>]}
[0m16:59:02.925116 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '06ad4143-935f-4158-87e4-6e1ef32fd6cf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ccbda0>]}
[0m16:59:02.930063 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:59:03.115343 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:59:03.221171 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m16:59:03.221744 [debug] [MainThread]: previous checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, current checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e
[0m16:59:03.222189 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '06ad4143-935f-4158-87e4-6e1ef32fd6cf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1075cd070>]}
[0m16:59:04.765412 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '06ad4143-935f-4158-87e4-6e1ef32fd6cf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10838bf20>]}
[0m16:59:04.843939 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:59:04.848481 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:59:04.894253 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '06ad4143-935f-4158-87e4-6e1ef32fd6cf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1083957f0>]}
[0m16:59:04.894983 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:59:04.895492 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '06ad4143-935f-4158-87e4-6e1ef32fd6cf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108264e60>]}
[0m16:59:04.898073 [info ] [MainThread]: 
[0m16:59:04.898582 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m16:59:04.899036 [info ] [MainThread]: 
[0m16:59:04.899710 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:59:04.906863 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m16:59:04.984483 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:59:04.984991 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:59:04.985385 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:59:05.067787 [debug] [ThreadPool]: SQL status: OK in 0.082 seconds
[0m16:59:05.069757 [debug] [ThreadPool]: On list_memory: Close
[0m16:59:05.072696 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:59:05.073260 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:59:05.073727 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:59:05.076183 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:59:05.077845 [debug] [ThreadPool]: On list_memory: Close
[0m16:59:05.078642 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_salesforce)
[0m16:59:05.079218 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m16:59:05.086620 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:59:05.087099 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:59:05.087536 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:59:05.090746 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:59:05.092644 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:59:05.093078 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m16:59:05.093794 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:59:05.094193 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:59:05.094578 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m16:59:05.096196 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m16:59:05.097535 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:59:05.098027 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:59:05.098446 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:59:05.099148 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:59:05.099557 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m16:59:05.100298 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now create_memory_references)
[0m16:59:05.100866 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "references"
"
[0m16:59:05.103121 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:59:05.103535 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:59:05.103920 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:59:05.106030 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:59:05.107755 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:59:05.108158 [debug] [ThreadPool]: On create_memory_references: BEGIN
[0m16:59:05.108773 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:59:05.109159 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:59:05.109539 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
    
        create schema if not exists memory."references"
    
[0m16:59:05.110176 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:59:05.111175 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:59:05.111574 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m16:59:05.111945 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m16:59:05.112529 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:59:05.112949 [debug] [ThreadPool]: On create_memory_references: Close
[0m16:59:05.114594 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_references, now list_memory_fct_salesforce)
[0m16:59:05.120610 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:59:05.121141 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m16:59:05.121510 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:59:05.123262 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:59:05.123721 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:59:05.124103 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m16:59:05.144500 [debug] [ThreadPool]: SQL status: OK in 0.020 seconds
[0m16:59:05.146105 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m16:59:05.148822 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m16:59:05.149344 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m16:59:05.150034 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now list_memory_references)
[0m16:59:05.152261 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:59:05.152669 [debug] [ThreadPool]: On list_memory_references: BEGIN
[0m16:59:05.153039 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:59:05.154765 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:59:05.155150 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m16:59:05.155523 [debug] [ThreadPool]: On list_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'references'
    and lower(table_catalog) = 'memory'
  
[0m16:59:05.159359 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:59:05.160867 [debug] [ThreadPool]: On list_memory_references: ROLLBACK
[0m16:59:05.161907 [debug] [ThreadPool]: Failed to rollback 'list_memory_references'
[0m16:59:05.162270 [debug] [ThreadPool]: On list_memory_references: Close
[0m16:59:05.162943 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '06ad4143-935f-4158-87e4-6e1ef32fd6cf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1083c2fc0>]}
[0m16:59:05.163491 [debug] [MainThread]: Using duckdb connection "master"
[0m16:59:05.163860 [debug] [MainThread]: On master: BEGIN
[0m16:59:05.164211 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:59:05.165888 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:59:05.166310 [debug] [MainThread]: On master: COMMIT
[0m16:59:05.166689 [debug] [MainThread]: Using duckdb connection "master"
[0m16:59:05.167048 [debug] [MainThread]: On master: COMMIT
[0m16:59:05.167642 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:59:05.168039 [debug] [MainThread]: On master: Close
[0m16:59:05.173489 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m16:59:05.174257 [info ] [Thread-1 (]: 1 of 7 START sql table model references.states ................................. [RUN]
[0m16:59:05.174865 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_references, now model.usawfl.states)
[0m16:59:05.175326 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m16:59:05.185920 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m16:59:05.186799 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m16:59:05.225739 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m16:59:05.227478 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:59:05.228109 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m16:59:05.228573 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:59:05.230338 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:59:05.230800 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:59:05.231395 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m16:59:05.276740 [debug] [Thread-1 (]: SQL status: OK in 0.045 seconds
[0m16:59:05.283772 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:59:05.284372 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."references"."states__dbt_tmp" rename to "states"
[0m16:59:05.285733 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:59:05.294609 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:59:05.295418 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/output/model-output-dev//references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:59:05.303008 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m16:59:05.315622 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:59:05.316255 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:59:05.316705 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:59:05.317816 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:59:05.323843 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:59:05.324350 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop table if exists memory."references"."states__dbt_backup" cascade
    
[0m16:59:05.325245 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:59:05.328250 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m16:59:05.330728 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06ad4143-935f-4158-87e4-6e1ef32fd6cf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105538290>]}
[0m16:59:05.331592 [info ] [Thread-1 (]: 1 of 7 OK created sql table model references.states ............................ [[32mOK[0m in 0.15s]
[0m16:59:05.332450 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m16:59:05.332962 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m16:59:05.333540 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m16:59:05.334352 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m16:59:05.334831 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m16:59:05.340269 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m16:59:05.341955 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m16:59:05.346065 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m16:59:05.419034 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:59:05.419534 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m16:59:05.419962 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:59:05.440120 [debug] [Thread-1 (]: SQL status: OK in 0.020 seconds
[0m16:59:05.440715 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:59:05.441280 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:59:05.946711 [debug] [Thread-1 (]: SQL status: OK in 0.505 seconds
[0m16:59:05.951428 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:59:05.952093 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m16:59:05.953234 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:59:05.959469 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:59:05.960047 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/output/model-output-dev//fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:59:05.964723 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:59:05.966904 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:59:05.967555 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:59:05.968152 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:59:05.969531 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:59:05.972880 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:59:05.973509 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m16:59:05.974569 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:59:05.976747 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m16:59:05.977594 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06ad4143-935f-4158-87e4-6e1ef32fd6cf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1083db470>]}
[0m16:59:05.978491 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.64s]
[0m16:59:05.979322 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m16:59:05.979863 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m16:59:05.980498 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m16:59:05.981256 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m16:59:05.981751 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m16:59:05.992189 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m16:59:05.993800 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m16:59:05.997273 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m16:59:05.998270 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:59:05.998737 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m16:59:05.999175 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:59:06.000913 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:59:06.001386 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:59:06.002109 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:59:11.897825 [debug] [Thread-1 (]: SQL status: OK in 5.895 seconds
[0m16:59:11.901254 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:59:11.901734 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m16:59:11.902665 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:59:11.907573 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:59:11.908073 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/output/model-output-dev//fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:59:12.113327 [debug] [Thread-1 (]: SQL status: OK in 0.205 seconds
[0m16:59:12.114802 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:59:12.115265 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:59:12.115688 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:59:12.122423 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m16:59:12.125314 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:59:12.125783 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m16:59:12.126582 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:59:12.128139 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m16:59:12.128807 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06ad4143-935f-4158-87e4-6e1ef32fd6cf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1088981d0>]}
[0m16:59:12.129551 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.15s]
[0m16:59:12.130245 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m16:59:12.131072 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m16:59:12.131623 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m16:59:12.132155 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m16:59:12.132593 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m16:59:12.137755 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m16:59:12.138940 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m16:59:12.142492 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m16:59:12.143720 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:59:12.144252 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m16:59:12.144833 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:59:12.146389 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:59:12.146824 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:59:12.147429 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:59:13.045178 [debug] [Thread-1 (]: SQL status: OK in 0.897 seconds
[0m16:59:13.048429 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:59:13.048897 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m16:59:13.049777 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:59:13.054977 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:59:13.055519 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/output/model-output-dev//fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:59:13.059909 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:59:13.061456 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:59:13.061936 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:59:13.062373 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:59:13.064447 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:59:13.067189 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:59:13.067779 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m16:59:13.068766 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:59:13.070610 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m16:59:13.071284 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06ad4143-935f-4158-87e4-6e1ef32fd6cf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108893b00>]}
[0m16:59:13.071991 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 0.94s]
[0m16:59:13.072685 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m16:59:13.073159 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m16:59:13.073690 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m16:59:13.074349 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m16:59:13.074923 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m16:59:13.078495 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m16:59:13.079509 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m16:59:13.082904 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m16:59:13.083764 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:59:13.084205 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m16:59:13.084673 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:59:13.086766 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:59:13.087372 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:59:13.087901 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:59:13.559359 [debug] [Thread-1 (]: SQL status: OK in 0.471 seconds
[0m16:59:13.563327 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:59:13.563813 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m16:59:13.564697 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:59:13.571973 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:59:13.572536 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/output/model-output-dev//fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:59:13.576883 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:59:13.578558 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:59:13.579031 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:59:13.579479 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:59:13.580910 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:59:13.583989 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:59:13.584807 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m16:59:13.586193 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:59:13.588512 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m16:59:13.589345 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06ad4143-935f-4158-87e4-6e1ef32fd6cf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1088d2090>]}
[0m16:59:13.590463 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.51s]
[0m16:59:13.591526 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m16:59:13.592472 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m16:59:13.593229 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m16:59:13.593927 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m16:59:13.594434 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m16:59:13.598979 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m16:59:13.600337 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m16:59:13.604711 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m16:59:13.605735 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:59:13.606259 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m16:59:13.606686 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:59:13.608589 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:59:13.609134 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:59:13.609707 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:59:15.475638 [debug] [Thread-1 (]: SQL status: OK in 1.865 seconds
[0m16:59:15.479392 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:59:15.479921 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m16:59:15.480835 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:59:15.486526 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:59:15.487114 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/output/model-output-dev//fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:59:15.495853 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m16:59:15.497490 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:59:15.498169 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:59:15.498608 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:59:15.501450 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:59:15.504399 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:59:15.504977 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m16:59:15.505797 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:59:15.507427 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m16:59:15.508093 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06ad4143-935f-4158-87e4-6e1ef32fd6cf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1088d1910>]}
[0m16:59:15.508951 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.91s]
[0m16:59:15.509896 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m16:59:15.510474 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m16:59:15.511129 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m16:59:15.511773 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m16:59:15.512262 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m16:59:15.520727 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m16:59:15.522529 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m16:59:15.528723 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m16:59:15.530321 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:59:15.530792 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m16:59:15.531220 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:59:15.533960 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:59:15.534509 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:59:15.535397 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m16:59:17.335744 [debug] [Thread-1 (]: SQL status: OK in 1.799 seconds
[0m16:59:17.340877 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:59:17.341661 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m16:59:17.343032 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:59:17.349710 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:59:17.350377 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/output/model-output-dev//fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:59:17.355372 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:59:17.356966 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:59:17.357523 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:59:17.357988 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:59:17.358841 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:59:17.362438 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:59:17.363090 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m16:59:17.364404 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:59:17.366056 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m16:59:17.366734 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '06ad4143-935f-4158-87e4-6e1ef32fd6cf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1087b22d0>]}
[0m16:59:17.367560 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.85s]
[0m16:59:17.368319 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m16:59:17.370130 [debug] [MainThread]: Using duckdb connection "master"
[0m16:59:17.370672 [debug] [MainThread]: On master: BEGIN
[0m16:59:17.371193 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:59:17.373461 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:59:17.375313 [debug] [MainThread]: On master: COMMIT
[0m16:59:17.376022 [debug] [MainThread]: Using duckdb connection "master"
[0m16:59:17.376598 [debug] [MainThread]: On master: COMMIT
[0m16:59:17.377622 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:59:17.378323 [debug] [MainThread]: On master: Close
[0m16:59:17.379217 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:59:17.380055 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m16:59:17.381647 [info ] [MainThread]: 
[0m16:59:17.382114 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.48 seconds (12.48s).
[0m16:59:17.384336 [debug] [MainThread]: Command end result
[0m16:59:17.419648 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/usawfl/target/manifest.json
[0m16:59:17.421893 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/usawfl/target/semantic_manifest.json
[0m16:59:17.432896 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/usawfl-data-dbt/usawfl/target/run_results.json
[0m16:59:17.433437 [info ] [MainThread]: 
[0m16:59:17.433915 [info ] [MainThread]: [32mCompleted successfully[0m
[0m16:59:17.434615 [info ] [MainThread]: 
[0m16:59:17.435262 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m16:59:17.438960 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 15.295975, "process_in_blocks": "0", "process_kernel_time": 0.944429, "process_mem_max_rss": "393486336", "process_out_blocks": "0", "process_user_time": 8.139484}
[0m16:59:17.440721 [debug] [MainThread]: Command `dbt run` succeeded at 16:59:17.440489 after 15.30 seconds
[0m16:59:17.441639 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1071532c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10730ed20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1082982f0>]}
[0m16:59:17.442733 [debug] [MainThread]: Flushing usage events
[0m16:59:17.907182 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:36:12.725145 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ad16e40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b9ee990>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b9ee5d0>]}


============================== 11:36:12.733331 | 11a08a9b-2573-4079-a3d7-b6694dab2cd3 ==============================
[0m11:36:12.733331 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:36:12.734321 [debug] [MainThread]: running dbt with arguments {'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'send_anonymous_usage_stats': 'True', 'partial_parse': 'True', 'empty': 'False', 'quiet': 'False', 'log_format': 'default', 'warn_error': 'None', 'invocation_command': 'dbt run', 'use_experimental_parser': 'False', 'no_print': 'None', 'cache_selected_only': 'False', 'indirect_selection': 'eager', 'write_json': 'True', 'introspect': 'True', 'fail_fast': 'False', 'log_cache_events': 'False', 'printer_width': '80', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'version_check': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'static_parser': 'True', 'use_colors': 'True', 'target_path': 'None', 'debug': 'False'}
[0m11:36:13.790161 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '11a08a9b-2573-4079-a3d7-b6694dab2cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b33b2f0>]}
[0m11:36:13.880040 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '11a08a9b-2573-4079-a3d7-b6694dab2cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b85c200>]}
[0m11:36:13.883461 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:36:14.067073 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:36:14.239739 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 7 files changed.
[0m11:36:14.240502 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/references/states.sql
[0m11:36:14.241025 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/tournaments.sql
[0m11:36:14.241518 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/stats.sql
[0m11:36:14.242004 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/officials.sql
[0m11:36:14.242494 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/contacts.sql
[0m11:36:14.242986 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/teams.sql
[0m11:36:14.243476 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/members.sql
[0m11:36:14.624679 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '11a08a9b-2573-4079-a3d7-b6694dab2cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c0f3ec0>]}
[0m11:36:14.704625 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:36:14.708496 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:36:14.745711 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '11a08a9b-2573-4079-a3d7-b6694dab2cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b31b2f0>]}
[0m11:36:14.746393 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:36:14.746892 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '11a08a9b-2573-4079-a3d7-b6694dab2cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c11ec00>]}
[0m11:36:14.749526 [info ] [MainThread]: 
[0m11:36:14.750033 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m11:36:14.750471 [info ] [MainThread]: 
[0m11:36:14.751156 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m11:36:14.758196 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m11:36:14.829086 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m11:36:14.829599 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m11:36:14.829997 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m11:36:14.898278 [debug] [ThreadPool]: SQL status: OK in 0.068 seconds
[0m11:36:14.899972 [debug] [ThreadPool]: On list_memory: Close
[0m11:36:14.902455 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m11:36:14.902922 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m11:36:14.903319 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m11:36:14.905533 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m11:36:14.906956 [debug] [ThreadPool]: On list_memory: Close
[0m11:36:14.907730 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_references)
[0m11:36:14.908288 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "references"
"
[0m11:36:14.915127 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m11:36:14.915568 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m11:36:14.915928 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m11:36:14.917904 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m11:36:14.919393 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m11:36:14.919769 [debug] [ThreadPool]: On create_memory_references: BEGIN
[0m11:36:14.920389 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m11:36:14.920757 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m11:36:14.921114 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
    
        create schema if not exists memory."references"
    
[0m11:36:14.921771 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m11:36:14.922746 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m11:36:14.923128 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m11:36:14.923479 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m11:36:14.924042 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m11:36:14.924417 [debug] [ThreadPool]: On create_memory_references: Close
[0m11:36:14.925065 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_references, now create_memory_fct_salesforce)
[0m11:36:14.925568 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m11:36:14.927598 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m11:36:14.927975 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m11:36:14.928334 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m11:36:14.930236 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m11:36:14.931663 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m11:36:14.932034 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m11:36:14.932588 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m11:36:14.932940 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m11:36:14.933291 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m11:36:14.933874 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m11:36:14.934821 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m11:36:14.935190 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m11:36:14.935532 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m11:36:14.936095 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m11:36:14.936465 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m11:36:14.938014 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_references)
[0m11:36:14.943749 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m11:36:14.944253 [debug] [ThreadPool]: On list_memory_references: BEGIN
[0m11:36:14.944601 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m11:36:14.946205 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m11:36:14.946569 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m11:36:14.946938 [debug] [ThreadPool]: On list_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'references'
    and lower(table_catalog) = 'memory'
  
[0m11:36:14.964002 [debug] [ThreadPool]: SQL status: OK in 0.017 seconds
[0m11:36:14.965718 [debug] [ThreadPool]: On list_memory_references: ROLLBACK
[0m11:36:14.969336 [debug] [ThreadPool]: Failed to rollback 'list_memory_references'
[0m11:36:14.969827 [debug] [ThreadPool]: On list_memory_references: Close
[0m11:36:14.970490 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_references, now list_memory_fct_salesforce)
[0m11:36:14.972607 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m11:36:14.973000 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m11:36:14.973352 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m11:36:14.974974 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m11:36:14.975368 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m11:36:14.975757 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m11:36:14.979685 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m11:36:14.981147 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m11:36:14.982205 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m11:36:14.982574 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m11:36:14.983241 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '11a08a9b-2573-4079-a3d7-b6694dab2cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10938ea50>]}
[0m11:36:14.983805 [debug] [MainThread]: Using duckdb connection "master"
[0m11:36:14.984167 [debug] [MainThread]: On master: BEGIN
[0m11:36:14.984597 [debug] [MainThread]: Opening a new connection, currently in state init
[0m11:36:14.986159 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m11:36:14.986539 [debug] [MainThread]: On master: COMMIT
[0m11:36:14.986902 [debug] [MainThread]: Using duckdb connection "master"
[0m11:36:14.987248 [debug] [MainThread]: On master: COMMIT
[0m11:36:14.987792 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m11:36:14.988162 [debug] [MainThread]: On master: Close
[0m11:36:14.992889 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m11:36:14.993588 [info ] [Thread-1 (]: 1 of 7 START sql table model references.states ................................. [RUN]
[0m11:36:14.994166 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m11:36:14.994624 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m11:36:15.002716 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m11:36:15.003736 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m11:36:15.050349 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m11:36:15.051298 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m11:36:15.051743 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m11:36:15.052230 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m11:36:15.053957 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m11:36:15.054416 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m11:36:15.054990 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m11:36:15.085442 [debug] [Thread-1 (]: SQL status: OK in 0.030 seconds
[0m11:36:15.157521 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m11:36:15.158187 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."references"."states__dbt_tmp" rename to "states"
[0m11:36:15.159255 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:36:15.170156 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m11:36:15.170799 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m11:36:15.174901 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m11:36:15.187615 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m11:36:15.188190 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m11:36:15.188648 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m11:36:15.189809 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m11:36:15.196323 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m11:36:15.196860 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop table if exists memory."references"."states__dbt_backup" cascade
    
[0m11:36:15.197680 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:36:15.200364 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m11:36:15.202689 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '11a08a9b-2573-4079-a3d7-b6694dab2cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1092bbef0>]}
[0m11:36:15.203596 [info ] [Thread-1 (]: 1 of 7 OK created sql table model references.states ............................ [[32mOK[0m in 0.21s]
[0m11:36:15.204378 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m11:36:15.204888 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m11:36:15.205452 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m11:36:15.206155 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m11:36:15.206714 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m11:36:15.211189 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m11:36:15.212231 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m11:36:15.215962 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m11:36:15.217824 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m11:36:15.218429 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m11:36:15.218870 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m11:36:15.220855 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m11:36:15.221320 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m11:36:15.221905 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m11:36:15.717387 [debug] [Thread-1 (]: SQL status: OK in 0.495 seconds
[0m11:36:15.721168 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m11:36:15.721720 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m11:36:15.722593 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:36:15.739170 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m11:36:15.739732 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m11:36:15.748576 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m11:36:15.752845 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m11:36:15.753406 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m11:36:15.753832 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m11:36:15.755046 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m11:36:15.758155 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m11:36:15.758726 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m11:36:15.759675 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:36:15.761482 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m11:36:15.762160 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '11a08a9b-2573-4079-a3d7-b6694dab2cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bf9c3e0>]}
[0m11:36:15.762871 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.56s]
[0m11:36:15.763567 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m11:36:15.764040 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m11:36:15.764632 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m11:36:15.765158 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m11:36:15.765582 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m11:36:15.773261 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m11:36:15.774784 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m11:36:15.779574 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m11:36:15.781093 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m11:36:15.781559 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m11:36:15.781989 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m11:36:15.784046 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m11:36:15.784705 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m11:36:15.785482 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m11:36:22.048724 [debug] [Thread-1 (]: SQL status: OK in 6.262 seconds
[0m11:36:22.051988 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m11:36:22.052499 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m11:36:22.053423 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:36:22.058195 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m11:36:22.058654 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m11:36:22.254064 [debug] [Thread-1 (]: SQL status: OK in 0.195 seconds
[0m11:36:22.258461 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m11:36:22.259110 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m11:36:22.259604 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m11:36:22.267134 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m11:36:22.270249 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m11:36:22.270769 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m11:36:22.271625 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:36:22.273203 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m11:36:22.273849 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '11a08a9b-2573-4079-a3d7-b6694dab2cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c594b30>]}
[0m11:36:22.274570 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.51s]
[0m11:36:22.275354 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m11:36:22.276182 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m11:36:22.276748 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m11:36:22.277344 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m11:36:22.277804 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m11:36:22.282695 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m11:36:22.283743 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m11:36:22.288014 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m11:36:22.289448 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m11:36:22.289934 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m11:36:22.290347 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m11:36:22.292078 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m11:36:22.292814 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m11:36:22.294071 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m11:36:23.239134 [debug] [Thread-1 (]: SQL status: OK in 0.944 seconds
[0m11:36:23.242629 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m11:36:23.243093 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m11:36:23.243960 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:36:23.248838 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m11:36:23.249341 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m11:36:23.253834 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m11:36:23.255422 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m11:36:23.255864 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m11:36:23.256285 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m11:36:23.258759 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m11:36:23.261747 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m11:36:23.262281 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m11:36:23.263147 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:36:23.264758 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m11:36:23.265414 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '11a08a9b-2573-4079-a3d7-b6694dab2cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b9d0770>]}
[0m11:36:23.266130 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 0.99s]
[0m11:36:23.266814 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m11:36:23.267291 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m11:36:23.267817 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m11:36:23.268397 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m11:36:23.268842 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m11:36:23.272376 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m11:36:23.273351 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m11:36:23.278499 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m11:36:23.279518 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m11:36:23.280047 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m11:36:23.281865 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m11:36:23.286257 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m11:36:23.286862 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m11:36:23.287448 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m11:36:23.798591 [debug] [Thread-1 (]: SQL status: OK in 0.510 seconds
[0m11:36:23.803207 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m11:36:23.803923 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m11:36:23.805045 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:36:23.810293 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m11:36:23.810807 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m11:36:23.813819 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m11:36:23.815296 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m11:36:23.815757 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m11:36:23.816177 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m11:36:23.818067 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m11:36:23.820743 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m11:36:23.821215 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m11:36:23.822032 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:36:23.824020 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m11:36:23.824811 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '11a08a9b-2573-4079-a3d7-b6694dab2cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c0d1940>]}
[0m11:36:23.825578 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.56s]
[0m11:36:23.826405 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m11:36:23.827187 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m11:36:23.827924 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m11:36:23.828642 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m11:36:23.829070 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m11:36:23.833486 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m11:36:23.834998 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m11:36:23.841918 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m11:36:23.843747 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m11:36:23.844493 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m11:36:23.845099 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m11:36:23.847122 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m11:36:23.847778 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m11:36:23.848377 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m11:36:25.646285 [debug] [Thread-1 (]: SQL status: OK in 1.797 seconds
[0m11:36:25.649918 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m11:36:25.650492 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m11:36:25.651507 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m11:36:25.657094 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m11:36:25.657824 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m11:36:25.664399 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m11:36:25.666386 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m11:36:25.666990 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m11:36:25.667439 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m11:36:25.670338 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m11:36:25.673500 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m11:36:25.674184 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m11:36:25.675196 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:36:25.677030 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m11:36:25.677806 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '11a08a9b-2573-4079-a3d7-b6694dab2cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c5c1160>]}
[0m11:36:25.678636 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.85s]
[0m11:36:25.679426 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m11:36:25.679939 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m11:36:25.680530 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m11:36:25.681142 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m11:36:25.681656 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m11:36:25.689705 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m11:36:25.691269 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m11:36:25.739199 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m11:36:25.741569 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m11:36:25.742248 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m11:36:25.742885 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m11:36:25.746484 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m11:36:25.747208 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m11:36:25.748294 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m11:36:28.055414 [debug] [Thread-1 (]: SQL status: OK in 2.306 seconds
[0m11:36:28.059323 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m11:36:28.059929 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m11:36:28.061180 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:36:28.066658 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m11:36:28.067286 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m11:36:28.070415 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m11:36:28.072068 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m11:36:28.072627 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m11:36:28.073073 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m11:36:28.074292 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m11:36:28.077501 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m11:36:28.078160 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m11:36:28.079193 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:36:28.081795 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m11:36:28.082788 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '11a08a9b-2573-4079-a3d7-b6694dab2cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10be46960>]}
[0m11:36:28.083753 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 2.40s]
[0m11:36:28.084963 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m11:36:28.086473 [debug] [MainThread]: Using duckdb connection "master"
[0m11:36:28.086872 [debug] [MainThread]: On master: BEGIN
[0m11:36:28.087219 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m11:36:28.088890 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m11:36:28.089601 [debug] [MainThread]: On master: COMMIT
[0m11:36:28.090203 [debug] [MainThread]: Using duckdb connection "master"
[0m11:36:28.090639 [debug] [MainThread]: On master: COMMIT
[0m11:36:28.091369 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m11:36:28.091794 [debug] [MainThread]: On master: Close
[0m11:36:28.092571 [debug] [MainThread]: Connection 'master' was properly closed.
[0m11:36:28.093205 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m11:36:28.093697 [info ] [MainThread]: 
[0m11:36:28.094121 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 13.34 seconds (13.34s).
[0m11:36:28.097363 [debug] [MainThread]: Command end result
[0m11:36:28.127904 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:36:28.133410 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:36:28.143168 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m11:36:28.143869 [info ] [MainThread]: 
[0m11:36:28.144368 [info ] [MainThread]: [32mCompleted successfully[0m
[0m11:36:28.144789 [info ] [MainThread]: 
[0m11:36:28.145270 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m11:36:28.150268 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 15.519736, "process_in_blocks": "0", "process_kernel_time": 0.904501, "process_mem_max_rss": "393314304", "process_out_blocks": "0", "process_user_time": 8.026109}
[0m11:36:28.151136 [debug] [MainThread]: Command `dbt run` succeeded at 11:36:28.150972 after 15.52 seconds
[0m11:36:28.151715 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b439640>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109d30920>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c1a3980>]}
[0m11:36:28.152271 [debug] [MainThread]: Flushing usage events
[0m11:36:28.846291 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:36:49.559391 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105e68fe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10885b470>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107b47b30>]}


============================== 11:36:49.564829 | e4fd30e2-b821-4044-88c6-f0c7045554d5 ==============================
[0m11:36:49.564829 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:36:49.565544 [debug] [MainThread]: running dbt with arguments {'log_format': 'default', 'target_path': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'use_experimental_parser': 'False', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'debug': 'False', 'send_anonymous_usage_stats': 'True', 'indirect_selection': 'eager', 'introspect': 'True', 'printer_width': '80', 'use_colors': 'True', 'no_print': 'None', 'cache_selected_only': 'False', 'fail_fast': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'quiet': 'False', 'warn_error': 'None', 'version_check': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'empty': 'None', 'static_parser': 'True'}
[0m11:36:49.861938 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'e4fd30e2-b821-4044-88c6-f0c7045554d5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108abc3b0>]}
[0m11:36:49.938879 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'e4fd30e2-b821-4044-88c6-f0c7045554d5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10828aba0>]}
[0m11:36:49.940943 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:36:50.085193 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:36:50.207494 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:36:50.207970 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:36:50.251139 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'e4fd30e2-b821-4044-88c6-f0c7045554d5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1089fa900>]}
[0m11:36:50.333799 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:36:50.336671 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:36:50.353388 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'e4fd30e2-b821-4044-88c6-f0c7045554d5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108dd2d80>]}
[0m11:36:50.354016 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:36:50.354453 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'e4fd30e2-b821-4044-88c6-f0c7045554d5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108b7b1d0>]}
[0m11:36:50.355749 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:36:50.356365 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:36:50.356913 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:36:50.357453 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:36:50.357989 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:36:50.358560 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:36:50.359104 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:36:50.361703 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.89300746, "process_in_blocks": "0", "process_kernel_time": 0.270024, "process_mem_max_rss": "121454592", "process_out_blocks": "0", "process_user_time": 2.358894}
[0m11:36:50.362326 [debug] [MainThread]: Command `dbt ls` succeeded at 11:36:50.362197 after 0.89 seconds
[0m11:36:50.362811 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1085d7830>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1089d4980>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10828ab40>]}
[0m11:36:50.363319 [debug] [MainThread]: Flushing usage events
[0m11:36:50.762020 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:37:00.149373 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107c54920>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ca2900>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ca2450>]}


============================== 11:37:00.155033 | ec4cfc4b-37e0-4020-a822-e74753925653 ==============================
[0m11:37:00.155033 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:37:00.155809 [debug] [MainThread]: running dbt with arguments {'empty': 'False', 'cache_selected_only': 'False', 'log_format': 'default', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'invocation_command': 'dbt run --target prod', 'log_cache_events': 'False', 'debug': 'False', 'no_print': 'None', 'use_experimental_parser': 'False', 'send_anonymous_usage_stats': 'True', 'indirect_selection': 'eager', 'use_colors': 'True', 'warn_error': 'None', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'write_json': 'True', 'target_path': 'None', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'partial_parse': 'True', 'printer_width': '80', 'version_check': 'True', 'quiet': 'False', 'static_parser': 'True', 'fail_fast': 'False', 'introspect': 'True'}
[0m11:37:00.467757 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'ec4cfc4b-37e0-4020-a822-e74753925653', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107da8770>]}
[0m11:37:00.545775 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'ec4cfc4b-37e0-4020-a822-e74753925653', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107cced80>]}
[0m11:37:00.547779 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:37:00.696264 [debug] [MainThread]: checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, vars: {}, profile: , target: prod, version: 1.10.9
[0m11:37:00.793108 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m11:37:00.793628 [debug] [MainThread]: previous checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, current checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23
[0m11:37:00.794049 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'ec4cfc4b-37e0-4020-a822-e74753925653', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10818ddf0>]}
[0m11:37:02.430813 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'ec4cfc4b-37e0-4020-a822-e74753925653', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108419af0>]}
[0m11:37:02.516309 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:37:02.518569 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:37:02.535275 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'ec4cfc4b-37e0-4020-a822-e74753925653', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1083deb10>]}
[0m11:37:02.535840 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:37:02.536361 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'ec4cfc4b-37e0-4020-a822-e74753925653', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1084aed20>]}
[0m11:37:02.538682 [info ] [MainThread]: 
[0m11:37:02.539136 [info ] [MainThread]: Concurrency: 1 threads (target='prod')
[0m11:37:02.539518 [info ] [MainThread]: 
[0m11:37:02.540169 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m11:37:02.546812 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m11:37:02.603189 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m11:37:02.603682 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m11:37:02.604060 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m11:37:02.649076 [debug] [ThreadPool]: SQL status: OK in 0.045 seconds
[0m11:37:02.650720 [debug] [ThreadPool]: On list_memory: Close
[0m11:37:02.653189 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m11:37:02.653650 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m11:37:02.654114 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m11:37:02.656401 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m11:37:02.657981 [debug] [ThreadPool]: On list_memory: Close
[0m11:37:02.658755 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_references)
[0m11:37:02.659317 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "references"
"
[0m11:37:02.666852 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m11:37:02.667325 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m11:37:02.667688 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m11:37:02.669607 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m11:37:02.671094 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m11:37:02.671469 [debug] [ThreadPool]: On create_memory_references: BEGIN
[0m11:37:02.672037 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m11:37:02.672469 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m11:37:02.672855 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_references"} */

    
    
        create schema if not exists memory."references"
    
[0m11:37:02.673579 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m11:37:02.674687 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m11:37:02.675077 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m11:37:02.675422 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m11:37:02.676043 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m11:37:02.676440 [debug] [ThreadPool]: On create_memory_references: Close
[0m11:37:02.677082 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_references, now create_memory_fct_salesforce)
[0m11:37:02.677586 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m11:37:02.679679 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m11:37:02.680080 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m11:37:02.680521 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m11:37:02.682803 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m11:37:02.684503 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m11:37:02.684900 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m11:37:02.685587 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m11:37:02.685955 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m11:37:02.686310 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m11:37:02.686942 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m11:37:02.687918 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m11:37:02.688318 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m11:37:02.688712 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m11:37:02.689480 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m11:37:02.689888 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m11:37:02.691460 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_references)
[0m11:37:02.697562 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m11:37:02.698070 [debug] [ThreadPool]: On list_memory_references: BEGIN
[0m11:37:02.698438 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m11:37:02.700016 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m11:37:02.700404 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m11:37:02.700784 [debug] [ThreadPool]: On list_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'references'
    and lower(table_catalog) = 'memory'
  
[0m11:37:02.716396 [debug] [ThreadPool]: SQL status: OK in 0.015 seconds
[0m11:37:02.717908 [debug] [ThreadPool]: On list_memory_references: ROLLBACK
[0m11:37:02.719369 [debug] [ThreadPool]: Failed to rollback 'list_memory_references'
[0m11:37:02.719762 [debug] [ThreadPool]: On list_memory_references: Close
[0m11:37:02.720365 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_references, now list_memory_fct_salesforce)
[0m11:37:02.722470 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m11:37:02.722959 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m11:37:02.723326 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m11:37:02.724935 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m11:37:02.725320 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m11:37:02.725687 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m11:37:02.729405 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m11:37:02.730847 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m11:37:02.731852 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m11:37:02.732212 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m11:37:02.732858 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'ec4cfc4b-37e0-4020-a822-e74753925653', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108814cb0>]}
[0m11:37:02.733450 [debug] [MainThread]: Using duckdb connection "master"
[0m11:37:02.733831 [debug] [MainThread]: On master: BEGIN
[0m11:37:02.734177 [debug] [MainThread]: Opening a new connection, currently in state init
[0m11:37:02.735864 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m11:37:02.736271 [debug] [MainThread]: On master: COMMIT
[0m11:37:02.736642 [debug] [MainThread]: Using duckdb connection "master"
[0m11:37:02.736992 [debug] [MainThread]: On master: COMMIT
[0m11:37:02.737530 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m11:37:02.737906 [debug] [MainThread]: On master: Close
[0m11:37:02.739933 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m11:37:02.740559 [info ] [Thread-1 (]: 1 of 7 START sql table model references.states ................................. [RUN]
[0m11:37:02.741101 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m11:37:02.741537 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m11:37:02.750698 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m11:37:02.751550 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m11:37:02.791121 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m11:37:02.792115 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m11:37:02.792673 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m11:37:02.793117 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m11:37:02.795023 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m11:37:02.795557 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m11:37:02.796122 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m11:37:02.832415 [debug] [Thread-1 (]: SQL status: OK in 0.036 seconds
[0m11:37:02.842122 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m11:37:02.842894 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */
alter table memory."references"."states__dbt_tmp" rename to "states"
[0m11:37:02.844669 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m11:37:02.863671 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m11:37:02.864358 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m11:37:02.868448 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m11:37:02.884386 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m11:37:02.885201 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m11:37:02.885932 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m11:37:02.887533 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m11:37:02.896538 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m11:37:02.897463 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

      drop table if exists memory."references"."states__dbt_backup" cascade
    
[0m11:37:02.898583 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:37:02.903402 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m11:37:02.905886 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ec4cfc4b-37e0-4020-a822-e74753925653', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1087595e0>]}
[0m11:37:02.906859 [info ] [Thread-1 (]: 1 of 7 OK created sql table model references.states ............................ [[32mOK[0m in 0.16s]
[0m11:37:02.908053 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m11:37:02.908681 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m11:37:02.909742 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m11:37:02.910829 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m11:37:02.911911 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m11:37:02.920029 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m11:37:02.921180 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m11:37:02.927101 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m11:37:02.928969 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m11:37:02.930170 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m11:37:02.931298 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m11:37:02.936621 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m11:37:02.937326 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m11:37:02.937922 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m11:37:03.478878 [debug] [Thread-1 (]: SQL status: OK in 0.540 seconds
[0m11:37:03.483634 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m11:37:03.484331 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m11:37:03.485505 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m11:37:03.491268 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m11:37:03.491836 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m11:37:03.495817 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m11:37:03.497570 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m11:37:03.498145 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m11:37:03.498674 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m11:37:03.500077 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m11:37:03.503326 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m11:37:03.503875 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m11:37:03.504862 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:37:03.506652 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m11:37:03.507328 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ec4cfc4b-37e0-4020-a822-e74753925653', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1083a6de0>]}
[0m11:37:03.508045 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.60s]
[0m11:37:03.508859 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m11:37:03.509466 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m11:37:03.510191 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m11:37:03.510789 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m11:37:03.511248 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m11:37:03.521071 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m11:37:03.521959 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m11:37:03.525254 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m11:37:03.526103 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m11:37:03.526560 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m11:37:03.526990 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m11:37:03.528893 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m11:37:03.529453 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m11:37:03.530179 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        c.is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    is_deleted,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m11:37:09.535687 [debug] [Thread-1 (]: SQL status: OK in 6.005 seconds
[0m11:37:09.539174 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m11:37:09.539635 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m11:37:09.540533 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:37:09.545458 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m11:37:09.545937 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m11:37:09.748096 [debug] [Thread-1 (]: SQL status: OK in 0.202 seconds
[0m11:37:09.749600 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m11:37:09.750047 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m11:37:09.750446 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m11:37:09.756650 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m11:37:09.759675 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m11:37:09.760147 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m11:37:09.760955 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:37:09.762434 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m11:37:09.763057 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ec4cfc4b-37e0-4020-a822-e74753925653', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1088eb0e0>]}
[0m11:37:09.763757 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.25s]
[0m11:37:09.764427 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m11:37:09.765231 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m11:37:09.765763 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m11:37:09.766326 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m11:37:09.766772 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m11:37:09.771715 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m11:37:09.772771 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m11:37:09.777149 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m11:37:09.778263 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m11:37:09.778726 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m11:37:09.779386 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m11:37:09.781014 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m11:37:09.781446 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m11:37:09.782032 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        ol.is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        o.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
    is_deleted,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m11:37:10.730897 [debug] [Thread-1 (]: SQL status: OK in 0.948 seconds
[0m11:37:10.734614 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m11:37:10.735278 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m11:37:10.736545 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m11:37:10.765930 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m11:37:10.779357 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m11:37:10.830332 [debug] [Thread-1 (]: SQL status: OK in 0.047 seconds
[0m11:37:10.833378 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m11:37:10.834281 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m11:37:10.835046 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m11:37:10.840450 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m11:37:10.844764 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m11:37:10.845509 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m11:37:10.846657 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m11:37:10.848643 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m11:37:10.849379 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ec4cfc4b-37e0-4020-a822-e74753925653', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1088c8f80>]}
[0m11:37:10.850194 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 1.08s]
[0m11:37:10.851018 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m11:37:10.851636 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m11:37:10.852315 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m11:37:10.853033 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m11:37:10.853569 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m11:37:10.859004 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m11:37:10.860785 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m11:37:10.865193 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m11:37:10.866863 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m11:37:10.868940 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m11:37:10.870422 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m11:37:10.872990 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m11:37:10.873750 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m11:37:10.874610 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        t.is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    is_deleted,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m11:37:11.352141 [debug] [Thread-1 (]: SQL status: OK in 0.476 seconds
[0m11:37:11.356115 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m11:37:11.356667 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m11:37:11.357537 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:37:11.365411 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m11:37:11.366000 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m11:37:11.370765 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m11:37:11.372475 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m11:37:11.372965 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m11:37:11.373396 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m11:37:11.374729 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m11:37:11.379285 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m11:37:11.379889 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m11:37:11.380989 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m11:37:11.382986 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m11:37:11.383807 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ec4cfc4b-37e0-4020-a822-e74753925653', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108921fa0>]}
[0m11:37:11.384605 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.53s]
[0m11:37:11.385404 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m11:37:11.386232 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m11:37:11.386828 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m11:37:11.387481 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m11:37:11.387941 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m11:37:11.394724 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m11:37:11.396513 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m11:37:11.400853 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m11:37:11.402094 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m11:37:11.402619 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m11:37:11.403058 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m11:37:11.404833 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m11:37:11.405302 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m11:37:11.405904 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        m.is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    is_deleted,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m11:37:13.297971 [debug] [Thread-1 (]: SQL status: OK in 1.891 seconds
[0m11:37:13.301315 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m11:37:13.301767 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m11:37:13.302595 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:37:13.307504 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m11:37:13.308004 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m11:37:13.313777 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m11:37:13.315320 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m11:37:13.315779 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m11:37:13.316189 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m11:37:13.318330 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m11:37:13.321289 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m11:37:13.321792 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m11:37:13.322754 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:37:13.324422 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m11:37:13.325074 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ec4cfc4b-37e0-4020-a822-e74753925653', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1088f76e0>]}
[0m11:37:13.325838 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.94s]
[0m11:37:13.326584 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m11:37:13.327089 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m11:37:13.327708 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m11:37:13.328310 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m11:37:13.328771 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m11:37:13.334406 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m11:37:13.335276 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m11:37:13.339805 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m11:37:13.340712 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m11:37:13.341150 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m11:37:13.341551 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m11:37:13.343276 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m11:37:13.343950 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m11:37:13.345030 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m11:37:15.185455 [debug] [Thread-1 (]: SQL status: OK in 1.839 seconds
[0m11:37:15.189048 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m11:37:15.189603 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m11:37:15.190517 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:37:15.196295 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m11:37:15.196950 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m11:37:15.200784 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m11:37:15.202353 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m11:37:15.202877 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m11:37:15.203312 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m11:37:15.204163 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:37:15.206966 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m11:37:15.207506 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m11:37:15.208380 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m11:37:15.210382 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m11:37:15.211138 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ec4cfc4b-37e0-4020-a822-e74753925653', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1088da840>]}
[0m11:37:15.211856 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.88s]
[0m11:37:15.212665 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m11:37:15.213965 [debug] [MainThread]: Using duckdb connection "master"
[0m11:37:15.214398 [debug] [MainThread]: On master: BEGIN
[0m11:37:15.214756 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m11:37:15.216291 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m11:37:15.216726 [debug] [MainThread]: On master: COMMIT
[0m11:37:15.217103 [debug] [MainThread]: Using duckdb connection "master"
[0m11:37:15.217456 [debug] [MainThread]: On master: COMMIT
[0m11:37:15.218053 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m11:37:15.218562 [debug] [MainThread]: On master: Close
[0m11:37:15.219420 [debug] [MainThread]: Connection 'master' was properly closed.
[0m11:37:15.219848 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m11:37:15.220370 [info ] [MainThread]: 
[0m11:37:15.220822 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.68 seconds (12.68s).
[0m11:37:15.222739 [debug] [MainThread]: Command end result
[0m11:37:15.251577 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:37:15.253910 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:37:15.261823 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m11:37:15.262337 [info ] [MainThread]: 
[0m11:37:15.262823 [info ] [MainThread]: [32mCompleted successfully[0m
[0m11:37:15.263325 [info ] [MainThread]: 
[0m11:37:15.263892 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m11:37:15.266747 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 15.208009, "process_in_blocks": "0", "process_kernel_time": 0.898297, "process_mem_max_rss": "390004736", "process_out_blocks": "0", "process_user_time": 9.291782}
[0m11:37:15.267428 [debug] [MainThread]: Command `dbt run` succeeded at 11:37:15.267302 after 15.21 seconds
[0m11:37:15.268029 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1074954c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ca2780>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ca2630>]}
[0m11:37:15.268803 [debug] [MainThread]: Flushing usage events
[0m11:37:15.802454 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:43:44.798928 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112eb9880>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113bdecf0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113bde930>]}


============================== 11:43:44.804665 | b01a1118-f1cc-43a6-bb7a-961bc30b6d5f ==============================
[0m11:43:44.804665 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:43:44.805439 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'invocation_command': 'dbt ls --resource-type model --output json', 'fail_fast': 'False', 'partial_parse': 'True', 'log_format': 'default', 'version_check': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'cache_selected_only': 'False', 'use_experimental_parser': 'False', 'introspect': 'True', 'no_print': 'None', 'empty': 'None', 'static_parser': 'True', 'use_colors': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'indirect_selection': 'eager', 'target_path': 'None', 'log_cache_events': 'False', 'write_json': 'True', 'quiet': 'False', 'warn_error': 'None', 'send_anonymous_usage_stats': 'True', 'debug': 'False'}
[0m11:43:45.104827 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'b01a1118-f1cc-43a6-bb7a-961bc30b6d5f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1114d4bc0>]}
[0m11:43:45.187914 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'b01a1118-f1cc-43a6-bb7a-961bc30b6d5f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1138218e0>]}
[0m11:43:45.189835 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:43:45.357852 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:43:45.487736 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m11:43:45.488269 [debug] [MainThread]: previous checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, current checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e
[0m11:43:45.488684 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'b01a1118-f1cc-43a6-bb7a-961bc30b6d5f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1140cd760>]}
[0m11:43:47.199250 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'b01a1118-f1cc-43a6-bb7a-961bc30b6d5f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1142c1670>]}
[0m11:43:47.273866 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:43:47.276111 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:43:47.290930 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'b01a1118-f1cc-43a6-bb7a-961bc30b6d5f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1143bcd40>]}
[0m11:43:47.291532 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:43:47.291974 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'b01a1118-f1cc-43a6-bb7a-961bc30b6d5f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1143b64e0>]}
[0m11:43:47.293137 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:43:47.293733 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:43:47.294280 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:43:47.294836 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:43:47.295383 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:43:47.295919 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:43:47.296456 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:43:47.299159 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 2.5973547, "process_in_blocks": "0", "process_kernel_time": 0.338673, "process_mem_max_rss": "126029824", "process_out_blocks": "0", "process_user_time": 3.893923}
[0m11:43:47.299909 [debug] [MainThread]: Command `dbt ls` succeeded at 11:43:47.299759 after 2.60 seconds
[0m11:43:47.300570 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112f5dbe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113d9cce0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11242fb90>]}
[0m11:43:47.301152 [debug] [MainThread]: Flushing usage events
[0m11:43:47.744105 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:48:57.030420 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1101f25d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110f6ec90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110f6e900>]}


============================== 11:48:57.038813 | c0cac10e-6322-4e76-a64e-77edac07adf8 ==============================
[0m11:48:57.038813 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:48:57.039801 [debug] [MainThread]: running dbt with arguments {'debug': 'False', 'partial_parse': 'True', 'send_anonymous_usage_stats': 'True', 'printer_width': '80', 'no_print': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'log_cache_events': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'cache_selected_only': 'False', 'write_json': 'True', 'quiet': 'False', 'version_check': 'True', 'introspect': 'True', 'empty': 'None', 'warn_error': 'None', 'log_format': 'default', 'use_colors': 'True', 'indirect_selection': 'eager', 'static_parser': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'target_path': 'None', 'use_experimental_parser': 'False', 'fail_fast': 'False'}
[0m11:48:57.356841 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'c0cac10e-6322-4e76-a64e-77edac07adf8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110f99970>]}
[0m11:48:57.432851 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'c0cac10e-6322-4e76-a64e-77edac07adf8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11109c6b0>]}
[0m11:48:57.436842 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:48:57.605338 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:48:57.761772 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:48:57.762248 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:48:57.805253 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'c0cac10e-6322-4e76-a64e-77edac07adf8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11115eae0>]}
[0m11:48:57.886602 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:48:57.890342 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:48:57.929812 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'c0cac10e-6322-4e76-a64e-77edac07adf8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11133cda0>]}
[0m11:48:57.930504 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:48:57.931063 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'c0cac10e-6322-4e76-a64e-77edac07adf8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111521d00>]}
[0m11:48:57.932554 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:48:57.933296 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:48:57.933949 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:48:57.934540 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:48:57.935130 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:48:57.935719 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:48:57.936308 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:48:57.940006 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0080928, "process_in_blocks": "0", "process_kernel_time": 0.511768, "process_mem_max_rss": "120369152", "process_out_blocks": "0", "process_user_time": 2.821194}
[0m11:48:57.940784 [debug] [MainThread]: Command `dbt ls` succeeded at 11:48:57.940638 after 1.01 seconds
[0m11:48:57.941334 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110c5f230>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110756ba0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1114f3800>]}
[0m11:48:57.941813 [debug] [MainThread]: Flushing usage events
[0m11:48:58.396893 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:49:22.297487 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d47fd40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db52c30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db528a0>]}


============================== 11:49:22.303454 | 585676b2-f82d-44ff-b722-7663d7c4bafc ==============================
[0m11:49:22.303454 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:49:22.304359 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'log_cache_events': 'False', 'cache_selected_only': 'False', 'version_check': 'True', 'log_format': 'default', 'introspect': 'True', 'use_experimental_parser': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'True', 'warn_error': 'None', 'indirect_selection': 'eager', 'no_print': 'None', 'write_json': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'static_parser': 'True', 'use_colors': 'True', 'debug': 'False', 'fail_fast': 'False', 'quiet': 'False', 'empty': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'partial_parse': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs'}
[0m11:49:22.632494 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '585676b2-f82d-44ff-b722-7663d7c4bafc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b444fe0>]}
[0m11:49:22.731630 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '585676b2-f82d-44ff-b722-7663d7c4bafc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc1de80>]}
[0m11:49:22.733772 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:49:22.887805 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:49:23.017242 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:49:23.017720 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:49:23.066476 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '585676b2-f82d-44ff-b722-7663d7c4bafc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df35280>]}
[0m11:49:23.170974 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:49:23.174514 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:49:23.194683 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '585676b2-f82d-44ff-b722-7663d7c4bafc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dd6f170>]}
[0m11:49:23.195340 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:49:23.195887 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '585676b2-f82d-44ff-b722-7663d7c4bafc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e11f620>]}
[0m11:49:23.198085 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:49:23.199029 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:49:23.199958 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:49:23.200832 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:49:23.201651 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:49:23.202848 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:49:23.203923 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:49:23.207743 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0034202, "process_in_blocks": "0", "process_kernel_time": 0.299716, "process_mem_max_rss": "121860096", "process_out_blocks": "0", "process_user_time": 2.507479}
[0m11:49:23.208955 [debug] [MainThread]: Command `dbt ls` succeeded at 11:49:23.208688 after 1.00 seconds
[0m11:49:23.209911 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db523c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dd48770>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dd49310>]}
[0m11:49:23.210685 [debug] [MainThread]: Flushing usage events
[0m11:49:23.691093 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:49:41.777227 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10312fc80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10596eed0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10596eb40>]}


============================== 11:49:41.782532 | 8d93e365-44dd-4182-a9a5-06f6823f9eae ==============================
[0m11:49:41.782532 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:49:41.783254 [debug] [MainThread]: running dbt with arguments {'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'static_parser': 'True', 'cache_selected_only': 'False', 'fail_fast': 'False', 'partial_parse': 'True', 'empty': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'send_anonymous_usage_stats': 'True', 'debug': 'False', 'introspect': 'True', 'printer_width': '80', 'quiet': 'False', 'target_path': 'None', 'use_colors': 'True', 'indirect_selection': 'eager', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_cache_events': 'False', 'version_check': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_format': 'default', 'write_json': 'True', 'warn_error': 'None', 'no_print': 'None', 'use_experimental_parser': 'False'}
[0m11:49:42.133382 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '8d93e365-44dd-4182-a9a5-06f6823f9eae', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105b5cfb0>]}
[0m11:49:42.280839 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '8d93e365-44dd-4182-a9a5-06f6823f9eae', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105b2cfb0>]}
[0m11:49:42.283847 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:49:42.496056 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:49:42.624459 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:49:42.624923 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:49:42.668072 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '8d93e365-44dd-4182-a9a5-06f6823f9eae', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1059516a0>]}
[0m11:49:42.753296 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:49:42.755636 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:49:42.770531 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '8d93e365-44dd-4182-a9a5-06f6823f9eae', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105d9f350>]}
[0m11:49:42.771117 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:49:42.771536 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '8d93e365-44dd-4182-a9a5-06f6823f9eae', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x103ca8470>]}
[0m11:49:42.772776 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:49:42.773400 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:49:42.773960 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:49:42.774510 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:49:42.775048 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:49:42.775593 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:49:42.776144 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:49:42.778715 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0913419, "process_in_blocks": "0", "process_kernel_time": 0.327875, "process_mem_max_rss": "120868864", "process_out_blocks": "0", "process_user_time": 2.52274}
[0m11:49:42.779382 [debug] [MainThread]: Command `dbt ls` succeeded at 11:49:42.779246 after 1.09 seconds
[0m11:49:42.779939 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105847320>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105d9cc20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105b5d190>]}
[0m11:49:42.780397 [debug] [MainThread]: Flushing usage events
[0m11:49:43.255992 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:50:16.472410 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107476bd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ab2e10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ab2960>]}


============================== 11:50:16.477712 | f409b34e-30fc-4e64-91e9-b87b4921aafe ==============================
[0m11:50:16.477712 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:50:16.478474 [debug] [MainThread]: running dbt with arguments {'no_print': 'None', 'log_format': 'default', 'introspect': 'True', 'write_json': 'True', 'static_parser': 'True', 'fail_fast': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'version_check': 'True', 'empty': 'None', 'use_experimental_parser': 'False', 'partial_parse': 'True', 'debug': 'False', 'use_colors': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'log_cache_events': 'False', 'quiet': 'False', 'cache_selected_only': 'False', 'send_anonymous_usage_stats': 'True', 'warn_error': 'None', 'printer_width': '80', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'indirect_selection': 'eager', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl'}
[0m11:50:16.772563 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'f409b34e-30fc-4e64-91e9-b87b4921aafe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107beac90>]}
[0m11:50:16.849016 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'f409b34e-30fc-4e64-91e9-b87b4921aafe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1054e3080>]}
[0m11:50:16.850936 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:50:16.991685 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:50:17.112736 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:50:17.113279 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:50:17.157180 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'f409b34e-30fc-4e64-91e9-b87b4921aafe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107be9d00>]}
[0m11:50:17.239239 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:50:17.241698 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:50:17.256447 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'f409b34e-30fc-4e64-91e9-b87b4921aafe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10808ce30>]}
[0m11:50:17.257041 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:50:17.257459 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'f409b34e-30fc-4e64-91e9-b87b4921aafe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107b29520>]}
[0m11:50:17.258695 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:50:17.259412 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:50:17.259972 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:50:17.260514 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:50:17.261045 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:50:17.261582 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:50:17.262121 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:50:17.264772 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.87889636, "process_in_blocks": "0", "process_kernel_time": 0.28178, "process_mem_max_rss": "120741888", "process_out_blocks": "0", "process_user_time": 2.374431}
[0m11:50:17.265537 [debug] [MainThread]: Command `dbt ls` succeeded at 11:50:17.265296 after 0.88 seconds
[0m11:50:17.266057 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106d8ffe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107d3e150>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107476bd0>]}
[0m11:50:17.266497 [debug] [MainThread]: Flushing usage events
[0m11:50:17.729027 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:50:25.678403 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x103493740>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105cbab70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105cba7b0>]}


============================== 11:50:25.683475 | 68b9f6c1-c8d7-4014-b133-76db8e07721b ==============================
[0m11:50:25.683475 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:50:25.684334 [debug] [MainThread]: running dbt with arguments {'partial_parse': 'True', 'use_colors': 'True', 'target_path': 'None', 'debug': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'printer_width': '80', 'log_cache_events': 'False', 'quiet': 'False', 'cache_selected_only': 'False', 'use_experimental_parser': 'False', 'write_json': 'True', 'send_anonymous_usage_stats': 'True', 'empty': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_format': 'default', 'fail_fast': 'False', 'indirect_selection': 'eager', 'version_check': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'introspect': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'static_parser': 'True', 'no_print': 'None', 'warn_error': 'None'}
[0m11:50:25.987792 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '68b9f6c1-c8d7-4014-b133-76db8e07721b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105ce62a0>]}
[0m11:50:26.099480 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '68b9f6c1-c8d7-4014-b133-76db8e07721b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104fdf0b0>]}
[0m11:50:26.101383 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:50:26.240626 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:50:26.365010 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:50:26.365489 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:50:26.408674 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '68b9f6c1-c8d7-4014-b133-76db8e07721b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105f6eb70>]}
[0m11:50:26.491692 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:50:26.493991 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:50:26.508027 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '68b9f6c1-c8d7-4014-b133-76db8e07721b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10613e3c0>]}
[0m11:50:26.508592 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:50:26.509010 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '68b9f6c1-c8d7-4014-b133-76db8e07721b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105df2db0>]}
[0m11:50:26.510203 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:50:26.510802 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:50:26.511367 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:50:26.511900 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:50:26.512437 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:50:26.512967 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:50:26.513499 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:50:26.516153 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.92313474, "process_in_blocks": "0", "process_kernel_time": 0.291126, "process_mem_max_rss": "120999936", "process_out_blocks": "0", "process_user_time": 2.445992}
[0m11:50:26.516798 [debug] [MainThread]: Command `dbt ls` succeeded at 11:50:26.516667 after 0.92 seconds
[0m11:50:26.517282 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10609b5c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105df2db0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106256240>]}
[0m11:50:26.517705 [debug] [MainThread]: Flushing usage events
[0m11:50:26.932268 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:54:13.050031 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aee0aa0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10af2ee70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10af2eab0>]}


============================== 11:54:13.055400 | 33b8c0dc-03bd-4741-9edd-f171866c3f14 ==============================
[0m11:54:13.055400 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:54:13.056080 [debug] [MainThread]: running dbt with arguments {'quiet': 'False', 'warn_error': 'None', 'log_format': 'default', 'log_cache_events': 'False', 'indirect_selection': 'eager', 'invocation_command': 'dbt ls --resource-type model --output json', 'write_json': 'True', 'send_anonymous_usage_stats': 'True', 'partial_parse': 'True', 'static_parser': 'True', 'debug': 'False', 'target_path': 'None', 'no_print': 'None', 'cache_selected_only': 'False', 'fail_fast': 'False', 'use_experimental_parser': 'False', 'use_colors': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'printer_width': '80', 'introspect': 'True', 'empty': 'None', 'version_check': 'True'}
[0m11:54:13.390829 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '33b8c0dc-03bd-4741-9edd-f171866c3f14', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aec3a70>]}
[0m11:54:13.482022 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '33b8c0dc-03bd-4741-9edd-f171866c3f14', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b064650>]}
[0m11:54:13.484558 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:54:13.669059 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:54:13.795487 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:54:13.796024 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:54:13.840562 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '33b8c0dc-03bd-4741-9edd-f171866c3f14', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b1b9970>]}
[0m11:54:13.922783 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:54:13.925437 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:54:13.940544 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '33b8c0dc-03bd-4741-9edd-f171866c3f14', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10af5dd60>]}
[0m11:54:13.941154 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:54:13.941570 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '33b8c0dc-03bd-4741-9edd-f171866c3f14', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b4fbcb0>]}
[0m11:54:13.942795 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:54:13.943434 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:54:13.943991 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:54:13.944529 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:54:13.945070 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:54:13.945610 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:54:13.946148 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:54:13.948695 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.98563457, "process_in_blocks": "0", "process_kernel_time": 0.32092, "process_mem_max_rss": "121356288", "process_out_blocks": "0", "process_user_time": 2.471913}
[0m11:54:13.949316 [debug] [MainThread]: Command `dbt ls` succeeded at 11:54:13.949188 after 0.99 seconds
[0m11:54:13.949811 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aec3a10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b1e7980>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b414d10>]}
[0m11:54:13.950332 [debug] [MainThread]: Flushing usage events
[0m11:54:14.404098 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:54:40.254777 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1113fee70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111ad2cc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111ad2930>]}


============================== 11:54:40.259737 | 99e9f32c-9380-4254-8c0b-f6e47385388f ==============================
[0m11:54:40.259737 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:54:40.260533 [debug] [MainThread]: running dbt with arguments {'empty': 'None', 'log_cache_events': 'False', 'target_path': 'None', 'quiet': 'False', 'send_anonymous_usage_stats': 'True', 'printer_width': '80', 'no_print': 'None', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'invocation_command': 'dbt ls --resource-type model --output json', 'use_experimental_parser': 'False', 'partial_parse': 'True', 'version_check': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'introspect': 'True', 'write_json': 'True', 'log_format': 'default', 'static_parser': 'True', 'use_colors': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'indirect_selection': 'eager', 'debug': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs'}
[0m11:54:40.554254 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '99e9f32c-9380-4254-8c0b-f6e47385388f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1113b15b0>]}
[0m11:54:40.629925 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '99e9f32c-9380-4254-8c0b-f6e47385388f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110351af0>]}
[0m11:54:40.631941 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:54:40.956393 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:54:41.096007 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:54:41.096477 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:54:41.143279 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '99e9f32c-9380-4254-8c0b-f6e47385388f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111eac080>]}
[0m11:54:41.226126 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:54:41.228445 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:54:41.243171 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '99e9f32c-9380-4254-8c0b-f6e47385388f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111f566c0>]}
[0m11:54:41.243748 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:54:41.244170 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '99e9f32c-9380-4254-8c0b-f6e47385388f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111b01010>]}
[0m11:54:41.245405 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:54:41.246022 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:54:41.246657 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:54:41.247230 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:54:41.247775 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:54:41.248320 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:54:41.248869 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:54:41.251452 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0810353, "process_in_blocks": "0", "process_kernel_time": 0.312594, "process_mem_max_rss": "121696256", "process_out_blocks": "0", "process_user_time": 2.418757}
[0m11:54:41.252082 [debug] [MainThread]: Command `dbt ls` succeeded at 11:54:41.251948 after 1.08 seconds
[0m11:54:41.252646 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111024800>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111ad2c30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111ad2a80>]}
[0m11:54:41.253090 [debug] [MainThread]: Flushing usage events
[0m11:54:41.642767 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:54:52.998318 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113034980>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113082db0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113082900>]}


============================== 11:54:53.003473 | c8941fdf-6d09-4cdf-af46-c2b2ff693b89 ==============================
[0m11:54:53.003473 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:54:53.004177 [debug] [MainThread]: running dbt with arguments {'invocation_command': 'dbt ls --resource-type model --output json', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_format': 'default', 'target_path': 'None', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'printer_width': '80', 'fail_fast': 'False', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'send_anonymous_usage_stats': 'True', 'warn_error': 'None', 'empty': 'None', 'use_colors': 'True', 'no_print': 'None', 'quiet': 'False', 'use_experimental_parser': 'False', 'cache_selected_only': 'False', 'indirect_selection': 'eager', 'debug': 'False', 'introspect': 'True', 'version_check': 'True'}
[0m11:54:53.370316 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'c8941fdf-6d09-4cdf-af46-c2b2ff693b89', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11311cc80>]}
[0m11:54:53.476437 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'c8941fdf-6d09-4cdf-af46-c2b2ff693b89', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1130357f0>]}
[0m11:54:53.478399 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:54:53.622257 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:54:53.745934 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:54:53.746480 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:54:53.790134 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'c8941fdf-6d09-4cdf-af46-c2b2ff693b89', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1132a2150>]}
[0m11:54:53.872958 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:54:53.875331 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:54:53.889400 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'c8941fdf-6d09-4cdf-af46-c2b2ff693b89', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11365cc80>]}
[0m11:54:53.889987 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:54:53.890413 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'c8941fdf-6d09-4cdf-af46-c2b2ff693b89', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1136507a0>]}
[0m11:54:53.891655 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:54:53.892270 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:54:53.892831 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:54:53.893377 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:54:53.893919 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:54:53.894461 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:54:53.895002 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:54:53.897542 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.9848572, "process_in_blocks": "0", "process_kernel_time": 0.288298, "process_mem_max_rss": "121217024", "process_out_blocks": "0", "process_user_time": 2.460888}
[0m11:54:53.898188 [debug] [MainThread]: Command `dbt ls` succeeded at 11:54:53.898057 after 0.99 seconds
[0m11:54:53.898670 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113082ae0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1134c42c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1132a2fc0>]}
[0m11:54:53.899102 [debug] [MainThread]: Flushing usage events
[0m11:54:54.346633 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:55:31.038814 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106ce34a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107676ba0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1076766f0>]}


============================== 11:55:31.044154 | 8c9c11f4-52d3-4f3b-832f-5513ca2e76b7 ==============================
[0m11:55:31.044154 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:55:31.044878 [debug] [MainThread]: running dbt with arguments {'quiet': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'static_parser': 'True', 'introspect': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'no_print': 'None', 'write_json': 'True', 'partial_parse': 'True', 'log_cache_events': 'False', 'target_path': 'None', 'warn_error': 'None', 'cache_selected_only': 'False', 'empty': 'None', 'fail_fast': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'send_anonymous_usage_stats': 'True', 'version_check': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'log_format': 'default', 'indirect_selection': 'eager', 'use_experimental_parser': 'False', 'debug': 'False', 'printer_width': '80', 'use_colors': 'True'}
[0m11:55:31.347699 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '8c9c11f4-52d3-4f3b-832f-5513ca2e76b7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10783f3b0>]}
[0m11:55:31.435080 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '8c9c11f4-52d3-4f3b-832f-5513ca2e76b7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105416c60>]}
[0m11:55:31.436997 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:55:31.585585 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:55:31.738948 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:55:31.739421 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:55:31.782236 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '8c9c11f4-52d3-4f3b-832f-5513ca2e76b7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1078c5fa0>]}
[0m11:55:31.866398 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:55:31.870470 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:55:31.885885 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '8c9c11f4-52d3-4f3b-832f-5513ca2e76b7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107c50d70>]}
[0m11:55:31.886452 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:55:31.886916 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '8c9c11f4-52d3-4f3b-832f-5513ca2e76b7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ab85c0>]}
[0m11:55:31.888218 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:55:31.888942 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:55:31.889544 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:55:31.890148 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:55:31.890764 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:55:31.891476 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:55:31.892478 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:55:31.895353 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.9535466, "process_in_blocks": "0", "process_kernel_time": 0.306227, "process_mem_max_rss": "120774656", "process_out_blocks": "0", "process_user_time": 2.5013}
[0m11:55:31.896096 [debug] [MainThread]: Command `dbt ls` succeeded at 11:55:31.895962 after 0.95 seconds
[0m11:55:31.896585 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10760bad0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106ce34a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ab85c0>]}
[0m11:55:31.897033 [debug] [MainThread]: Flushing usage events
[0m11:55:32.327453 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:57:34.892843 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114324b00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1144fef90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1144febd0>]}


============================== 11:57:34.898655 | 2a61b1e8-2b5e-4195-bf03-2e67dff1782f ==============================
[0m11:57:34.898655 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:57:34.899360 [debug] [MainThread]: running dbt with arguments {'static_parser': 'True', 'cache_selected_only': 'False', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'debug': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'write_json': 'True', 'use_experimental_parser': 'False', 'use_colors': 'True', 'log_format': 'default', 'warn_error': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'fail_fast': 'False', 'introspect': 'True', 'partial_parse': 'True', 'quiet': 'False', 'printer_width': '80', 'send_anonymous_usage_stats': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'target_path': 'None', 'version_check': 'True', 'no_print': 'None', 'empty': 'None'}
[0m11:57:35.205020 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '2a61b1e8-2b5e-4195-bf03-2e67dff1782f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11459a600>]}
[0m11:57:35.286722 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '2a61b1e8-2b5e-4195-bf03-2e67dff1782f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1145cbc50>]}
[0m11:57:35.288943 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:57:35.440235 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:57:35.587345 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:57:35.587834 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:57:35.634534 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '2a61b1e8-2b5e-4195-bf03-2e67dff1782f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11469e330>]}
[0m11:57:35.722185 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:57:35.724711 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:57:35.740693 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '2a61b1e8-2b5e-4195-bf03-2e67dff1782f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114982330>]}
[0m11:57:35.741389 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:57:35.741887 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '2a61b1e8-2b5e-4195-bf03-2e67dff1782f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1144e1220>]}
[0m11:57:35.743230 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:57:35.743955 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:57:35.744560 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:57:35.745195 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:57:35.745782 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:57:35.746420 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:57:35.747016 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:57:35.750566 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.95230234, "process_in_blocks": "0", "process_kernel_time": 0.337541, "process_mem_max_rss": "120987648", "process_out_blocks": "0", "process_user_time": 2.605902}
[0m11:57:35.751297 [debug] [MainThread]: Command `dbt ls` succeeded at 11:57:35.751155 after 0.95 seconds
[0m11:57:35.751812 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114171880>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1144febd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114324b00>]}
[0m11:57:35.752332 [debug] [MainThread]: Flushing usage events
[0m11:57:36.283246 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:57:54.970003 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dbd7aa0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e20fce0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e27aae0>]}


============================== 11:57:54.977045 | 4e729a47-2ab2-40df-8d2e-f056bb7bf8ed ==============================
[0m11:57:54.977045 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:57:54.977855 [debug] [MainThread]: running dbt with arguments {'use_colors': 'True', 'log_format': 'default', 'warn_error': 'None', 'static_parser': 'True', 'version_check': 'True', 'cache_selected_only': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'target_path': 'None', 'fail_fast': 'False', 'introspect': 'True', 'partial_parse': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'empty': 'None', 'send_anonymous_usage_stats': 'True', 'indirect_selection': 'eager', 'debug': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'printer_width': '80', 'log_cache_events': 'False', 'write_json': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'use_experimental_parser': 'False', 'quiet': 'False'}
[0m11:57:55.301924 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '4e729a47-2ab2-40df-8d2e-f056bb7bf8ed', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e20fcb0>]}
[0m11:57:55.378542 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '4e729a47-2ab2-40df-8d2e-f056bb7bf8ed', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc53200>]}
[0m11:57:55.382729 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:57:55.555630 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:57:55.733561 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:57:55.734122 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:57:55.778137 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '4e729a47-2ab2-40df-8d2e-f056bb7bf8ed', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e649160>]}
[0m11:57:55.860644 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:57:55.864112 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:57:55.904572 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '4e729a47-2ab2-40df-8d2e-f056bb7bf8ed', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e72d4c0>]}
[0m11:57:55.905309 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:57:55.905824 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '4e729a47-2ab2-40df-8d2e-f056bb7bf8ed', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e7fa5d0>]}
[0m11:57:55.907304 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:57:55.908045 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:57:55.908711 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:57:55.909366 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:57:55.910084 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:57:55.910743 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:57:55.911400 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:57:55.915136 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0418607, "process_in_blocks": "0", "process_kernel_time": 0.526066, "process_mem_max_rss": "120897536", "process_out_blocks": "0", "process_user_time": 2.886777}
[0m11:57:55.915920 [debug] [MainThread]: Command `dbt ls` succeeded at 11:57:55.915775 after 1.04 seconds
[0m11:57:55.916462 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e063440>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df6a870>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dbd7aa0>]}
[0m11:57:55.916939 [debug] [MainThread]: Flushing usage events
[0m11:57:56.368727 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:59:15.025742 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109d57da0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a42eed0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a42eb10>]}


============================== 11:59:15.032657 | 870bf454-dada-4060-ab35-5bf9240ff802 ==============================
[0m11:59:15.032657 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:59:15.033475 [debug] [MainThread]: running dbt with arguments {'no_print': 'None', 'send_anonymous_usage_stats': 'True', 'introspect': 'True', 'log_cache_events': 'False', 'indirect_selection': 'eager', 'fail_fast': 'False', 'debug': 'False', 'use_experimental_parser': 'False', 'quiet': 'False', 'version_check': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'target_path': 'None', 'static_parser': 'True', 'log_format': 'default', 'use_colors': 'True', 'printer_width': '80', 'warn_error': 'None', 'empty': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'partial_parse': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'write_json': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])'}
[0m11:59:15.345375 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '870bf454-dada-4060-ab35-5bf9240ff802', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107d24d70>]}
[0m11:59:15.425906 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '870bf454-dada-4060-ab35-5bf9240ff802', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109db2a20>]}
[0m11:59:15.429728 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:59:15.685156 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:59:15.860509 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:59:15.861072 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:59:15.910701 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '870bf454-dada-4060-ab35-5bf9240ff802', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a55c8c0>]}
[0m11:59:16.001608 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:59:16.004595 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:59:16.032407 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '870bf454-dada-4060-ab35-5bf9240ff802', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a8b22a0>]}
[0m11:59:16.033116 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:59:16.033588 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '870bf454-dada-4060-ab35-5bf9240ff802', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a914500>]}
[0m11:59:16.035041 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:59:16.035845 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:59:16.036454 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:59:16.037148 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:59:16.037780 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:59:16.038502 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:59:16.039189 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:59:16.042887 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.1113083, "process_in_blocks": "0", "process_kernel_time": 0.546012, "process_mem_max_rss": "120573952", "process_out_blocks": "0", "process_user_time": 2.960649}
[0m11:59:16.043645 [debug] [MainThread]: Command `dbt ls` succeeded at 11:59:16.043492 after 1.11 seconds
[0m11:59:16.044221 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109fe1880>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a42eb10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a42ebd0>]}
[0m11:59:16.044683 [debug] [MainThread]: Flushing usage events
[0m11:59:16.502984 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:59:51.366016 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10562bfe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1057ceae0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105ceac30>]}


============================== 11:59:51.373463 | 51901ca1-c08b-443d-af9c-4f124e438448 ==============================
[0m11:59:51.373463 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:59:51.374250 [debug] [MainThread]: running dbt with arguments {'log_cache_events': 'False', 'write_json': 'True', 'indirect_selection': 'eager', 'static_parser': 'True', 'use_colors': 'True', 'no_print': 'None', 'introspect': 'True', 'version_check': 'True', 'target_path': 'None', 'fail_fast': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'warn_error': 'None', 'log_format': 'default', 'printer_width': '80', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'use_experimental_parser': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'debug': 'False', 'quiet': 'False', 'empty': 'None', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'cache_selected_only': 'False', 'partial_parse': 'True', 'send_anonymous_usage_stats': 'True'}
[0m11:59:51.707223 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '51901ca1-c08b-443d-af9c-4f124e438448', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105eab230>]}
[0m11:59:51.796944 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '51901ca1-c08b-443d-af9c-4f124e438448', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x103632cf0>]}
[0m11:59:51.800342 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:59:51.967482 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:59:52.136088 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:59:52.136695 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:59:52.181274 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '51901ca1-c08b-443d-af9c-4f124e438448', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1060b91f0>]}
[0m11:59:52.264089 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:59:52.266645 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:59:52.302433 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '51901ca1-c08b-443d-af9c-4f124e438448', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106156840>]}
[0m11:59:52.303105 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:59:52.303595 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '51901ca1-c08b-443d-af9c-4f124e438448', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1061bda00>]}
[0m11:59:52.305104 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:59:52.305842 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:59:52.306507 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:59:52.307149 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:59:52.307724 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:59:52.308362 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:59:52.308958 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:59:52.312373 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0487564, "process_in_blocks": "0", "process_kernel_time": 0.430431, "process_mem_max_rss": "120754176", "process_out_blocks": "0", "process_user_time": 2.631716}
[0m11:59:52.313099 [debug] [MainThread]: Command `dbt ls` succeeded at 11:59:52.312957 after 1.05 seconds
[0m11:59:52.313612 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105c7b8f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105c7bc80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1060b9010>]}
[0m11:59:52.314065 [debug] [MainThread]: Flushing usage events
[0m11:59:52.740347 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:05:47.973157 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc31a00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e9b2d20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e9b2990>]}


============================== 12:05:47.981254 | f367c124-52f2-40b1-b205-1d188a322b0f ==============================
[0m12:05:47.981254 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:05:47.982245 [debug] [MainThread]: running dbt with arguments {'use_experimental_parser': 'False', 'partial_parse': 'True', 'printer_width': '80', 'static_parser': 'True', 'empty': 'None', 'send_anonymous_usage_stats': 'True', 'use_colors': 'True', 'fail_fast': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'introspect': 'True', 'log_cache_events': 'False', 'target_path': 'None', 'no_print': 'None', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'quiet': 'False', 'write_json': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'debug': 'False', 'version_check': 'True', 'warn_error': 'None', 'indirect_selection': 'eager', 'log_format': 'default', 'cache_selected_only': 'False'}
[0m12:05:48.302577 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'f367c124-52f2-40b1-b205-1d188a322b0f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e7bfb00>]}
[0m12:05:48.380031 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'f367c124-52f2-40b1-b205-1d188a322b0f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ea61070>]}
[0m12:05:48.384118 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:05:48.549875 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:05:48.740003 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 5 files changed.
[0m12:05:48.740865 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/contacts.sql
[0m12:05:48.741433 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/members.sql
[0m12:05:48.741980 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/teams.sql
[0m12:05:48.742531 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/tournaments.sql
[0m12:05:48.743020 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/officials.sql
[0m12:05:49.123475 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'f367c124-52f2-40b1-b205-1d188a322b0f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f0dbe30>]}
[0m12:05:49.204948 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:05:49.208646 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:05:49.246464 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'f367c124-52f2-40b1-b205-1d188a322b0f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f0cce30>]}
[0m12:05:49.247114 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:05:49.247570 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'f367c124-52f2-40b1-b205-1d188a322b0f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f0af980>]}
[0m12:05:49.248877 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:05:49.249550 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:05:49.250153 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:05:49.250745 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:05:49.251333 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:05:49.251960 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:05:49.252558 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:05:49.256392 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.3813257, "process_in_blocks": "0", "process_kernel_time": 0.49226, "process_mem_max_rss": "125480960", "process_out_blocks": "0", "process_user_time": 3.113819}
[0m12:05:49.257221 [debug] [MainThread]: Command `dbt ls` succeeded at 12:05:49.257056 after 1.38 seconds
[0m12:05:49.257774 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc31a00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ee36c00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e9b2c60>]}
[0m12:05:49.258264 [debug] [MainThread]: Flushing usage events
[0m12:05:49.740783 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:06:20.034865 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a222c60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a98ef00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a98eb40>]}


============================== 12:06:20.042960 | 337148c2-841c-4011-9b1e-d3e62ec87900 ==============================
[0m12:06:20.042960 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:06:20.043793 [debug] [MainThread]: running dbt with arguments {'fail_fast': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'target_path': 'None', 'introspect': 'True', 'indirect_selection': 'eager', 'log_format': 'default', 'static_parser': 'True', 'write_json': 'True', 'debug': 'False', 'use_experimental_parser': 'False', 'cache_selected_only': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'version_check': 'True', 'no_print': 'None', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_cache_events': 'False', 'send_anonymous_usage_stats': 'True', 'empty': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'quiet': 'False', 'warn_error': 'None', 'partial_parse': 'True', 'printer_width': '80', 'use_colors': 'True'}
[0m12:06:20.362360 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '337148c2-841c-4011-9b1e-d3e62ec87900', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a9706b0>]}
[0m12:06:20.440452 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '337148c2-841c-4011-9b1e-d3e62ec87900', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a4120f0>]}
[0m12:06:20.444576 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:06:20.603400 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:06:20.781909 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:06:20.782468 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:06:20.827246 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '337148c2-841c-4011-9b1e-d3e62ec87900', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ab567b0>]}
[0m12:06:20.908379 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:06:20.910902 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:06:20.948667 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '337148c2-841c-4011-9b1e-d3e62ec87900', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10af2f890>]}
[0m12:06:20.949305 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:06:20.949770 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '337148c2-841c-4011-9b1e-d3e62ec87900', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10af5db80>]}
[0m12:06:20.951103 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:06:20.951801 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:06:20.952440 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:06:20.953039 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:06:20.953629 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:06:20.954255 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:06:20.954935 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:06:20.958605 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.021592, "process_in_blocks": "0", "process_kernel_time": 0.490471, "process_mem_max_rss": "121405440", "process_out_blocks": "0", "process_user_time": 2.853127}
[0m12:06:20.959401 [debug] [MainThread]: Command `dbt ls` succeeded at 12:06:20.959250 after 1.02 seconds
[0m12:06:20.959941 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10af5db80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10af5ddc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10adcc350>]}
[0m12:06:20.960405 [debug] [MainThread]: Flushing usage events
[0m12:06:21.394029 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:06:55.546035 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108df3d40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109de94f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aba2930>]}


============================== 12:06:55.551428 | 5a46146f-5996-498f-9c01-507ebcdf9792 ==============================
[0m12:06:55.551428 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:06:55.552213 [debug] [MainThread]: running dbt with arguments {'static_parser': 'True', 'log_format': 'default', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'fail_fast': 'False', 'warn_error': 'None', 'target_path': 'None', 'write_json': 'True', 'use_colors': 'True', 'no_print': 'None', 'indirect_selection': 'eager', 'empty': 'False', 'quiet': 'False', 'send_anonymous_usage_stats': 'True', 'introspect': 'True', 'use_experimental_parser': 'False', 'cache_selected_only': 'False', 'invocation_command': 'dbt run --target prod', 'partial_parse': 'True', 'printer_width': '80', 'version_check': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'debug': 'False', 'log_cache_events': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs'}
[0m12:06:55.867451 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '5a46146f-5996-498f-9c01-507ebcdf9792', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108494f80>]}
[0m12:06:55.953034 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '5a46146f-5996-498f-9c01-507ebcdf9792', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a562de0>]}
[0m12:06:55.955397 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:06:56.110074 [debug] [MainThread]: checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, vars: {}, profile: , target: prod, version: 1.10.9
[0m12:06:56.206814 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m12:06:56.207424 [debug] [MainThread]: previous checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, current checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23
[0m12:06:56.207917 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '5a46146f-5996-498f-9c01-507ebcdf9792', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a5253d0>]}
[0m12:06:57.720721 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '5a46146f-5996-498f-9c01-507ebcdf9792', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b2911c0>]}
[0m12:06:57.796033 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:06:57.798139 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:06:57.815807 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '5a46146f-5996-498f-9c01-507ebcdf9792', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10adbc080>]}
[0m12:06:57.816382 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:06:57.816803 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '5a46146f-5996-498f-9c01-507ebcdf9792', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109d69010>]}
[0m12:06:57.818925 [info ] [MainThread]: 
[0m12:06:57.819346 [info ] [MainThread]: Concurrency: 1 threads (target='prod')
[0m12:06:57.819718 [info ] [MainThread]: 
[0m12:06:57.820291 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m12:06:57.827313 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m12:06:57.916292 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m12:06:57.916872 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m12:06:57.917318 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m12:06:58.017306 [debug] [ThreadPool]: SQL status: OK in 0.100 seconds
[0m12:06:58.020243 [debug] [ThreadPool]: On list_memory: Close
[0m12:06:58.023227 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m12:06:58.023897 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m12:06:58.024303 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:06:58.026725 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:06:58.028248 [debug] [ThreadPool]: On list_memory: Close
[0m12:06:58.029002 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_references)
[0m12:06:58.030012 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "references"
"
[0m12:06:58.037556 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:06:58.038091 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m12:06:58.038472 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:06:58.041629 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m12:06:58.043323 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:06:58.043781 [debug] [ThreadPool]: On create_memory_references: BEGIN
[0m12:06:58.044433 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:06:58.044800 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:06:58.045153 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_references"} */

    
    
        create schema if not exists memory."references"
    
[0m12:06:58.047919 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:06:58.048996 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m12:06:58.049398 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:06:58.049768 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m12:06:58.050952 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m12:06:58.051446 [debug] [ThreadPool]: On create_memory_references: Close
[0m12:06:58.052191 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_references, now create_memory_fct_salesforce)
[0m12:06:58.052781 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m12:06:58.055038 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:06:58.055460 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m12:06:58.055827 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:06:58.058009 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:06:58.059799 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:06:58.060218 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m12:06:58.060833 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:06:58.061209 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:06:58.061592 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m12:06:58.062221 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:06:58.063221 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m12:06:58.063613 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:06:58.063988 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m12:06:58.064563 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:06:58.064943 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m12:06:58.066538 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_references)
[0m12:06:58.072755 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m12:06:58.073196 [debug] [ThreadPool]: On list_memory_references: BEGIN
[0m12:06:58.073537 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:06:58.075134 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:06:58.075532 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m12:06:58.075904 [debug] [ThreadPool]: On list_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'references'
    and lower(table_catalog) = 'memory'
  
[0m12:06:58.113589 [debug] [ThreadPool]: SQL status: OK in 0.037 seconds
[0m12:06:58.115982 [debug] [ThreadPool]: On list_memory_references: ROLLBACK
[0m12:06:58.118816 [debug] [ThreadPool]: Failed to rollback 'list_memory_references'
[0m12:06:58.119295 [debug] [ThreadPool]: On list_memory_references: Close
[0m12:06:58.119952 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_references, now list_memory_fct_salesforce)
[0m12:06:58.122043 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m12:06:58.122612 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m12:06:58.122993 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:06:58.124794 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:06:58.125217 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m12:06:58.125615 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m12:06:58.129568 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m12:06:58.131072 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m12:06:58.132126 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m12:06:58.132480 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m12:06:58.133138 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '5a46146f-5996-498f-9c01-507ebcdf9792', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108542b40>]}
[0m12:06:58.133676 [debug] [MainThread]: Using duckdb connection "master"
[0m12:06:58.134039 [debug] [MainThread]: On master: BEGIN
[0m12:06:58.134381 [debug] [MainThread]: Opening a new connection, currently in state init
[0m12:06:58.135956 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m12:06:58.136343 [debug] [MainThread]: On master: COMMIT
[0m12:06:58.136715 [debug] [MainThread]: Using duckdb connection "master"
[0m12:06:58.137064 [debug] [MainThread]: On master: COMMIT
[0m12:06:58.137624 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m12:06:58.138010 [debug] [MainThread]: On master: Close
[0m12:06:58.142342 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m12:06:58.142993 [info ] [Thread-1 (]: 1 of 7 START sql table model references.states ................................. [RUN]
[0m12:06:58.143533 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m12:06:58.143953 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m12:06:58.154113 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m12:06:58.155316 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m12:06:58.193063 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m12:06:58.194829 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:06:58.195400 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m12:06:58.195827 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:06:58.197538 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:06:58.197987 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:06:58.198636 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m12:06:58.251485 [debug] [Thread-1 (]: SQL status: OK in 0.052 seconds
[0m12:06:58.258587 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:06:58.259123 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */
alter table memory."references"."states__dbt_tmp" rename to "states"
[0m12:06:58.261261 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:06:58.270091 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:06:58.270647 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:06:58.289089 [debug] [Thread-1 (]: SQL status: OK in 0.018 seconds
[0m12:06:58.301020 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m12:06:58.301563 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:06:58.302013 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m12:06:58.303154 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:06:58.309266 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:06:58.309760 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

      drop table if exists memory."references"."states__dbt_backup" cascade
    
[0m12:06:58.310532 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:06:58.313204 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m12:06:58.315736 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5a46146f-5996-498f-9c01-507ebcdf9792', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b2e1ca0>]}
[0m12:06:58.316682 [info ] [Thread-1 (]: 1 of 7 OK created sql table model references.states ............................ [[32mOK[0m in 0.17s]
[0m12:06:58.317475 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m12:06:58.317982 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m12:06:58.318549 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m12:06:58.319307 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m12:06:58.319778 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m12:06:58.324816 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m12:06:58.325946 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m12:06:58.329860 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m12:06:58.331398 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:06:58.331959 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m12:06:58.332382 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:06:58.333976 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:06:58.334399 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:06:58.334934 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m12:06:58.929215 [debug] [Thread-1 (]: SQL status: OK in 0.594 seconds
[0m12:06:58.933673 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:06:58.934278 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m12:06:58.935305 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:06:58.941248 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:06:58.941837 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:06:58.946256 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m12:06:58.947974 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m12:06:58.948508 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:06:58.948995 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m12:06:58.950075 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:06:58.953212 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:06:58.953785 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m12:06:58.954686 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:06:58.956680 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m12:06:58.957519 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5a46146f-5996-498f-9c01-507ebcdf9792', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b39bfe0>]}
[0m12:06:58.958330 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.64s]
[0m12:06:58.959380 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m12:06:58.959871 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m12:06:58.960418 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m12:06:58.961045 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m12:06:58.961485 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m12:06:58.971430 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m12:06:58.972977 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m12:06:58.976749 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m12:06:58.977682 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:06:58.978115 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m12:06:58.978565 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:06:58.980237 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:06:58.980673 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:06:58.981375 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m12:07:05.145589 [debug] [Thread-1 (]: SQL status: OK in 6.163 seconds
[0m12:07:05.148967 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:07:05.149468 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m12:07:05.150313 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:07:05.155194 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:07:05.155779 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:07:05.405001 [debug] [Thread-1 (]: SQL status: OK in 0.249 seconds
[0m12:07:05.407606 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m12:07:05.408280 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:07:05.408939 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m12:07:05.420550 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m12:07:05.423613 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:07:05.424123 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m12:07:05.424924 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:07:05.426639 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m12:07:05.427366 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5a46146f-5996-498f-9c01-507ebcdf9792', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b7f55b0>]}
[0m12:07:05.428117 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.47s]
[0m12:07:05.428809 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m12:07:05.429678 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m12:07:05.430246 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m12:07:05.430824 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m12:07:05.431263 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m12:07:05.436717 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m12:07:05.437593 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m12:07:05.441801 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m12:07:05.443705 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:07:05.444382 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m12:07:05.445195 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:07:05.447540 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:07:05.448260 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:07:05.449096 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        cast(ol.is_deleted as boolean) as is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        cast(o.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m12:07:06.544645 [debug] [Thread-1 (]: SQL status: OK in 1.095 seconds
[0m12:07:06.548244 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:07:06.548766 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m12:07:06.549647 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:07:06.555646 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:07:06.556437 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:07:06.561744 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m12:07:06.563400 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m12:07:06.563965 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:07:06.564407 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m12:07:06.567073 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:07:06.570856 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:07:06.571710 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m12:07:06.572885 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:07:06.574935 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m12:07:06.576205 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5a46146f-5996-498f-9c01-507ebcdf9792', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b7bfc50>]}
[0m12:07:06.577034 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 1.15s]
[0m12:07:06.577947 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m12:07:06.578474 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m12:07:06.579110 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m12:07:06.579841 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m12:07:06.580309 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m12:07:06.587026 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m12:07:06.588436 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m12:07:06.595031 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m12:07:06.598011 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:07:06.598793 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m12:07:06.599332 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:07:06.602210 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:07:06.603008 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:07:06.603773 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        cast(t.is_deleted as boolean) as is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m12:07:07.072742 [debug] [Thread-1 (]: SQL status: OK in 0.467 seconds
[0m12:07:07.077180 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:07:07.077712 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m12:07:07.078618 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:07:07.086284 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:07:07.086966 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:07:07.090270 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:07:07.091872 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m12:07:07.092459 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:07:07.092925 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m12:07:07.094671 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:07:07.098116 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:07:07.098912 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m12:07:07.100174 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:07:07.102476 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m12:07:07.103461 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5a46146f-5996-498f-9c01-507ebcdf9792', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b822ab0>]}
[0m12:07:07.104424 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.52s]
[0m12:07:07.105599 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m12:07:07.106868 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m12:07:07.107558 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m12:07:07.108121 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m12:07:07.108566 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m12:07:07.113291 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m12:07:07.115108 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m12:07:07.119128 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m12:07:07.120167 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:07:07.120677 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m12:07:07.121174 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:07:07.123528 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:07:07.124194 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:07:07.124851 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        cast(m.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m12:07:08.981311 [debug] [Thread-1 (]: SQL status: OK in 1.856 seconds
[0m12:07:08.984765 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:07:08.985279 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m12:07:08.986250 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:07:08.991774 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:07:08.992324 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:07:08.998601 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m12:07:09.000352 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m12:07:09.000859 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:07:09.001362 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m12:07:09.003446 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:07:09.006989 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:07:09.007580 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m12:07:09.008456 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:07:09.010098 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m12:07:09.010828 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5a46146f-5996-498f-9c01-507ebcdf9792', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8263c0>]}
[0m12:07:09.011544 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.90s]
[0m12:07:09.012295 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m12:07:09.012770 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m12:07:09.013299 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m12:07:09.013820 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m12:07:09.014247 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m12:07:09.019867 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m12:07:09.021374 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m12:07:09.025592 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m12:07:09.027351 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:07:09.027896 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m12:07:09.028314 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:07:09.030070 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:07:09.030526 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:07:09.031496 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m12:07:10.892818 [debug] [Thread-1 (]: SQL status: OK in 1.860 seconds
[0m12:07:10.896295 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:07:10.896770 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m12:07:10.897615 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:07:10.902763 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:07:10.903285 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:07:10.906599 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:07:10.908536 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m12:07:10.909120 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:07:10.909722 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m12:07:10.910661 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:07:10.913435 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:07:10.913963 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m12:07:10.915333 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:07:10.917668 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m12:07:10.918339 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5a46146f-5996-498f-9c01-507ebcdf9792', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109e4ce90>]}
[0m12:07:10.919137 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.90s]
[0m12:07:10.919831 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m12:07:10.921114 [debug] [MainThread]: Using duckdb connection "master"
[0m12:07:10.921580 [debug] [MainThread]: On master: BEGIN
[0m12:07:10.921977 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m12:07:10.923593 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m12:07:10.923991 [debug] [MainThread]: On master: COMMIT
[0m12:07:10.924476 [debug] [MainThread]: Using duckdb connection "master"
[0m12:07:10.924912 [debug] [MainThread]: On master: COMMIT
[0m12:07:10.925538 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m12:07:10.925924 [debug] [MainThread]: On master: Close
[0m12:07:10.926862 [debug] [MainThread]: Connection 'master' was properly closed.
[0m12:07:10.927331 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m12:07:10.927831 [info ] [MainThread]: 
[0m12:07:10.928271 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 13.11 seconds (13.11s).
[0m12:07:10.930101 [debug] [MainThread]: Command end result
[0m12:07:10.961643 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:07:10.963805 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:07:10.972222 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m12:07:10.972670 [info ] [MainThread]: 
[0m12:07:10.973327 [info ] [MainThread]: [32mCompleted successfully[0m
[0m12:07:10.973825 [info ] [MainThread]: 
[0m12:07:10.974334 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m12:07:10.977764 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 15.522374, "process_in_blocks": "0", "process_kernel_time": 1.044182, "process_mem_max_rss": "388124672", "process_out_blocks": "0", "process_user_time": 9.625605}
[0m12:07:10.978452 [debug] [MainThread]: Command `dbt run` succeeded at 12:07:10.978324 after 15.52 seconds
[0m12:07:10.979108 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aba2450>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b2d0c80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b01ef90>]}
[0m12:07:10.979638 [debug] [MainThread]: Flushing usage events
[0m12:07:11.544399 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:07:52.754734 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fd618e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1102d8f20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b127e0>]}


============================== 12:07:52.765247 | c09f5290-f01a-4ede-a6e5-16f9313541bf ==============================
[0m12:07:52.765247 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:07:52.766327 [debug] [MainThread]: running dbt with arguments {'log_format': 'default', 'partial_parse': 'True', 'empty': 'False', 'warn_error': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'version_check': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'send_anonymous_usage_stats': 'True', 'introspect': 'True', 'write_json': 'True', 'indirect_selection': 'eager', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_cache_events': 'False', 'use_colors': 'True', 'printer_width': '80', 'use_experimental_parser': 'False', 'quiet': 'False', 'target_path': 'None', 'no_print': 'None', 'fail_fast': 'False', 'debug': 'False', 'invocation_command': 'dbt run --target prod', 'cache_selected_only': 'False', 'static_parser': 'True'}
[0m12:07:53.194163 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'c09f5290-f01a-4ede-a6e5-16f9313541bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b12180>]}
[0m12:07:53.280625 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'c09f5290-f01a-4ede-a6e5-16f9313541bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11045da30>]}
[0m12:07:53.282640 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:07:53.449875 [debug] [MainThread]: checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, vars: {}, profile: , target: prod, version: 1.10.9
[0m12:07:53.579287 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:07:53.580394 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:07:53.638921 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'c09f5290-f01a-4ede-a6e5-16f9313541bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110be6240>]}
[0m12:07:53.760355 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:07:53.762973 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:07:53.783961 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'c09f5290-f01a-4ede-a6e5-16f9313541bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1110dd610>]}
[0m12:07:53.784566 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:07:53.785001 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'c09f5290-f01a-4ede-a6e5-16f9313541bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110c25250>]}
[0m12:07:53.787731 [info ] [MainThread]: 
[0m12:07:53.788393 [info ] [MainThread]: Concurrency: 1 threads (target='prod')
[0m12:07:53.789478 [info ] [MainThread]: 
[0m12:07:53.790570 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m12:07:53.797775 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m12:07:53.868780 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m12:07:53.869273 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m12:07:53.869657 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m12:07:53.931580 [debug] [ThreadPool]: SQL status: OK in 0.062 seconds
[0m12:07:53.933275 [debug] [ThreadPool]: On list_memory: Close
[0m12:07:53.935980 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m12:07:53.936524 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m12:07:53.936999 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:07:53.939300 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:07:53.940859 [debug] [ThreadPool]: On list_memory: Close
[0m12:07:53.941627 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_salesforce)
[0m12:07:53.942174 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m12:07:53.951072 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:07:53.951552 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m12:07:53.951920 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:07:53.954153 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:07:53.956067 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:07:53.956632 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m12:07:53.957350 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:07:53.957724 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:07:53.958080 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m12:07:53.958787 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:07:53.959965 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m12:07:53.960554 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:07:53.960974 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m12:07:53.961607 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:07:53.961996 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m12:07:53.962681 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now create_memory_references)
[0m12:07:53.963207 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "references"
"
[0m12:07:53.965430 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:07:53.965833 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m12:07:53.966189 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:07:53.968441 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:07:53.970159 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:07:53.970672 [debug] [ThreadPool]: On create_memory_references: BEGIN
[0m12:07:53.971493 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:07:53.971893 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:07:53.972268 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_references"} */

    
    
        create schema if not exists memory."references"
    
[0m12:07:53.972956 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:07:53.973981 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m12:07:53.974364 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:07:53.974713 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m12:07:53.975343 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:07:53.975792 [debug] [ThreadPool]: On create_memory_references: Close
[0m12:07:53.977458 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_references, now list_memory_fct_salesforce)
[0m12:07:53.983627 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m12:07:53.984073 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m12:07:53.984516 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:07:53.986183 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:07:53.986602 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m12:07:53.987022 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m12:07:54.004249 [debug] [ThreadPool]: SQL status: OK in 0.017 seconds
[0m12:07:54.005906 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m12:07:54.009258 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m12:07:54.009719 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m12:07:54.010370 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now list_memory_references)
[0m12:07:54.012639 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m12:07:54.013138 [debug] [ThreadPool]: On list_memory_references: BEGIN
[0m12:07:54.013527 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:07:54.015169 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:07:54.015580 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m12:07:54.015971 [debug] [ThreadPool]: On list_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'references'
    and lower(table_catalog) = 'memory'
  
[0m12:07:54.020298 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m12:07:54.022031 [debug] [ThreadPool]: On list_memory_references: ROLLBACK
[0m12:07:54.023075 [debug] [ThreadPool]: Failed to rollback 'list_memory_references'
[0m12:07:54.023452 [debug] [ThreadPool]: On list_memory_references: Close
[0m12:07:54.024119 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'c09f5290-f01a-4ede-a6e5-16f9313541bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110c26780>]}
[0m12:07:54.024658 [debug] [MainThread]: Using duckdb connection "master"
[0m12:07:54.025021 [debug] [MainThread]: On master: BEGIN
[0m12:07:54.025437 [debug] [MainThread]: Opening a new connection, currently in state init
[0m12:07:54.026988 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m12:07:54.027376 [debug] [MainThread]: On master: COMMIT
[0m12:07:54.027752 [debug] [MainThread]: Using duckdb connection "master"
[0m12:07:54.028103 [debug] [MainThread]: On master: COMMIT
[0m12:07:54.028646 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m12:07:54.029044 [debug] [MainThread]: On master: Close
[0m12:07:54.032247 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m12:07:54.032936 [info ] [Thread-1 (]: 1 of 7 START sql table model references.states ................................. [RUN]
[0m12:07:54.033581 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_references, now model.usawfl.states)
[0m12:07:54.034047 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m12:07:54.041893 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m12:07:54.042733 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m12:07:54.080633 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m12:07:54.081557 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:07:54.081998 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m12:07:54.082396 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:07:54.083999 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:07:54.084420 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:07:54.084976 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m12:07:54.115926 [debug] [Thread-1 (]: SQL status: OK in 0.030 seconds
[0m12:07:54.122887 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:07:54.123388 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */
alter table memory."references"."states__dbt_tmp" rename to "states"
[0m12:07:54.124233 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:07:54.132541 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:07:54.133046 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:07:54.135005 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:07:54.146148 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m12:07:54.146661 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:07:54.147080 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m12:07:54.148106 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:07:54.154128 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:07:54.154642 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

      drop table if exists memory."references"."states__dbt_backup" cascade
    
[0m12:07:54.155489 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:07:54.158216 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m12:07:54.160376 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c09f5290-f01a-4ede-a6e5-16f9313541bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fdbd0d0>]}
[0m12:07:54.161182 [info ] [Thread-1 (]: 1 of 7 OK created sql table model references.states ............................ [[32mOK[0m in 0.13s]
[0m12:07:54.161961 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m12:07:54.162477 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m12:07:54.163056 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m12:07:54.163713 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m12:07:54.164194 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m12:07:54.169835 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m12:07:54.170721 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m12:07:54.176494 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m12:07:54.177376 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:07:54.177821 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m12:07:54.178225 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:07:54.179892 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:07:54.180343 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:07:54.181003 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as varchar) as created,
        cast(_dlt_processed_utc as varchar) as processed,
        cast(system_modstamp as varchar) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m12:07:54.628163 [debug] [Thread-1 (]: SQL status: OK in 0.446 seconds
[0m12:07:54.632331 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:07:54.632902 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m12:07:54.633733 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:07:54.639706 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:07:54.640246 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:07:54.642624 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:07:54.644101 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m12:07:54.644602 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:07:54.645299 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m12:07:54.646400 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:07:54.648968 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:07:54.649408 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m12:07:54.650124 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:07:54.651599 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m12:07:54.652319 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c09f5290-f01a-4ede-a6e5-16f9313541bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11156c4a0>]}
[0m12:07:54.653563 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.49s]
[0m12:07:54.654523 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m12:07:54.655025 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m12:07:54.655702 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m12:07:54.656302 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m12:07:54.656743 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m12:07:54.672836 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m12:07:54.673791 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m12:07:54.678737 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m12:07:54.679698 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:07:54.680134 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m12:07:54.680538 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:07:54.682151 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:07:54.682577 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:07:54.683269 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as varchar) as created,
        cast(c._dlt_processed_utc as varchar) as processed,
        cast(c.system_modstamp as varchar) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m12:08:01.091245 [debug] [Thread-1 (]: SQL status: OK in 6.407 seconds
[0m12:08:01.094594 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:08:01.095174 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m12:08:01.096167 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:08:01.101359 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:08:01.101860 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:08:01.304010 [debug] [Thread-1 (]: SQL status: OK in 0.202 seconds
[0m12:08:01.305599 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m12:08:01.306053 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:08:01.306459 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m12:08:01.312367 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m12:08:01.315398 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:08:01.315917 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m12:08:01.316778 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:08:01.318329 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m12:08:01.318978 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c09f5290-f01a-4ede-a6e5-16f9313541bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1114683e0>]}
[0m12:08:01.319694 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.66s]
[0m12:08:01.320378 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m12:08:01.321239 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m12:08:01.321840 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m12:08:01.322442 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m12:08:01.322879 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m12:08:01.328480 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m12:08:01.329523 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m12:08:01.333427 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m12:08:01.334566 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:08:01.335054 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m12:08:01.335908 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:08:01.339782 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m12:08:01.340536 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:08:01.341202 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        cast(ol.is_deleted as boolean) as is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        cast(o.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as varchar) as created,
        cast(o._dlt_processed_utc as varchar) as processed,
        cast(o.system_modstamp as varchar) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m12:08:02.254205 [debug] [Thread-1 (]: SQL status: OK in 0.912 seconds
[0m12:08:02.257847 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:08:02.258315 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m12:08:02.259202 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:08:02.264075 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:08:02.264589 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:08:02.267904 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:08:02.271556 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m12:08:02.272091 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:08:02.272508 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m12:08:02.274981 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:08:02.277964 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:08:02.278474 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m12:08:02.279295 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:08:02.280855 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m12:08:02.281492 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c09f5290-f01a-4ede-a6e5-16f9313541bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1115913a0>]}
[0m12:08:02.282186 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 0.96s]
[0m12:08:02.282861 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m12:08:02.283324 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m12:08:02.283844 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m12:08:02.284406 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m12:08:02.284842 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m12:08:02.288432 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m12:08:02.289495 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m12:08:02.293709 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m12:08:02.294696 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:08:02.295163 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m12:08:02.295589 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:08:02.298766 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:08:02.299364 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:08:02.299901 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        cast(t.is_deleted as boolean) as is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as varchar) as created,
        cast(t._dlt_processed_utc as varchar) as processed,
        cast(t.system_modstamp as varchar) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m12:08:02.772412 [debug] [Thread-1 (]: SQL status: OK in 0.472 seconds
[0m12:08:02.776369 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:08:02.776912 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m12:08:02.778036 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:08:02.783396 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:08:02.783896 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:08:02.787068 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:08:02.788644 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m12:08:02.789116 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:08:02.789545 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m12:08:02.790872 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:08:02.793572 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:08:02.794027 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m12:08:02.794781 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:08:02.796401 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m12:08:02.797229 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c09f5290-f01a-4ede-a6e5-16f9313541bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11150ee10>]}
[0m12:08:02.798034 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.51s]
[0m12:08:02.799099 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m12:08:02.800415 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m12:08:02.801259 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m12:08:02.802010 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m12:08:02.802543 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m12:08:02.808472 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m12:08:02.809970 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m12:08:02.817048 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m12:08:02.818142 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:08:02.818701 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m12:08:02.819304 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:08:02.822491 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:08:02.823645 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:08:02.824480 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        cast(m.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as varchar) as created,
        cast(m._dlt_processed_utc as varchar) as processed,
        cast(m.system_modstamp as varchar) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m12:08:04.594320 [debug] [Thread-1 (]: SQL status: OK in 1.769 seconds
[0m12:08:04.597884 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:08:04.598406 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m12:08:04.599414 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:08:04.606788 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:08:04.607458 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:08:04.613904 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m12:08:04.615705 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m12:08:04.616208 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:08:04.616653 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m12:08:04.620344 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:08:04.623936 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:08:04.624465 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m12:08:04.625371 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:08:04.627110 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m12:08:04.627808 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c09f5290-f01a-4ede-a6e5-16f9313541bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1114f0c80>]}
[0m12:08:04.628570 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.83s]
[0m12:08:04.629286 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m12:08:04.629832 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m12:08:04.630423 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m12:08:04.631222 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m12:08:04.631785 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m12:08:04.638983 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m12:08:04.640169 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m12:08:04.648041 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m12:08:04.649271 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:08:04.649869 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m12:08:04.650495 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:08:04.652371 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:08:04.652918 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:08:04.654460 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m12:08:06.524301 [debug] [Thread-1 (]: SQL status: OK in 1.868 seconds
[0m12:08:06.606470 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:08:06.607209 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m12:08:06.608449 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:08:06.615463 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:08:06.616234 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:08:06.619690 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:08:06.621722 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m12:08:06.622614 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:08:06.623223 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m12:08:06.624389 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:08:06.627730 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:08:06.628320 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m12:08:06.629445 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:08:06.631587 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m12:08:06.632490 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c09f5290-f01a-4ede-a6e5-16f9313541bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110c4a690>]}
[0m12:08:06.633408 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 2.00s]
[0m12:08:06.634300 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m12:08:06.635841 [debug] [MainThread]: Using duckdb connection "master"
[0m12:08:06.636339 [debug] [MainThread]: On master: BEGIN
[0m12:08:06.636779 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m12:08:06.638804 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m12:08:06.639288 [debug] [MainThread]: On master: COMMIT
[0m12:08:06.639743 [debug] [MainThread]: Using duckdb connection "master"
[0m12:08:06.640165 [debug] [MainThread]: On master: COMMIT
[0m12:08:06.641465 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m12:08:06.642074 [debug] [MainThread]: On master: Close
[0m12:08:06.642785 [debug] [MainThread]: Connection 'master' was properly closed.
[0m12:08:06.643596 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m12:08:06.644342 [info ] [MainThread]: 
[0m12:08:06.644933 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.85 seconds (12.85s).
[0m12:08:06.648000 [debug] [MainThread]: Command end result
[0m12:08:06.681239 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:08:06.687324 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:08:06.698596 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m12:08:06.699112 [info ] [MainThread]: 
[0m12:08:06.699622 [info ] [MainThread]: [32mCompleted successfully[0m
[0m12:08:06.700068 [info ] [MainThread]: 
[0m12:08:06.700552 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m12:08:06.704118 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 14.059498, "process_in_blocks": "0", "process_kernel_time": 1.118145, "process_mem_max_rss": "383004672", "process_out_blocks": "0", "process_user_time": 8.814556}
[0m12:08:06.704861 [debug] [MainThread]: Command `dbt run` succeeded at 12:08:06.704720 after 14.06 seconds
[0m12:08:06.705401 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b129f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fdbdca0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fdbeba0>]}
[0m12:08:06.705903 [debug] [MainThread]: Flushing usage events
[0m12:08:07.238883 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:08:15.774490 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ec5d3a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f386d20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f386990>]}


============================== 12:08:15.783313 | cd20ea0e-e35e-4ef5-ae53-2f580110b2d4 ==============================
[0m12:08:15.783313 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:08:15.784478 [debug] [MainThread]: running dbt with arguments {'debug': 'False', 'indirect_selection': 'eager', 'version_check': 'True', 'printer_width': '80', 'use_experimental_parser': 'False', 'log_format': 'default', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'empty': 'None', 'warn_error': 'None', 'partial_parse': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'cache_selected_only': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'target_path': 'None', 'static_parser': 'True', 'write_json': 'True', 'log_cache_events': 'False', 'use_colors': 'True', 'quiet': 'False', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'fail_fast': 'False', 'send_anonymous_usage_stats': 'True', 'no_print': 'None'}
[0m12:08:16.097300 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'cd20ea0e-e35e-4ef5-ae53-2f580110b2d4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ccf51f0>]}
[0m12:08:16.176124 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'cd20ea0e-e35e-4ef5-ae53-2f580110b2d4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f4b66c0>]}
[0m12:08:16.179547 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:08:16.346481 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:08:16.458086 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m12:08:16.475325 [debug] [MainThread]: previous checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, current checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e
[0m12:08:16.476357 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'cd20ea0e-e35e-4ef5-ae53-2f580110b2d4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f85a090>]}
[0m12:08:17.983956 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'cd20ea0e-e35e-4ef5-ae53-2f580110b2d4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fa9c200>]}
[0m12:08:18.064025 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:08:18.067748 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:08:18.106157 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'cd20ea0e-e35e-4ef5-ae53-2f580110b2d4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fb300b0>]}
[0m12:08:18.106827 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:08:18.107314 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'cd20ea0e-e35e-4ef5-ae53-2f580110b2d4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fa8f8c0>]}
[0m12:08:18.108713 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:08:18.109463 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:08:18.110136 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:08:18.110809 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:08:18.111406 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:08:18.112000 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:08:18.112595 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:08:18.116221 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 2.4320493, "process_in_blocks": "0", "process_kernel_time": 0.46849, "process_mem_max_rss": "125624320", "process_out_blocks": "0", "process_user_time": 4.088724}
[0m12:08:18.116931 [debug] [MainThread]: Command `dbt ls` succeeded at 12:08:18.116798 after 2.43 seconds
[0m12:08:18.117453 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e6b9c40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f9ae1b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f386ab0>]}
[0m12:08:18.117923 [debug] [MainThread]: Flushing usage events
[0m12:08:18.551556 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:12:26.759849 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10541d5e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106142ea0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106142b10>]}


============================== 12:12:26.765247 | caa4b3f3-207d-4d54-a319-9ef95c6cd610 ==============================
[0m12:12:26.765247 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:12:26.765949 [debug] [MainThread]: running dbt with arguments {'quiet': 'False', 'use_colors': 'True', 'partial_parse': 'True', 'indirect_selection': 'eager', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'invocation_command': 'dbt ls --resource-type model --output json', 'fail_fast': 'False', 'debug': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'introspect': 'True', 'log_cache_events': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'cache_selected_only': 'False', 'use_experimental_parser': 'False', 'printer_width': '80', 'target_path': 'None', 'static_parser': 'True', 'warn_error': 'None', 'log_format': 'default', 'write_json': 'True', 'version_check': 'True', 'no_print': 'None', 'send_anonymous_usage_stats': 'True', 'empty': 'None'}
[0m12:12:27.079136 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'caa4b3f3-207d-4d54-a319-9ef95c6cd610', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1061bf890>]}
[0m12:12:27.156092 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'caa4b3f3-207d-4d54-a319-9ef95c6cd610', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105466a20>]}
[0m12:12:27.158164 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:12:27.312820 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:12:27.439921 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:12:27.440410 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:12:27.483718 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'caa4b3f3-207d-4d54-a319-9ef95c6cd610', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1065208c0>]}
[0m12:12:27.566998 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:12:27.569735 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:12:27.584586 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'caa4b3f3-207d-4d54-a319-9ef95c6cd610', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106609a90>]}
[0m12:12:27.585184 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:12:27.585602 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'caa4b3f3-207d-4d54-a319-9ef95c6cd610', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1066e7020>]}
[0m12:12:27.586881 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:12:27.587514 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:12:27.588070 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:12:27.588615 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:12:27.589154 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:12:27.589700 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:12:27.590249 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:12:27.592895 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.92773, "process_in_blocks": "0", "process_kernel_time": 0.305621, "process_mem_max_rss": "121602048", "process_out_blocks": "0", "process_user_time": 2.401299}
[0m12:12:27.593579 [debug] [MainThread]: Command `dbt ls` succeeded at 12:12:27.593441 after 0.93 seconds
[0m12:12:27.594141 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105db5880>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1063f6de0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10670f410>]}
[0m12:12:27.594593 [debug] [MainThread]: Flushing usage events
[0m12:12:28.199313 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:25:37.490973 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112812b40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113536d80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1135369c0>]}


============================== 12:25:37.498395 | f16dd727-da3e-4e8f-82c8-4d11a3c46afe ==============================
[0m12:25:37.498395 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:25:37.499361 [debug] [MainThread]: running dbt with arguments {'target_path': 'None', 'introspect': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'use_experimental_parser': 'False', 'send_anonymous_usage_stats': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'use_colors': 'True', 'partial_parse': 'True', 'log_format': 'default', 'empty': 'None', 'quiet': 'False', 'write_json': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'warn_error': 'None', 'printer_width': '80', 'no_print': 'None', 'fail_fast': 'False', 'log_cache_events': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'version_check': 'True', 'indirect_selection': 'eager', 'cache_selected_only': 'False', 'static_parser': 'True', 'debug': 'False'}
[0m12:25:37.834040 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'f16dd727-da3e-4e8f-82c8-4d11a3c46afe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11351a420>]}
[0m12:25:37.911186 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'f16dd727-da3e-4e8f-82c8-4d11a3c46afe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1135b0a70>]}
[0m12:25:37.915135 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:25:38.076220 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:25:38.241836 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:25:38.242404 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:25:38.287815 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'f16dd727-da3e-4e8f-82c8-4d11a3c46afe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1137efaa0>]}
[0m12:25:38.377423 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:25:38.381098 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:25:38.412988 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'f16dd727-da3e-4e8f-82c8-4d11a3c46afe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1139f41a0>]}
[0m12:25:38.413616 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:25:38.414043 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'f16dd727-da3e-4e8f-82c8-4d11a3c46afe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1135d0080>]}
[0m12:25:38.415393 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:25:38.416106 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:25:38.416690 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:25:38.417247 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:25:38.417878 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:25:38.418435 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:25:38.418989 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:25:38.422766 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0278676, "process_in_blocks": "0", "process_kernel_time": 0.447974, "process_mem_max_rss": "120627200", "process_out_blocks": "0", "process_user_time": 2.673872}
[0m12:25:38.423521 [debug] [MainThread]: Command `dbt ls` succeeded at 12:25:38.423373 after 1.03 seconds
[0m12:25:38.424216 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112d2a6f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113b06480>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1135d0080>]}
[0m12:25:38.424774 [debug] [MainThread]: Flushing usage events
[0m12:25:38.904612 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:26:01.698458 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106145160>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106192ed0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106192b40>]}


============================== 12:26:01.705689 | c000e807-c9dc-4003-b88e-1a663e9df891 ==============================
[0m12:26:01.705689 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:26:01.706623 [debug] [MainThread]: running dbt with arguments {'warn_error': 'None', 'log_format': 'default', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'version_check': 'True', 'debug': 'False', 'static_parser': 'True', 'log_cache_events': 'False', 'printer_width': '80', 'introspect': 'True', 'fail_fast': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'cache_selected_only': 'False', 'partial_parse': 'True', 'use_experimental_parser': 'False', 'write_json': 'True', 'quiet': 'False', 'empty': 'None', 'send_anonymous_usage_stats': 'True', 'indirect_selection': 'eager', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'use_colors': 'True', 'target_path': 'None', 'no_print': 'None'}
[0m12:26:02.023853 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'c000e807-c9dc-4003-b88e-1a663e9df891', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x103b04bf0>]}
[0m12:26:02.104243 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'c000e807-c9dc-4003-b88e-1a663e9df891', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106295970>]}
[0m12:26:02.106374 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:26:02.259733 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:26:02.385753 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:26:02.386198 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:26:02.429024 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'c000e807-c9dc-4003-b88e-1a663e9df891', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10643b200>]}
[0m12:26:02.510630 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:26:02.512933 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:26:02.527512 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'c000e807-c9dc-4003-b88e-1a663e9df891', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106647590>]}
[0m12:26:02.528104 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:26:02.528518 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'c000e807-c9dc-4003-b88e-1a663e9df891', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10671bb60>]}
[0m12:26:02.529757 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:26:02.530371 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:26:02.530993 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:26:02.531609 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:26:02.532158 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:26:02.532704 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:26:02.533255 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:26:02.535750 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0969539, "process_in_blocks": "0", "process_kernel_time": 0.324407, "process_mem_max_rss": "120655872", "process_out_blocks": "0", "process_user_time": 2.523914}
[0m12:26:02.536447 [debug] [MainThread]: Command `dbt ls` succeeded at 12:26:02.536295 after 1.10 seconds
[0m12:26:02.536996 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1061929c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10632daf0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10671b8c0>]}
[0m12:26:02.537567 [debug] [MainThread]: Flushing usage events
[0m12:26:02.946398 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:27:47.509575 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x103e0fa10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106a62f00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106a62b40>]}


============================== 12:27:47.514935 | 43ed998a-2326-4a46-80d7-f9c877c20282 ==============================
[0m12:27:47.514935 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:27:47.515658 [debug] [MainThread]: running dbt with arguments {'fail_fast': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_cache_events': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'cache_selected_only': 'False', 'quiet': 'False', 'indirect_selection': 'eager', 'warn_error': 'None', 'log_format': 'default', 'write_json': 'True', 'introspect': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'printer_width': '80', 'partial_parse': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'use_colors': 'True', 'debug': 'False', 'target_path': 'None', 'static_parser': 'True', 'empty': 'None', 'no_print': 'None', 'send_anonymous_usage_stats': 'True', 'use_experimental_parser': 'False', 'version_check': 'True'}
[0m12:27:47.813532 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '43ed998a-2326-4a46-80d7-f9c877c20282', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106b989e0>]}
[0m12:27:47.890463 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '43ed998a-2326-4a46-80d7-f9c877c20282', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106c2e330>]}
[0m12:27:47.892404 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:27:48.044161 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:27:48.167830 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:27:48.168281 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:27:48.211516 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '43ed998a-2326-4a46-80d7-f9c877c20282', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106b6e930>]}
[0m12:27:48.292987 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:27:48.295424 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:27:48.310034 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '43ed998a-2326-4a46-80d7-f9c877c20282', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107031bb0>]}
[0m12:27:48.310614 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:27:48.311035 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '43ed998a-2326-4a46-80d7-f9c877c20282', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106a8e180>]}
[0m12:27:48.312250 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:27:48.312863 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:27:48.313415 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:27:48.314000 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:27:48.314565 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:27:48.315117 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:27:48.315660 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:27:48.318319 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.89517397, "process_in_blocks": "0", "process_kernel_time": 0.328684, "process_mem_max_rss": "121475072", "process_out_blocks": "0", "process_user_time": 2.497769}
[0m12:27:48.318987 [debug] [MainThread]: Command `dbt ls` succeeded at 12:27:48.318853 after 0.90 seconds
[0m12:27:48.319532 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1067dac60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106a62e70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106a14380>]}
[0m12:27:48.319979 [debug] [MainThread]: Flushing usage events
[0m12:27:48.774834 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:28:09.029104 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ac10b90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b902e70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b902ab0>]}


============================== 12:28:09.034306 | 27d01089-a473-402e-92e3-8a46ae63bcd9 ==============================
[0m12:28:09.034306 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:28:09.035003 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'use_experimental_parser': 'False', 'version_check': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'indirect_selection': 'eager', 'warn_error': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'target_path': 'None', 'static_parser': 'True', 'partial_parse': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'quiet': 'False', 'empty': 'None', 'cache_selected_only': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'write_json': 'True', 'introspect': 'True', 'send_anonymous_usage_stats': 'True', 'fail_fast': 'False', 'use_colors': 'True', 'no_print': 'None', 'log_format': 'default', 'debug': 'False', 'log_cache_events': 'False'}
[0m12:28:09.328935 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '27d01089-a473-402e-92e3-8a46ae63bcd9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b979040>]}
[0m12:28:09.404679 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '27d01089-a473-402e-92e3-8a46ae63bcd9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b9ab320>]}
[0m12:28:09.406571 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:28:09.551115 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:28:09.672138 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:28:09.672588 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:28:09.716023 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '27d01089-a473-402e-92e3-8a46ae63bcd9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb45100>]}
[0m12:28:09.798736 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:28:09.801196 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:28:09.816560 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '27d01089-a473-402e-92e3-8a46ae63bcd9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd70350>]}
[0m12:28:09.817167 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:28:09.817588 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '27d01089-a473-402e-92e3-8a46ae63bcd9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b998170>]}
[0m12:28:09.818844 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:28:09.819620 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:28:09.820488 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:28:09.821084 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:28:09.821688 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:28:09.822283 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:28:09.822840 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:28:09.825506 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.88237756, "process_in_blocks": "0", "process_kernel_time": 0.284225, "process_mem_max_rss": "121249792", "process_out_blocks": "0", "process_user_time": 2.363327}
[0m12:28:09.826166 [debug] [MainThread]: Command `dbt ls` succeeded at 12:28:09.826032 after 0.88 seconds
[0m12:28:09.826746 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b244920>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b902780>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b902bd0>]}
[0m12:28:09.827261 [debug] [MainThread]: Flushing usage events
[0m12:28:10.284881 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:29:04.193270 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cbb5520>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cce2f30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cce2b70>]}


============================== 12:29:04.200016 | c02cb9c2-d9c2-4588-92de-16aa27a466de ==============================
[0m12:29:04.200016 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:29:04.200918 [debug] [MainThread]: running dbt with arguments {'partial_parse': 'True', 'log_format': 'default', 'target_path': 'None', 'indirect_selection': 'eager', 'debug': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'write_json': 'True', 'use_experimental_parser': 'False', 'introspect': 'True', 'printer_width': '80', 'version_check': 'True', 'warn_error': 'None', 'log_cache_events': 'False', 'use_colors': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'empty': 'None', 'fail_fast': 'False', 'cache_selected_only': 'False', 'quiet': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'send_anonymous_usage_stats': 'True', 'no_print': 'None'}
[0m12:29:04.511442 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'c02cb9c2-d9c2-4588-92de-16aa27a466de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cdb3ce0>]}
[0m12:29:04.588216 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'c02cb9c2-d9c2-4588-92de-16aa27a466de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cf2eed0>]}
[0m12:29:04.590227 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:29:04.736563 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:29:04.859336 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:29:04.859817 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:29:04.903123 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'c02cb9c2-d9c2-4588-92de-16aa27a466de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cedd790>]}
[0m12:29:04.985979 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:29:04.988596 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:29:05.003420 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'c02cb9c2-d9c2-4588-92de-16aa27a466de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cf9a1b0>]}
[0m12:29:05.004015 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:29:05.004440 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'c02cb9c2-d9c2-4588-92de-16aa27a466de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c60f8f0>]}
[0m12:29:05.005672 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:29:05.006282 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:29:05.006881 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:29:05.007432 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:29:05.007972 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:29:05.008511 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:29:05.009124 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:29:05.011882 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.93617994, "process_in_blocks": "0", "process_kernel_time": 0.31728, "process_mem_max_rss": "120860672", "process_out_blocks": "0", "process_user_time": 2.455564}
[0m12:29:05.012546 [debug] [MainThread]: Command `dbt ls` succeeded at 12:29:05.012410 after 0.94 seconds
[0m12:29:05.013047 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c4b1c70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cce2ea0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cd7cd70>]}
[0m12:29:05.013628 [debug] [MainThread]: Flushing usage events
[0m12:29:05.452518 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:30:19.992679 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110979580>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1115eef90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1115eec00>]}


============================== 12:30:19.998592 | 2e80ada9-b126-4b10-a7e3-e5aaa7d05d1c ==============================
[0m12:30:19.998592 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:30:19.999339 [debug] [MainThread]: running dbt with arguments {'no_print': 'None', 'printer_width': '80', 'static_parser': 'True', 'quiet': 'False', 'target_path': 'None', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'debug': 'False', 'indirect_selection': 'eager', 'empty': 'None', 'warn_error': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_format': 'default', 'introspect': 'True', 'write_json': 'True', 'version_check': 'True', 'send_anonymous_usage_stats': 'True', 'use_colors': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'invocation_command': 'dbt ls --resource-type model --output json', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'use_experimental_parser': 'False', 'fail_fast': 'False'}
[0m12:30:20.316697 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '2e80ada9-b126-4b10-a7e3-e5aaa7d05d1c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11161ac30>]}
[0m12:30:20.398343 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '2e80ada9-b126-4b10-a7e3-e5aaa7d05d1c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11086a720>]}
[0m12:30:20.400372 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:30:20.565063 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:30:20.688051 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:30:20.688550 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:30:20.732196 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '2e80ada9-b126-4b10-a7e3-e5aaa7d05d1c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11182a5a0>]}
[0m12:30:20.816727 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:30:20.819398 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:30:20.835755 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '2e80ada9-b126-4b10-a7e3-e5aaa7d05d1c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1119db8f0>]}
[0m12:30:20.836438 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:30:20.836927 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '2e80ada9-b126-4b10-a7e3-e5aaa7d05d1c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111829d30>]}
[0m12:30:20.838280 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:30:20.838936 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:30:20.839533 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:30:20.840110 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:30:20.840688 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:30:20.841264 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:30:20.841877 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:30:20.844624 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.9420642, "process_in_blocks": "0", "process_kernel_time": 0.300604, "process_mem_max_rss": "121053184", "process_out_blocks": "0", "process_user_time": 2.470878}
[0m12:30:20.845342 [debug] [MainThread]: Command `dbt ls` succeeded at 12:30:20.845194 after 0.94 seconds
[0m12:30:20.845862 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1115ee9c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111ba7e60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110979580>]}
[0m12:30:20.846330 [debug] [MainThread]: Flushing usage events
[0m12:30:21.315249 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:30:40.564154 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11333aff0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113656f30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113656ba0>]}


============================== 12:30:40.569158 | 5488e016-b3cc-4fbc-865e-8ebbe41920a2 ==============================
[0m12:30:40.569158 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:30:40.569829 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'quiet': 'False', 'log_format': 'default', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'target_path': 'None', 'fail_fast': 'False', 'use_colors': 'True', 'log_cache_events': 'False', 'introspect': 'True', 'empty': 'None', 'write_json': 'True', 'use_experimental_parser': 'False', 'cache_selected_only': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'send_anonymous_usage_stats': 'True', 'indirect_selection': 'eager', 'debug': 'False', 'warn_error': 'None', 'static_parser': 'True', 'no_print': 'None', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'version_check': 'True', 'partial_parse': 'True'}
[0m12:30:40.992713 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '5488e016-b3cc-4fbc-865e-8ebbe41920a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1136870b0>]}
[0m12:30:41.108362 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '5488e016-b3cc-4fbc-865e-8ebbe41920a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112fdf5c0>]}
[0m12:30:41.110802 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:30:41.304475 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:30:41.431673 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:30:41.432134 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:30:41.476002 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '5488e016-b3cc-4fbc-865e-8ebbe41920a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11381e9f0>]}
[0m12:30:41.558539 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:30:41.560910 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:30:41.576106 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '5488e016-b3cc-4fbc-865e-8ebbe41920a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113b1d640>]}
[0m12:30:41.576703 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:30:41.577127 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '5488e016-b3cc-4fbc-865e-8ebbe41920a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11390b620>]}
[0m12:30:41.578394 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:30:41.579011 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:30:41.579566 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:30:41.580114 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:30:41.580661 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:30:41.581207 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:30:41.581768 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:30:41.584355 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.1103071, "process_in_blocks": "0", "process_kernel_time": 0.311542, "process_mem_max_rss": "120893440", "process_out_blocks": "0", "process_user_time": 2.433652}
[0m12:30:41.585006 [debug] [MainThread]: Command `dbt ls` succeeded at 12:30:41.584870 after 1.11 seconds
[0m12:30:41.585495 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113656c00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113656d50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113bfe8d0>]}
[0m12:30:41.586063 [debug] [MainThread]: Flushing usage events
[0m12:30:42.029484 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:31:08.197836 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110477710>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112c9ae40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112c9aa80>]}


============================== 12:31:08.204268 | 3d60748d-923b-4c32-92ec-ece3d2d786f3 ==============================
[0m12:31:08.204268 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:31:08.205158 [debug] [MainThread]: running dbt with arguments {'indirect_selection': 'eager', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'debug': 'False', 'fail_fast': 'False', 'partial_parse': 'True', 'target_path': 'None', 'log_format': 'default', 'use_colors': 'True', 'use_experimental_parser': 'False', 'log_cache_events': 'False', 'warn_error': 'None', 'quiet': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'empty': 'None', 'write_json': 'True', 'send_anonymous_usage_stats': 'True', 'version_check': 'True', 'cache_selected_only': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'static_parser': 'True', 'introspect': 'True', 'printer_width': '80', 'no_print': 'None'}
[0m12:31:08.510034 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '3d60748d-923b-4c32-92ec-ece3d2d786f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112e3fad0>]}
[0m12:31:08.586598 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '3d60748d-923b-4c32-92ec-ece3d2d786f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112d4b5f0>]}
[0m12:31:08.588775 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:31:08.733617 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:31:08.857377 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:31:08.857857 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:31:08.907801 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '3d60748d-923b-4c32-92ec-ece3d2d786f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112f02000>]}
[0m12:31:08.995391 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:31:08.998260 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:31:09.014915 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '3d60748d-923b-4c32-92ec-ece3d2d786f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113162f90>]}
[0m12:31:09.015559 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:31:09.015996 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '3d60748d-923b-4c32-92ec-ece3d2d786f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113246450>]}
[0m12:31:09.017329 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:31:09.018088 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:31:09.018666 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:31:09.019219 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:31:09.019775 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:31:09.020332 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:31:09.020895 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:31:09.023993 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.92615926, "process_in_blocks": "0", "process_kernel_time": 0.308207, "process_mem_max_rss": "121319424", "process_out_blocks": "0", "process_user_time": 2.430741}
[0m12:31:09.024831 [debug] [MainThread]: Command `dbt ls` succeeded at 12:31:09.024671 after 0.93 seconds
[0m12:31:09.025536 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1129a6810>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112d17470>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112f03d70>]}
[0m12:31:09.026190 [debug] [MainThread]: Flushing usage events
[0m12:31:09.500079 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:34:33.686197 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e3092b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110d4ac60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110d4a8a0>]}


============================== 12:34:33.691673 | 5a990d59-d2c2-4f62-892c-19d82c72006e ==============================
[0m12:34:33.691673 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:34:33.692425 [debug] [MainThread]: running dbt with arguments {'partial_parse': 'True', 'send_anonymous_usage_stats': 'True', 'debug': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'no_print': 'None', 'empty': 'False', 'indirect_selection': 'eager', 'target_path': 'None', 'use_experimental_parser': 'False', 'introspect': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'version_check': 'True', 'static_parser': 'True', 'write_json': 'True', 'quiet': 'False', 'use_colors': 'True', 'fail_fast': 'False', 'invocation_command': 'dbt run', 'printer_width': '80', 'log_format': 'default', 'warn_error': 'None', 'cache_selected_only': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_cache_events': 'False'}
[0m12:34:33.998434 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '5a990d59-d2c2-4f62-892c-19d82c72006e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110e51010>]}
[0m12:34:34.075388 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '5a990d59-d2c2-4f62-892c-19d82c72006e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110516930>]}
[0m12:34:34.077560 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:34:34.248187 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:34:34.397474 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 5 files changed.
[0m12:34:34.398183 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/members.sql
[0m12:34:34.398672 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/tournaments.sql
[0m12:34:34.399136 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/teams.sql
[0m12:34:34.399590 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/contacts.sql
[0m12:34:34.400054 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/officials.sql
[0m12:34:34.781332 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '5a990d59-d2c2-4f62-892c-19d82c72006e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111441190>]}
[0m12:34:34.860778 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:34:34.863233 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:34:34.882527 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '5a990d59-d2c2-4f62-892c-19d82c72006e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1114390d0>]}
[0m12:34:34.883124 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:34:34.883571 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '5a990d59-d2c2-4f62-892c-19d82c72006e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111396750>]}
[0m12:34:34.885898 [info ] [MainThread]: 
[0m12:34:34.886364 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m12:34:34.886758 [info ] [MainThread]: 
[0m12:34:34.887370 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m12:34:34.893948 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m12:34:34.968483 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m12:34:34.968984 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m12:34:34.969412 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m12:34:35.065305 [debug] [ThreadPool]: SQL status: OK in 0.096 seconds
[0m12:34:35.068160 [debug] [ThreadPool]: On list_memory: Close
[0m12:34:35.070745 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m12:34:35.071217 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m12:34:35.071609 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:34:35.073939 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:34:35.075420 [debug] [ThreadPool]: On list_memory: Close
[0m12:34:35.076277 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_salesforce)
[0m12:34:35.077383 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m12:34:35.084972 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:34:35.085454 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m12:34:35.085830 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:34:35.089102 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m12:34:35.090761 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:34:35.091208 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m12:34:35.091899 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:34:35.092324 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:34:35.092750 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m12:34:35.095862 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m12:34:35.097158 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m12:34:35.097669 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:34:35.098090 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m12:34:35.099321 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m12:34:35.099776 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m12:34:35.100554 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now create_memory_references)
[0m12:34:35.101214 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "references"
"
[0m12:34:35.103793 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:34:35.104290 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m12:34:35.104706 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:34:35.107055 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:34:35.108674 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:34:35.109072 [debug] [ThreadPool]: On create_memory_references: BEGIN
[0m12:34:35.109728 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:34:35.110123 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:34:35.110501 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_references"} */

    
    
        create schema if not exists memory."references"
    
[0m12:34:35.111163 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:34:35.112198 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m12:34:35.112596 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:34:35.112961 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m12:34:35.113562 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:34:35.113951 [debug] [ThreadPool]: On create_memory_references: Close
[0m12:34:35.115614 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_references, now list_memory_fct_salesforce)
[0m12:34:35.122361 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m12:34:35.122813 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m12:34:35.123150 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:34:35.124780 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:34:35.125154 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m12:34:35.125533 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m12:34:35.178552 [debug] [ThreadPool]: SQL status: OK in 0.053 seconds
[0m12:34:35.181708 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m12:34:35.185079 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m12:34:35.185692 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m12:34:35.186549 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now list_memory_references)
[0m12:34:35.190323 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m12:34:35.191139 [debug] [ThreadPool]: On list_memory_references: BEGIN
[0m12:34:35.191835 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:34:35.194844 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m12:34:35.195382 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m12:34:35.195906 [debug] [ThreadPool]: On list_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'references'
    and lower(table_catalog) = 'memory'
  
[0m12:34:35.201305 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m12:34:35.203203 [debug] [ThreadPool]: On list_memory_references: ROLLBACK
[0m12:34:35.204390 [debug] [ThreadPool]: Failed to rollback 'list_memory_references'
[0m12:34:35.204812 [debug] [ThreadPool]: On list_memory_references: Close
[0m12:34:35.205558 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '5a990d59-d2c2-4f62-892c-19d82c72006e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1114ae000>]}
[0m12:34:35.206173 [debug] [MainThread]: Using duckdb connection "master"
[0m12:34:35.206612 [debug] [MainThread]: On master: BEGIN
[0m12:34:35.207025 [debug] [MainThread]: Opening a new connection, currently in state init
[0m12:34:35.209037 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m12:34:35.209497 [debug] [MainThread]: On master: COMMIT
[0m12:34:35.209932 [debug] [MainThread]: Using duckdb connection "master"
[0m12:34:35.210353 [debug] [MainThread]: On master: COMMIT
[0m12:34:35.211009 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m12:34:35.211456 [debug] [MainThread]: On master: Close
[0m12:34:35.215865 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m12:34:35.216618 [info ] [Thread-1 (]: 1 of 7 START sql table model references.states ................................. [RUN]
[0m12:34:35.217272 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_references, now model.usawfl.states)
[0m12:34:35.217783 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m12:34:35.226916 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m12:34:35.227886 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m12:34:35.266103 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m12:34:35.267052 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:34:35.267510 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m12:34:35.267993 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:34:35.269609 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:34:35.270033 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:34:35.270594 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m12:34:35.325067 [debug] [Thread-1 (]: SQL status: OK in 0.054 seconds
[0m12:34:35.332590 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:34:35.333139 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."references"."states__dbt_tmp" rename to "states"
[0m12:34:35.336096 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:34:35.346813 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:34:35.347376 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:34:35.363399 [debug] [Thread-1 (]: SQL status: OK in 0.015 seconds
[0m12:34:35.377014 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m12:34:35.377541 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:34:35.377952 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m12:34:35.379108 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:34:35.448893 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:34:35.449462 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop table if exists memory."references"."states__dbt_backup" cascade
    
[0m12:34:35.450341 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:34:35.453426 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m12:34:35.455947 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5a990d59-d2c2-4f62-892c-19d82c72006e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fff0110>]}
[0m12:34:35.456819 [info ] [Thread-1 (]: 1 of 7 OK created sql table model references.states ............................ [[32mOK[0m in 0.24s]
[0m12:34:35.457695 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m12:34:35.458280 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m12:34:35.458878 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m12:34:35.459479 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m12:34:35.460063 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m12:34:35.464884 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m12:34:35.465830 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m12:34:35.472570 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m12:34:35.474233 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:34:35.474855 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m12:34:35.475327 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:34:35.477702 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:34:35.478270 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:34:35.478863 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as timestamp) as created,
        cast(_dlt_processed_utc as timestamp) as processed,
        cast(system_modstamp as timestamp) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m12:34:36.174140 [debug] [Thread-1 (]: SQL status: OK in 0.694 seconds
[0m12:34:36.178001 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:34:36.178587 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m12:34:36.179637 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:34:36.185545 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:34:36.186092 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:34:36.189864 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:34:36.191715 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m12:34:36.192264 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:34:36.192793 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m12:34:36.193904 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:34:36.196722 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:34:36.197195 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m12:34:36.198068 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:34:36.199855 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m12:34:36.200588 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5a990d59-d2c2-4f62-892c-19d82c72006e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1112faf30>]}
[0m12:34:36.201570 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.74s]
[0m12:34:36.202376 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m12:34:36.202850 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m12:34:36.203448 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m12:34:36.203995 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m12:34:36.204424 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m12:34:36.212012 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m12:34:36.213262 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m12:34:36.217278 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m12:34:36.218456 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:34:36.219084 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m12:34:36.219635 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:34:36.221387 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:34:36.221831 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:34:36.222524 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as timestamp) as created,
        cast(c._dlt_processed_utc as timestamp) as processed,
        cast(c.system_modstamp as timestamp) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m12:34:42.432659 [debug] [Thread-1 (]: SQL status: OK in 6.209 seconds
[0m12:34:42.439514 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:34:42.440644 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m12:34:42.441808 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:34:42.454080 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:34:42.454859 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:34:42.721947 [debug] [Thread-1 (]: SQL status: OK in 0.266 seconds
[0m12:34:42.725818 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m12:34:42.726342 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:34:42.726900 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m12:34:42.736766 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m12:34:42.739644 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:34:42.740162 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m12:34:42.741354 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:34:42.743301 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m12:34:42.744024 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5a990d59-d2c2-4f62-892c-19d82c72006e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11180f1a0>]}
[0m12:34:42.744758 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.54s]
[0m12:34:42.745477 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m12:34:42.746228 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m12:34:42.746794 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m12:34:42.747655 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m12:34:42.748272 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m12:34:42.754951 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m12:34:42.755829 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m12:34:42.759442 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m12:34:42.760384 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:34:42.760842 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m12:34:42.761252 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:34:42.762915 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:34:42.763385 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:34:42.763992 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        cast(ol.is_deleted as boolean) as is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        cast(o.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as timestamp) as created,
        cast(o._dlt_processed_utc as timestamp) as processed,
        cast(o.system_modstamp as timestamp) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m12:34:43.703861 [debug] [Thread-1 (]: SQL status: OK in 0.939 seconds
[0m12:34:43.707144 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:34:43.707594 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m12:34:43.708535 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:34:43.713547 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:34:43.714067 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:34:43.718157 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m12:34:43.719677 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m12:34:43.720161 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:34:43.720596 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m12:34:43.723316 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:34:43.726001 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:34:43.726477 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m12:34:43.727251 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:34:43.728773 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m12:34:43.729429 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5a990d59-d2c2-4f62-892c-19d82c72006e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11180fdd0>]}
[0m12:34:43.730190 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 0.98s]
[0m12:34:43.730947 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m12:34:43.731431 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m12:34:43.732039 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m12:34:43.732633 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m12:34:43.733092 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m12:34:43.741729 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m12:34:43.744434 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m12:34:43.748386 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m12:34:43.749239 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:34:43.749673 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m12:34:43.750073 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:34:43.752773 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:34:43.753534 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:34:43.754077 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        cast(t.is_deleted as boolean) as is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as timestamp) as created,
        cast(t._dlt_processed_utc as timestamp) as processed,
        cast(t.system_modstamp as timestamp) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m12:34:44.234424 [debug] [Thread-1 (]: SQL status: OK in 0.479 seconds
[0m12:34:44.238469 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:34:44.239084 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m12:34:44.240135 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:34:44.246148 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:34:44.246754 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:34:44.249748 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:34:44.251837 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m12:34:44.252623 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:34:44.253166 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m12:34:44.254705 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:34:44.257782 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:34:44.258516 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m12:34:44.259794 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:34:44.261688 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m12:34:44.262610 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5a990d59-d2c2-4f62-892c-19d82c72006e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110ffdc10>]}
[0m12:34:44.263483 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.53s]
[0m12:34:44.264644 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m12:34:44.265726 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m12:34:44.266741 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m12:34:44.268092 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m12:34:44.270038 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m12:34:44.276364 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m12:34:44.277844 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m12:34:44.281725 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m12:34:44.282818 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:34:44.283343 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m12:34:44.283922 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:34:44.287417 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:34:44.288216 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:34:44.289180 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        cast(m.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as timestamp) as created,
        cast(m._dlt_processed_utc as timestamp) as processed,
        cast(m.system_modstamp as timestamp) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m12:34:46.155354 [debug] [Thread-1 (]: SQL status: OK in 1.865 seconds
[0m12:34:46.159026 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:34:46.159538 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m12:34:46.160477 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:34:46.167737 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:34:46.168308 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:34:46.172881 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m12:34:46.174547 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m12:34:46.175036 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:34:46.175454 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m12:34:46.179019 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:34:46.182301 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:34:46.182846 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m12:34:46.183708 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:34:46.185354 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m12:34:46.186032 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5a990d59-d2c2-4f62-892c-19d82c72006e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111844e60>]}
[0m12:34:46.186776 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.92s]
[0m12:34:46.187571 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m12:34:46.188306 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m12:34:46.188894 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m12:34:46.189757 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m12:34:46.190240 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m12:34:46.196862 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m12:34:46.198358 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m12:34:46.204101 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m12:34:46.205858 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:34:46.206416 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m12:34:46.206870 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:34:46.209340 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:34:46.209963 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:34:46.210932 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m12:34:48.031382 [debug] [Thread-1 (]: SQL status: OK in 1.819 seconds
[0m12:34:48.035020 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:34:48.035496 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m12:34:48.036388 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:34:48.041361 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:34:48.041878 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:34:48.044972 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:34:48.046489 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m12:34:48.046943 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:34:48.047354 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m12:34:48.048117 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:34:48.050835 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:34:48.051299 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m12:34:48.052069 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:34:48.053555 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m12:34:48.054327 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5a990d59-d2c2-4f62-892c-19d82c72006e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110f3d5e0>]}
[0m12:34:48.055062 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.86s]
[0m12:34:48.055867 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m12:34:48.057180 [debug] [MainThread]: Using duckdb connection "master"
[0m12:34:48.057594 [debug] [MainThread]: On master: BEGIN
[0m12:34:48.057943 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m12:34:48.059542 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m12:34:48.059929 [debug] [MainThread]: On master: COMMIT
[0m12:34:48.060300 [debug] [MainThread]: Using duckdb connection "master"
[0m12:34:48.060648 [debug] [MainThread]: On master: COMMIT
[0m12:34:48.061282 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m12:34:48.062093 [debug] [MainThread]: On master: Close
[0m12:34:48.062760 [debug] [MainThread]: Connection 'master' was properly closed.
[0m12:34:48.063140 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m12:34:48.063613 [info ] [MainThread]: 
[0m12:34:48.064053 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 13.18 seconds (13.18s).
[0m12:34:48.067309 [debug] [MainThread]: Command end result
[0m12:34:48.095508 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:34:48.097786 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:34:48.105818 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m12:34:48.107662 [info ] [MainThread]: 
[0m12:34:48.108912 [info ] [MainThread]: [32mCompleted successfully[0m
[0m12:34:48.109719 [info ] [MainThread]: 
[0m12:34:48.110269 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m12:34:48.114861 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 14.516308, "process_in_blocks": "0", "process_kernel_time": 0.955751, "process_mem_max_rss": "374169600", "process_out_blocks": "0", "process_user_time": 7.872121}
[0m12:34:48.115671 [debug] [MainThread]: Command `dbt run` succeeded at 12:34:48.115522 after 14.52 seconds
[0m12:34:48.116282 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110a57830>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11143e150>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11068fb90>]}
[0m12:34:48.116817 [debug] [MainThread]: Flushing usage events
[0m12:34:48.645240 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:34:56.235923 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113475ee0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1138ea3f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113ca67b0>]}


============================== 12:34:56.241200 | 24d24eb6-0a07-4b93-bd22-e977efeff479 ==============================
[0m12:34:56.241200 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:34:56.241901 [debug] [MainThread]: running dbt with arguments {'indirect_selection': 'eager', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'no_print': 'None', 'partial_parse': 'True', 'log_cache_events': 'False', 'fail_fast': 'False', 'use_colors': 'True', 'cache_selected_only': 'False', 'version_check': 'True', 'write_json': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'target_path': 'None', 'quiet': 'False', 'static_parser': 'True', 'introspect': 'True', 'printer_width': '80', 'debug': 'False', 'warn_error': 'None', 'empty': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'use_experimental_parser': 'False', 'invocation_command': 'dbt run --target prod', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m12:34:56.550899 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '24d24eb6-0a07-4b93-bd22-e977efeff479', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11159cda0>]}
[0m12:34:56.627538 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '24d24eb6-0a07-4b93-bd22-e977efeff479', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11353a1b0>]}
[0m12:34:56.629532 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:34:56.784035 [debug] [MainThread]: checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, vars: {}, profile: , target: prod, version: 1.10.9
[0m12:34:56.882422 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m12:34:56.883071 [debug] [MainThread]: previous checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, current checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23
[0m12:34:56.883546 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '24d24eb6-0a07-4b93-bd22-e977efeff479', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113cd1f10>]}
[0m12:34:58.386181 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '24d24eb6-0a07-4b93-bd22-e977efeff479', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1143e7f20>]}
[0m12:34:58.463211 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:34:58.465913 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:34:58.486543 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '24d24eb6-0a07-4b93-bd22-e977efeff479', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1143b0e00>]}
[0m12:34:58.487130 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:34:58.487558 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '24d24eb6-0a07-4b93-bd22-e977efeff479', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11446f0e0>]}
[0m12:34:58.490135 [info ] [MainThread]: 
[0m12:34:58.490679 [info ] [MainThread]: Concurrency: 1 threads (target='prod')
[0m12:34:58.491074 [info ] [MainThread]: 
[0m12:34:58.491799 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m12:34:58.499320 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m12:34:58.581347 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m12:34:58.582035 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m12:34:58.582453 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m12:34:58.650594 [debug] [ThreadPool]: SQL status: OK in 0.068 seconds
[0m12:34:58.652616 [debug] [ThreadPool]: On list_memory: Close
[0m12:34:58.655657 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m12:34:58.656357 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m12:34:58.656748 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:34:58.659306 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:34:58.661445 [debug] [ThreadPool]: On list_memory: Close
[0m12:34:58.662474 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_references)
[0m12:34:58.663079 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "references"
"
[0m12:34:58.670983 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:34:58.671524 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m12:34:58.671901 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:34:58.674440 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:34:58.676103 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:34:58.676549 [debug] [ThreadPool]: On create_memory_references: BEGIN
[0m12:34:58.677320 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:34:58.677753 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:34:58.678125 [debug] [ThreadPool]: On create_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_references"} */

    
    
        create schema if not exists memory."references"
    
[0m12:34:58.678900 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:34:58.680149 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m12:34:58.680663 [debug] [ThreadPool]: Using duckdb connection "create_memory_references"
[0m12:34:58.681057 [debug] [ThreadPool]: On create_memory_references: COMMIT
[0m12:34:58.681817 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:34:58.682236 [debug] [ThreadPool]: On create_memory_references: Close
[0m12:34:58.682935 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_references, now create_memory_fct_salesforce)
[0m12:34:58.683468 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m12:34:58.686730 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:34:58.687353 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m12:34:58.687833 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:34:58.691324 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m12:34:58.693343 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:34:58.693874 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m12:34:58.694593 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:34:58.694979 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:34:58.695352 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m12:34:58.696117 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:34:58.697298 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m12:34:58.697699 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:34:58.698126 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m12:34:58.698787 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:34:58.699193 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m12:34:58.701327 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_references)
[0m12:34:58.708747 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m12:34:58.709542 [debug] [ThreadPool]: On list_memory_references: BEGIN
[0m12:34:58.709960 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:34:58.711711 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:34:58.712141 [debug] [ThreadPool]: Using duckdb connection "list_memory_references"
[0m12:34:58.712524 [debug] [ThreadPool]: On list_memory_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'references'
    and lower(table_catalog) = 'memory'
  
[0m12:34:58.729760 [debug] [ThreadPool]: SQL status: OK in 0.017 seconds
[0m12:34:58.731400 [debug] [ThreadPool]: On list_memory_references: ROLLBACK
[0m12:34:58.734243 [debug] [ThreadPool]: Failed to rollback 'list_memory_references'
[0m12:34:58.734739 [debug] [ThreadPool]: On list_memory_references: Close
[0m12:34:58.735441 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_references, now list_memory_fct_salesforce)
[0m12:34:58.738062 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m12:34:58.738544 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m12:34:58.738905 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:34:58.740681 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:34:58.741084 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m12:34:58.741595 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m12:34:58.745785 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m12:34:58.747518 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m12:34:58.748638 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m12:34:58.749038 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m12:34:58.749799 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '24d24eb6-0a07-4b93-bd22-e977efeff479', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1142b7b30>]}
[0m12:34:58.750793 [debug] [MainThread]: Using duckdb connection "master"
[0m12:34:58.751560 [debug] [MainThread]: On master: BEGIN
[0m12:34:58.752069 [debug] [MainThread]: Opening a new connection, currently in state init
[0m12:34:58.753875 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m12:34:58.754342 [debug] [MainThread]: On master: COMMIT
[0m12:34:58.754724 [debug] [MainThread]: Using duckdb connection "master"
[0m12:34:58.755157 [debug] [MainThread]: On master: COMMIT
[0m12:34:58.755766 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m12:34:58.756165 [debug] [MainThread]: On master: Close
[0m12:34:58.759769 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m12:34:58.760534 [info ] [Thread-1 (]: 1 of 7 START sql table model references.states ................................. [RUN]
[0m12:34:58.761139 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m12:34:58.761580 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m12:34:58.771787 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m12:34:58.772751 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m12:34:58.812574 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m12:34:58.813527 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:34:58.813961 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m12:34:58.814367 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:34:58.816384 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:34:58.816988 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:34:58.817716 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m12:34:58.852933 [debug] [Thread-1 (]: SQL status: OK in 0.034 seconds
[0m12:34:58.860411 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:34:58.861019 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */
alter table memory."references"."states__dbt_tmp" rename to "states"
[0m12:34:58.861892 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:34:58.871018 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:34:58.871549 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:34:58.874232 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:34:58.887207 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m12:34:58.887749 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:34:58.888165 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m12:34:58.889498 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:34:58.895990 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:34:58.896577 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

      drop table if exists memory."references"."states__dbt_backup" cascade
    
[0m12:34:58.897478 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:34:58.900414 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m12:34:58.902903 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '24d24eb6-0a07-4b93-bd22-e977efeff479', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1144e1a60>]}
[0m12:34:58.903805 [info ] [Thread-1 (]: 1 of 7 OK created sql table model references.states ............................ [[32mOK[0m in 0.14s]
[0m12:34:58.904576 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m12:34:58.905144 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m12:34:58.905982 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m12:34:58.906601 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m12:34:58.907086 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m12:34:58.911914 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m12:34:58.913134 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m12:34:58.916817 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m12:34:58.917843 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:34:58.918383 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m12:34:58.918878 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:34:58.920916 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:34:58.921638 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:34:58.922267 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as timestamp) as created,
        cast(_dlt_processed_utc as timestamp) as processed,
        cast(system_modstamp as timestamp) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m12:34:59.387216 [debug] [Thread-1 (]: SQL status: OK in 0.464 seconds
[0m12:34:59.391878 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:34:59.392525 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m12:34:59.393652 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:34:59.399678 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:34:59.400242 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:34:59.402900 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:34:59.404605 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m12:34:59.405209 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:34:59.405716 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m12:34:59.406683 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:34:59.409452 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:34:59.409922 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m12:34:59.410687 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:34:59.412341 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m12:34:59.413022 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '24d24eb6-0a07-4b93-bd22-e977efeff479', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1148d6480>]}
[0m12:34:59.413768 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.51s]
[0m12:34:59.414507 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m12:34:59.415001 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m12:34:59.415554 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m12:34:59.416110 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m12:34:59.416557 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m12:34:59.424779 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m12:34:59.426534 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m12:34:59.431841 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m12:34:59.432860 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:34:59.433293 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m12:34:59.433699 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:34:59.435670 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:34:59.436553 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:34:59.437487 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as timestamp) as created,
        cast(c._dlt_processed_utc as timestamp) as processed,
        cast(c.system_modstamp as timestamp) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m12:35:05.831854 [debug] [Thread-1 (]: SQL status: OK in 6.393 seconds
[0m12:35:05.837407 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:35:05.838081 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m12:35:05.839089 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:35:05.845173 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:35:05.845772 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:35:06.015231 [debug] [Thread-1 (]: SQL status: OK in 0.169 seconds
[0m12:35:06.017051 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m12:35:06.017541 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:35:06.017973 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m12:35:06.023220 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m12:35:06.026186 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:35:06.026678 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m12:35:06.027497 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:35:06.029116 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m12:35:06.029798 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '24d24eb6-0a07-4b93-bd22-e977efeff479', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1148cfbc0>]}
[0m12:35:06.030549 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.61s]
[0m12:35:06.031275 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m12:35:06.032092 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m12:35:06.032647 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m12:35:06.033241 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m12:35:06.033691 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m12:35:06.038463 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m12:35:06.039356 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m12:35:06.042933 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m12:35:06.044471 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:35:06.045018 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m12:35:06.045432 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:35:06.047062 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:35:06.047519 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:35:06.048121 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        cast(ol.is_deleted as boolean) as is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        cast(o.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as timestamp) as created,
        cast(o._dlt_processed_utc as timestamp) as processed,
        cast(o.system_modstamp as timestamp) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m12:35:07.060585 [debug] [Thread-1 (]: SQL status: OK in 1.012 seconds
[0m12:35:07.064690 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:35:07.065273 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m12:35:07.066311 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:35:07.072264 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:35:07.072820 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:35:07.076536 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:35:07.078050 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m12:35:07.078560 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:35:07.078996 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m12:35:07.081558 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:35:07.084740 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:35:07.085573 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m12:35:07.086786 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:35:07.103554 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m12:35:07.110642 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '24d24eb6-0a07-4b93-bd22-e977efeff479', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1148a4cb0>]}
[0m12:35:07.111509 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 1.08s]
[0m12:35:07.113218 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m12:35:07.113822 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m12:35:07.114900 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m12:35:07.125699 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m12:35:07.126422 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m12:35:07.130162 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m12:35:07.130977 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m12:35:07.134369 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m12:35:07.135465 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:35:07.136418 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m12:35:07.137194 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:35:07.139176 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:35:07.139675 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:35:07.140195 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        cast(t.is_deleted as boolean) as is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as timestamp) as created,
        cast(t._dlt_processed_utc as timestamp) as processed,
        cast(t.system_modstamp as timestamp) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m12:35:07.664994 [debug] [Thread-1 (]: SQL status: OK in 0.524 seconds
[0m12:35:07.668736 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:35:07.669230 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m12:35:07.670149 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:35:07.675510 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:35:07.676033 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:35:07.678963 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:35:07.680445 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m12:35:07.680904 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:35:07.681400 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m12:35:07.682568 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:35:07.687022 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:35:07.687524 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m12:35:07.688409 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:35:07.690249 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m12:35:07.690928 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '24d24eb6-0a07-4b93-bd22-e977efeff479', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11491a870>]}
[0m12:35:07.691712 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.57s]
[0m12:35:07.692452 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m12:35:07.693255 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m12:35:07.693892 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m12:35:07.694425 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m12:35:07.694853 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m12:35:07.698835 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m12:35:07.699810 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m12:35:07.703529 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m12:35:07.706013 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:35:07.706580 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m12:35:07.706998 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:35:07.708700 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:35:07.709164 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:35:07.709712 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        cast(m.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as timestamp) as created,
        cast(m._dlt_processed_utc as timestamp) as processed,
        cast(m.system_modstamp as timestamp) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m12:35:09.604990 [debug] [Thread-1 (]: SQL status: OK in 1.895 seconds
[0m12:35:09.608775 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:35:09.609336 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m12:35:09.610309 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:35:09.615364 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:35:09.616035 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:35:09.621083 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m12:35:09.622587 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m12:35:09.623036 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:35:09.623447 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m12:35:09.626453 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:35:09.629585 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:35:09.630106 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m12:35:09.630922 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:35:09.632512 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m12:35:09.633176 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '24d24eb6-0a07-4b93-bd22-e977efeff479', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11489f2f0>]}
[0m12:35:09.633881 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.94s]
[0m12:35:09.634564 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m12:35:09.635034 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m12:35:09.635564 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m12:35:09.636170 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m12:35:09.636613 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m12:35:09.642500 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m12:35:09.643610 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m12:35:09.647888 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m12:35:09.649757 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:35:09.650438 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m12:35:09.650942 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:35:09.653468 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:35:09.654129 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:35:09.655066 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m12:35:11.448113 [debug] [Thread-1 (]: SQL status: OK in 1.791 seconds
[0m12:35:11.457309 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:35:11.458033 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m12:35:11.459236 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:35:11.465597 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:35:11.466225 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-prod//fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:35:11.471529 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m12:35:11.473891 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m12:35:11.474560 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:35:11.475125 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m12:35:11.477118 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:35:11.483380 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:35:11.484086 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m12:35:11.485742 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:35:11.487940 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m12:35:11.488866 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '24d24eb6-0a07-4b93-bd22-e977efeff479', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1148e5fd0>]}
[0m12:35:11.489872 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.85s]
[0m12:35:11.490821 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m12:35:11.492668 [debug] [MainThread]: Using duckdb connection "master"
[0m12:35:11.493270 [debug] [MainThread]: On master: BEGIN
[0m12:35:11.493721 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m12:35:11.496200 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m12:35:11.497066 [debug] [MainThread]: On master: COMMIT
[0m12:35:11.498299 [debug] [MainThread]: Using duckdb connection "master"
[0m12:35:11.498900 [debug] [MainThread]: On master: COMMIT
[0m12:35:11.501350 [debug] [MainThread]: SQL status: OK in 0.001 seconds
[0m12:35:11.503288 [debug] [MainThread]: On master: Close
[0m12:35:11.506475 [debug] [MainThread]: Connection 'master' was properly closed.
[0m12:35:11.507689 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m12:35:11.508624 [info ] [MainThread]: 
[0m12:35:11.509403 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 13.02 seconds (13.02s).
[0m12:35:11.511862 [debug] [MainThread]: Command end result
[0m12:35:11.554418 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:35:11.557613 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:35:11.567690 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m12:35:11.568240 [info ] [MainThread]: 
[0m12:35:11.568851 [info ] [MainThread]: [32mCompleted successfully[0m
[0m12:35:11.569630 [info ] [MainThread]: 
[0m12:35:11.570156 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m12:35:11.573970 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 15.427352, "process_in_blocks": "0", "process_kernel_time": 1.076341, "process_mem_max_rss": "371277824", "process_out_blocks": "0", "process_user_time": 10.11621}
[0m12:35:11.575668 [debug] [MainThread]: Command `dbt run` succeeded at 12:35:11.575462 after 15.43 seconds
[0m12:35:11.576408 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113ca6960>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113ca67b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114345ee0>]}
[0m12:35:11.577029 [debug] [MainThread]: Flushing usage events
[0m12:35:12.091745 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:36:29.396813 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c35ff50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f8db020>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f8dac90>]}


============================== 12:36:29.404444 | e481a564-9cb7-4102-a72b-29716304fae9 ==============================
[0m12:36:29.404444 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:36:29.405399 [debug] [MainThread]: running dbt with arguments {'write_json': 'True', 'warn_error': 'None', 'send_anonymous_usage_stats': 'True', 'log_format': 'default', 'partial_parse': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'use_experimental_parser': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'fail_fast': 'False', 'no_print': 'None', 'version_check': 'True', 'use_colors': 'True', 'cache_selected_only': 'False', 'target_path': 'None', 'quiet': 'False', 'debug': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'introspect': 'True', 'log_cache_events': 'False', 'static_parser': 'True', 'indirect_selection': 'eager', 'printer_width': '80', 'empty': 'None'}
[0m12:36:29.731750 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'e481a564-9cb7-4102-a72b-29716304fae9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ec0f500>]}
[0m12:36:29.817566 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'e481a564-9cb7-4102-a72b-29716304fae9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f2630b0>]}
[0m12:36:29.821359 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:36:29.989939 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:36:30.092086 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m12:36:30.092737 [debug] [MainThread]: previous checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, current checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e
[0m12:36:30.093159 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'e481a564-9cb7-4102-a72b-29716304fae9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fdc9f70>]}
[0m12:36:31.619852 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'e481a564-9cb7-4102-a72b-29716304fae9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fed3c20>]}
[0m12:36:31.694831 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:36:31.698383 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:36:31.740530 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'e481a564-9cb7-4102-a72b-29716304fae9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1100b4b60>]}
[0m12:36:31.741498 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:36:31.742313 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'e481a564-9cb7-4102-a72b-29716304fae9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1100eccb0>]}
[0m12:36:31.744230 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:36:31.745132 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:36:31.745928 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:36:31.746822 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:36:31.747626 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:36:31.748405 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:36:31.749181 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:36:31.753448 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 2.4548368, "process_in_blocks": "0", "process_kernel_time": 0.52103, "process_mem_max_rss": "124936192", "process_out_blocks": "0", "process_user_time": 4.15962}
[0m12:36:31.754292 [debug] [MainThread]: Command `dbt ls` succeeded at 12:36:31.754117 after 2.46 seconds
[0m12:36:31.754953 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f7b2bd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1100b3f20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fe79ac0>]}
[0m12:36:31.755567 [debug] [MainThread]: Flushing usage events
[0m12:36:32.235707 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:41:05.048313 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110131a90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1107aeff0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1107aec60>]}


============================== 12:41:05.053567 | 1282994c-bdce-4c73-bf2c-024f4a009262 ==============================
[0m12:41:05.053567 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:41:05.054264 [debug] [MainThread]: running dbt with arguments {'send_anonymous_usage_stats': 'True', 'version_check': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'warn_error': 'None', 'no_print': 'None', 'use_experimental_parser': 'False', 'debug': 'False', 'introspect': 'True', 'partial_parse': 'True', 'quiet': 'False', 'cache_selected_only': 'False', 'indirect_selection': 'eager', 'log_format': 'default', 'printer_width': '80', 'target_path': 'None', 'empty': 'None', 'use_colors': 'True', 'log_cache_events': 'False', 'fail_fast': 'False', 'static_parser': 'True', 'write_json': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs'}
[0m12:41:05.349451 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '1282994c-bdce-4c73-bf2c-024f4a009262', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1107923c0>]}
[0m12:41:05.433180 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '1282994c-bdce-4c73-bf2c-024f4a009262', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e14e840>]}
[0m12:41:05.435299 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:41:05.589215 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:41:05.714607 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:41:05.715180 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:41:05.772050 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '1282994c-bdce-4c73-bf2c-024f4a009262', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1107de810>]}
[0m12:41:05.864348 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:41:05.867552 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:41:05.885715 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '1282994c-bdce-4c73-bf2c-024f4a009262', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110c32210>]}
[0m12:41:05.886462 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:41:05.886901 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '1282994c-bdce-4c73-bf2c-024f4a009262', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1108badb0>]}
[0m12:41:05.888211 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:41:05.888979 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:41:05.889651 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:41:05.890233 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:41:05.890789 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:41:05.891460 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:41:05.892036 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:41:05.895018 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.9347864, "process_in_blocks": "0", "process_kernel_time": 0.310216, "process_mem_max_rss": "121028608", "process_out_blocks": "0", "process_user_time": 2.485328}
[0m12:41:05.895904 [debug] [MainThread]: Command `dbt ls` succeeded at 12:41:05.895737 after 0.94 seconds
[0m12:41:05.896587 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1107aed80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1107aec60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110131a90>]}
[0m12:41:05.897313 [debug] [MainThread]: Flushing usage events
[0m12:41:06.397710 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:41:20.245791 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x103f17140>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104bbb080>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104bbacc0>]}


============================== 12:41:20.251169 | 20709999-f732-46d8-aba8-454f4950adc9 ==============================
[0m12:41:20.251169 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:41:20.251862 [debug] [MainThread]: running dbt with arguments {'indirect_selection': 'eager', 'invocation_command': 'dbt ls --resource-type model --output json', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_cache_events': 'False', 'warn_error': 'None', 'send_anonymous_usage_stats': 'True', 'cache_selected_only': 'False', 'log_format': 'default', 'target_path': 'None', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'static_parser': 'True', 'fail_fast': 'False', 'no_print': 'None', 'introspect': 'True', 'version_check': 'True', 'write_json': 'True', 'use_experimental_parser': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'debug': 'False', 'partial_parse': 'True', 'empty': 'None', 'printer_width': '80', 'use_colors': 'True', 'quiet': 'False'}
[0m12:41:20.546602 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '20709999-f732-46d8-aba8-454f4950adc9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104bea690>]}
[0m12:41:20.622815 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '20709999-f732-46d8-aba8-454f4950adc9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x102f67ce0>]}
[0m12:41:20.624900 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:41:20.771537 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:41:20.893456 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:41:20.893925 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:41:20.937484 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '20709999-f732-46d8-aba8-454f4950adc9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104c55790>]}
[0m12:41:21.018787 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:41:21.021340 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:41:21.036561 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '20709999-f732-46d8-aba8-454f4950adc9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105085700>]}
[0m12:41:21.037194 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:41:21.037611 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '20709999-f732-46d8-aba8-454f4950adc9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104fa3710>]}
[0m12:41:21.038874 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:41:21.039493 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:41:21.040050 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:41:21.040594 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:41:21.041137 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:41:21.041677 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:41:21.042218 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:41:21.044826 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.88684165, "process_in_blocks": "0", "process_kernel_time": 0.274, "process_mem_max_rss": "121282560", "process_out_blocks": "0", "process_user_time": 2.344533}
[0m12:41:21.045511 [debug] [MainThread]: Command `dbt ls` succeeded at 12:41:21.045367 after 0.89 seconds
[0m12:41:21.046018 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104fa0c80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104fa3710>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104bbae70>]}
[0m12:41:21.046460 [debug] [MainThread]: Flushing usage events
[0m12:41:21.478444 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:43:20.898241 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107b57740>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107bc3020>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107bc2c90>]}


============================== 12:43:20.903594 | c36712e5-3eb0-4da0-9bdd-fe8c58835bb1 ==============================
[0m12:43:20.903594 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:43:20.904274 [debug] [MainThread]: running dbt with arguments {'empty': 'None', 'log_format': 'default', 'version_check': 'True', 'log_cache_events': 'False', 'use_experimental_parser': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'write_json': 'True', 'cache_selected_only': 'False', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True', 'fail_fast': 'False', 'indirect_selection': 'eager', 'warn_error': 'None', 'no_print': 'None', 'target_path': 'None', 'introspect': 'True', 'use_colors': 'True', 'printer_width': '80', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'debug': 'False', 'partial_parse': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'quiet': 'False'}
[0m12:43:21.202264 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'c36712e5-3eb0-4da0-9bdd-fe8c58835bb1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107c8eb70>]}
[0m12:43:21.281001 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'c36712e5-3eb0-4da0-9bdd-fe8c58835bb1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107bc29c0>]}
[0m12:43:21.282991 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:43:21.429229 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:43:21.549151 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:43:21.549681 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:43:21.592304 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'c36712e5-3eb0-4da0-9bdd-fe8c58835bb1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107e0b950>]}
[0m12:43:21.673555 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:43:21.676099 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:43:21.690728 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'c36712e5-3eb0-4da0-9bdd-fe8c58835bb1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107547770>]}
[0m12:43:21.691342 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:43:21.691756 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'c36712e5-3eb0-4da0-9bdd-fe8c58835bb1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10640ffe0>]}
[0m12:43:21.693026 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:43:21.693643 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:43:21.694198 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:43:21.694741 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:43:21.695280 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:43:21.695825 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:43:21.696378 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:43:21.698994 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.8880389, "process_in_blocks": "0", "process_kernel_time": 0.287863, "process_mem_max_rss": "121147392", "process_out_blocks": "0", "process_user_time": 2.420667}
[0m12:43:21.699607 [debug] [MainThread]: Command `dbt ls` succeeded at 12:43:21.699478 after 0.89 seconds
[0m12:43:21.700225 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10818c080>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ddbd10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106eeb020>]}
[0m12:43:21.700685 [debug] [MainThread]: Flushing usage events
[0m12:43:22.412824 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:44:00.327567 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106524050>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10abcb140>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10abcacc0>]}


============================== 12:44:00.333198 | ee9037dd-9b4d-48c3-aa30-49c4bd781765 ==============================
[0m12:44:00.333198 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:44:00.333925 [debug] [MainThread]: running dbt with arguments {'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'cache_selected_only': 'False', 'partial_parse': 'True', 'target_path': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'version_check': 'True', 'indirect_selection': 'eager', 'write_json': 'True', 'empty': 'None', 'use_experimental_parser': 'False', 'quiet': 'False', 'introspect': 'True', 'log_cache_events': 'False', 'debug': 'False', 'static_parser': 'True', 'use_colors': 'True', 'send_anonymous_usage_stats': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'fail_fast': 'False', 'warn_error': 'None', 'no_print': 'None', 'log_format': 'default', 'printer_width': '80', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl'}
[0m12:44:00.631880 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'ee9037dd-9b4d-48c3-aa30-49c4bd781765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ab7d460>]}
[0m12:44:00.708791 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'ee9037dd-9b4d-48c3-aa30-49c4bd781765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10abcab40>]}
[0m12:44:00.710815 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:44:00.854410 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:44:00.978342 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:44:00.978823 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:44:01.022399 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'ee9037dd-9b4d-48c3-aa30-49c4bd781765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ae83110>]}
[0m12:44:01.104831 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:44:01.107362 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:44:01.122561 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'ee9037dd-9b4d-48c3-aa30-49c4bd781765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b092e70>]}
[0m12:44:01.123163 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:44:01.123579 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'ee9037dd-9b4d-48c3-aa30-49c4bd781765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b19b860>]}
[0m12:44:01.124828 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:44:01.125447 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:44:01.125999 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:44:01.126540 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:44:01.127084 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:44:01.127626 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:44:01.128173 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:44:01.130815 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.89413774, "process_in_blocks": "0", "process_kernel_time": 0.294361, "process_mem_max_rss": "121602048", "process_out_blocks": "0", "process_user_time": 2.350788}
[0m12:44:01.131460 [debug] [MainThread]: Command `dbt ls` succeeded at 12:44:01.131327 after 0.89 seconds
[0m12:44:01.132029 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10abcb080>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10abcacc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106524050>]}
[0m12:44:01.132470 [debug] [MainThread]: Flushing usage events
[0m12:44:01.565703 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:44:24.218509 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111684800>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1116d2f30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1116d2ba0>]}


============================== 12:44:24.224781 | b931ad26-f4e3-4e4c-870d-7a4c63f78c62 ==============================
[0m12:44:24.224781 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:44:24.225692 [debug] [MainThread]: running dbt with arguments {'empty': 'None', 'use_colors': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'quiet': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'use_experimental_parser': 'False', 'introspect': 'True', 'log_format': 'default', 'debug': 'False', 'send_anonymous_usage_stats': 'True', 'no_print': 'None', 'static_parser': 'True', 'fail_fast': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_cache_events': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'target_path': 'None', 'partial_parse': 'True', 'write_json': 'True', 'printer_width': '80', 'warn_error': 'None', 'version_check': 'True', 'cache_selected_only': 'False', 'indirect_selection': 'eager'}
[0m12:44:24.570890 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'b931ad26-f4e3-4e4c-870d-7a4c63f78c62', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1118c8170>]}
[0m12:44:24.657607 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'b931ad26-f4e3-4e4c-870d-7a4c63f78c62', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111156ab0>]}
[0m12:44:24.659649 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:44:24.805603 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:44:24.929294 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:44:24.929775 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:44:24.973843 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'b931ad26-f4e3-4e4c-870d-7a4c63f78c62', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111809700>]}
[0m12:44:25.056699 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:44:25.059185 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:44:25.073890 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'b931ad26-f4e3-4e4c-870d-7a4c63f78c62', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111b54b60>]}
[0m12:44:25.074499 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:44:25.074915 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'b931ad26-f4e3-4e4c-870d-7a4c63f78c62', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1118e76e0>]}
[0m12:44:25.076141 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:44:25.076751 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:44:25.077305 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:44:25.077850 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:44:25.078422 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:44:25.079024 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:44:25.079574 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:44:25.082217 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.95761585, "process_in_blocks": "0", "process_kernel_time": 0.293692, "process_mem_max_rss": "120979456", "process_out_blocks": "0", "process_user_time": 2.451376}
[0m12:44:25.082873 [debug] [MainThread]: Command `dbt ls` succeeded at 12:44:25.082737 after 0.96 seconds
[0m12:44:25.083369 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1116d2cc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111987410>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1119395b0>]}
[0m12:44:25.083892 [debug] [MainThread]: Flushing usage events
[0m12:44:25.521771 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:48:43.055838 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109f95280>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109fe2e10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109fe2a80>]}


============================== 12:48:43.063276 | b727cc85-6671-4c70-8c89-f7181d0a28f9 ==============================
[0m12:48:43.063276 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:48:43.064139 [debug] [MainThread]: running dbt with arguments {'static_parser': 'True', 'debug': 'False', 'partial_parse': 'True', 'version_check': 'True', 'warn_error': 'None', 'fail_fast': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'introspect': 'True', 'no_print': 'None', 'log_cache_events': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'printer_width': '80', 'quiet': 'False', 'cache_selected_only': 'False', 'write_json': 'True', 'target_path': 'None', 'log_format': 'default', 'indirect_selection': 'eager', 'use_experimental_parser': 'False', 'send_anonymous_usage_stats': 'True', 'use_colors': 'True', 'empty': 'None'}
[0m12:48:43.375513 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'b727cc85-6671-4c70-8c89-f7181d0a28f9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a1d47a0>]}
[0m12:48:43.451645 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'b727cc85-6671-4c70-8c89-f7181d0a28f9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a013a70>]}
[0m12:48:43.455367 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:48:43.627387 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:48:43.802217 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:48:43.802711 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:48:43.846178 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'b727cc85-6671-4c70-8c89-f7181d0a28f9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a3c4aa0>]}
[0m12:48:43.927035 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:48:43.930325 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:48:43.966196 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'b727cc85-6671-4c70-8c89-f7181d0a28f9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a3c7d10>]}
[0m12:48:43.966783 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:48:43.967214 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'b727cc85-6671-4c70-8c89-f7181d0a28f9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109a64b30>]}
[0m12:48:43.968568 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:48:43.969225 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:48:43.969807 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:48:43.970382 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:48:43.970950 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:48:43.971524 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:48:43.972096 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:48:43.975621 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0171617, "process_in_blocks": "0", "process_kernel_time": 0.487433, "process_mem_max_rss": "120455168", "process_out_blocks": "0", "process_user_time": 2.750929}
[0m12:48:43.976433 [debug] [MainThread]: Command `dbt ls` succeeded at 12:48:43.976289 after 1.02 seconds
[0m12:48:43.976941 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109dc7920>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a29b440>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109a64b30>]}
[0m12:48:43.977402 [debug] [MainThread]: Flushing usage events
[0m12:48:44.424316 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:53:48.470169 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105ed8380>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10651af60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10651aba0>]}


============================== 12:53:48.477854 | 03dcb0f3-fe83-441e-9704-b2a01d475bdd ==============================
[0m12:53:48.477854 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:53:48.478902 [debug] [MainThread]: running dbt with arguments {'quiet': 'False', 'cache_selected_only': 'False', 'write_json': 'True', 'fail_fast': 'False', 'log_cache_events': 'False', 'version_check': 'True', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'introspect': 'True', 'debug': 'False', 'send_anonymous_usage_stats': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'static_parser': 'True', 'empty': 'None', 'printer_width': '80', 'invocation_command': 'dbt ls --resource-type model --output json', 'use_colors': 'True', 'warn_error': 'None', 'partial_parse': 'True', 'no_print': 'None', 'indirect_selection': 'eager', 'log_format': 'default', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'use_experimental_parser': 'False'}
[0m12:53:48.791534 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '03dcb0f3-fe83-441e-9704-b2a01d475bdd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1066e2db0>]}
[0m12:53:48.869207 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '03dcb0f3-fe83-441e-9704-b2a01d475bdd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105edb020>]}
[0m12:53:48.873009 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:53:49.033713 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:53:49.209188 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:53:49.209662 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:53:49.253193 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '03dcb0f3-fe83-441e-9704-b2a01d475bdd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1067cf470>]}
[0m12:53:49.334902 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:53:49.338402 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:53:49.375243 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '03dcb0f3-fe83-441e-9704-b2a01d475bdd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10695db20>]}
[0m12:53:49.375898 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:53:49.376404 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '03dcb0f3-fe83-441e-9704-b2a01d475bdd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1068f93d0>]}
[0m12:53:49.377844 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:53:49.378576 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:53:49.379240 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:53:49.379895 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:53:49.380547 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:53:49.381214 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:53:49.381797 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:53:49.385614 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0109197, "process_in_blocks": "0", "process_kernel_time": 0.463175, "process_mem_max_rss": "121765888", "process_out_blocks": "0", "process_user_time": 2.741958}
[0m12:53:49.386463 [debug] [MainThread]: Command `dbt ls` succeeded at 12:53:49.386291 after 1.01 seconds
[0m12:53:49.387031 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105bc66f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105e9d430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106648a40>]}
[0m12:53:49.387496 [debug] [MainThread]: Flushing usage events
[0m12:53:49.894636 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:38:13.243709 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f4f6cc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f6c7590>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f6c7050>]}


============================== 13:38:13.251324 | d86e36bb-f2a3-4958-9326-061f2da8eabe ==============================
[0m13:38:13.251324 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:38:13.252211 [debug] [MainThread]: running dbt with arguments {'introspect': 'True', 'partial_parse': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'indirect_selection': 'eager', 'write_json': 'True', 'empty': 'None', 'cache_selected_only': 'False', 'send_anonymous_usage_stats': 'True', 'version_check': 'True', 'target_path': 'None', 'use_colors': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'printer_width': '80', 'debug': 'False', 'log_cache_events': 'False', 'quiet': 'False', 'fail_fast': 'False', 'warn_error': 'None', 'static_parser': 'True', 'log_format': 'default', 'use_experimental_parser': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'invocation_command': 'dbt ls --resource-type model --output json', 'no_print': 'None'}
[0m13:38:13.590628 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'd86e36bb-f2a3-4958-9326-061f2da8eabe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f765370>]}
[0m13:38:13.676972 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'd86e36bb-f2a3-4958-9326-061f2da8eabe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e9fba10>]}
[0m13:38:13.680380 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:38:13.851811 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:38:14.026210 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:38:14.026699 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:38:14.073470 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'd86e36bb-f2a3-4958-9326-061f2da8eabe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f933b00>]}
[0m13:38:14.158792 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:38:14.162302 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:38:14.201241 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'd86e36bb-f2a3-4958-9326-061f2da8eabe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fb969f0>]}
[0m13:38:14.202035 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:38:14.202647 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'd86e36bb-f2a3-4958-9326-061f2da8eabe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f745430>]}
[0m13:38:14.204434 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:38:14.205355 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:38:14.206178 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:38:14.207141 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:38:14.207812 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:38:14.208470 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:38:14.209235 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:38:14.212963 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0698248, "process_in_blocks": "0", "process_kernel_time": 0.566254, "process_mem_max_rss": "120578048", "process_out_blocks": "0", "process_user_time": 2.901519}
[0m13:38:14.213864 [debug] [MainThread]: Command `dbt ls` succeeded at 13:38:14.213698 after 1.07 seconds
[0m13:38:14.214454 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f4f4830>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f59ab10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fc95e50>]}
[0m13:38:14.214999 [debug] [MainThread]: Flushing usage events
[0m13:38:14.668964 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:41:02.032894 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aeffe60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cae3cb0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cb4eff0>]}


============================== 13:41:02.038139 | db546658-ff9a-4bc6-98cb-3ceefedcb224 ==============================
[0m13:41:02.038139 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:41:02.038859 [debug] [MainThread]: running dbt with arguments {'use_experimental_parser': 'False', 'printer_width': '80', 'debug': 'False', 'warn_error': 'None', 'no_print': 'None', 'cache_selected_only': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'log_format': 'default', 'quiet': 'False', 'empty': 'None', 'use_colors': 'True', 'send_anonymous_usage_stats': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'introspect': 'True', 'target_path': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'static_parser': 'True', 'partial_parse': 'True', 'indirect_selection': 'eager', 'fail_fast': 'False', 'write_json': 'True', 'version_check': 'True', 'log_cache_events': 'False'}
[0m13:41:02.331669 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'db546658-ff9a-4bc6-98cb-3ceefedcb224', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cbeddc0>]}
[0m13:41:02.407842 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'db546658-ff9a-4bc6-98cb-3ceefedcb224', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ccf66c0>]}
[0m13:41:02.410129 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:41:02.587644 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:41:02.711503 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:41:02.711996 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:41:02.755727 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'db546658-ff9a-4bc6-98cb-3ceefedcb224', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cd9a000>]}
[0m13:41:02.837745 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:41:02.840337 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:41:02.855367 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'db546658-ff9a-4bc6-98cb-3ceefedcb224', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cf95910>]}
[0m13:41:02.856016 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:41:02.856457 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'db546658-ff9a-4bc6-98cb-3ceefedcb224', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cb4d610>]}
[0m13:41:02.857715 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:41:02.858392 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:41:02.858986 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:41:02.859538 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:41:02.860090 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:41:02.860640 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:41:02.861191 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:41:02.864160 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.91760665, "process_in_blocks": "0", "process_kernel_time": 0.290536, "process_mem_max_rss": "120811520", "process_out_blocks": "0", "process_user_time": 2.332209}
[0m13:41:02.864983 [debug] [MainThread]: Command `dbt ls` succeeded at 13:41:02.864848 after 0.92 seconds
[0m13:41:02.865480 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c933440>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d0f6180>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cd695b0>]}
[0m13:41:02.866041 [debug] [MainThread]: Flushing usage events
[0m13:41:03.342079 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:44:28.360402 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11167e6c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11199b380>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11199ae40>]}


============================== 13:44:28.365837 | e07383ae-761f-400a-98aa-44e3b5511233 ==============================
[0m13:44:28.365837 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:44:28.366552 [debug] [MainThread]: running dbt with arguments {'fail_fast': 'False', 'write_json': 'True', 'use_experimental_parser': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'printer_width': '80', 'debug': 'False', 'log_cache_events': 'False', 'no_print': 'None', 'partial_parse': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'use_colors': 'True', 'send_anonymous_usage_stats': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'target_path': 'None', 'static_parser': 'True', 'version_check': 'True', 'introspect': 'True', 'log_format': 'default', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'indirect_selection': 'eager', 'empty': 'None', 'cache_selected_only': 'False', 'warn_error': 'None', 'quiet': 'False'}
[0m13:44:28.667923 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'e07383ae-761f-400a-98aa-44e3b5511233', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f28d0d0>]}
[0m13:44:28.746810 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'e07383ae-761f-400a-98aa-44e3b5511233', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1117c4ce0>]}
[0m13:44:28.749007 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:44:28.906827 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:44:29.036304 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:44:29.036846 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:44:29.084793 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'e07383ae-761f-400a-98aa-44e3b5511233', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111ad3560>]}
[0m13:44:29.175547 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:44:29.179086 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:44:29.195352 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'e07383ae-761f-400a-98aa-44e3b5511233', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111ddee10>]}
[0m13:44:29.196068 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:44:29.196535 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'e07383ae-761f-400a-98aa-44e3b5511233', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111f45430>]}
[0m13:44:29.197920 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:44:29.198608 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:44:29.199203 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:44:29.199784 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:44:29.200367 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:44:29.200947 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:44:29.201533 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:44:29.204347 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.93203956, "process_in_blocks": "0", "process_kernel_time": 0.308824, "process_mem_max_rss": "120782848", "process_out_blocks": "0", "process_user_time": 2.405623}
[0m13:44:29.205130 [debug] [MainThread]: Command `dbt ls` succeeded at 13:44:29.204922 after 0.93 seconds
[0m13:44:29.205697 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111169c70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111f3f890>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11199b380>]}
[0m13:44:29.206177 [debug] [MainThread]: Flushing usage events
[0m13:44:29.655861 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:46:57.779398 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10699be30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106a07440>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106a06ed0>]}


============================== 13:46:57.786403 | 999069f2-4145-463b-bb79-bb5dd0918583 ==============================
[0m13:46:57.786403 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:46:57.787220 [debug] [MainThread]: running dbt with arguments {'version_check': 'True', 'use_colors': 'True', 'debug': 'False', 'indirect_selection': 'eager', 'partial_parse': 'True', 'warn_error': 'None', 'printer_width': '80', 'static_parser': 'True', 'log_cache_events': 'False', 'quiet': 'False', 'empty': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'send_anonymous_usage_stats': 'True', 'log_format': 'default', 'cache_selected_only': 'False', 'target_path': 'None', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'invocation_command': 'dbt ls --resource-type model --output json', 'fail_fast': 'False', 'introspect': 'True', 'use_experimental_parser': 'False', 'write_json': 'True', 'no_print': 'None'}
[0m13:46:58.113827 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '999069f2-4145-463b-bb79-bb5dd0918583', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106aa12b0>]}
[0m13:46:58.197038 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '999069f2-4145-463b-bb79-bb5dd0918583', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105c22060>]}
[0m13:46:58.199153 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:46:58.351102 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:46:58.477153 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:46:58.477632 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:46:58.521226 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '999069f2-4145-463b-bb79-bb5dd0918583', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106c4e240>]}
[0m13:46:58.604713 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:46:58.607066 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:46:58.622248 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '999069f2-4145-463b-bb79-bb5dd0918583', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106e073b0>]}
[0m13:46:58.622827 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:46:58.623263 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '999069f2-4145-463b-bb79-bb5dd0918583', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106fd3d10>]}
[0m13:46:58.624488 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:46:58.625120 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:46:58.625681 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:46:58.626286 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:46:58.626860 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:46:58.627423 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:46:58.627976 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:46:58.631331 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.96470976, "process_in_blocks": "0", "process_kernel_time": 0.353438, "process_mem_max_rss": "120471552", "process_out_blocks": "0", "process_user_time": 2.586018}
[0m13:46:58.632053 [debug] [MainThread]: Command `dbt ls` succeeded at 13:46:58.631917 after 0.97 seconds
[0m13:46:58.632628 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106a071d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106a07380>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106a073b0>]}
[0m13:46:58.633099 [debug] [MainThread]: Flushing usage events
[0m13:46:59.113609 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:50:37.758986 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1115dc680>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112547410>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112546ea0>]}


============================== 13:50:37.766987 | b40dbba9-fdfc-4983-b8c2-144e1f65fddd ==============================
[0m13:50:37.766987 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:50:37.768081 [debug] [MainThread]: running dbt with arguments {'send_anonymous_usage_stats': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'empty': 'None', 'use_colors': 'True', 'log_format': 'default', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'introspect': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'indirect_selection': 'eager', 'no_print': 'None', 'partial_parse': 'True', 'target_path': 'None', 'version_check': 'True', 'warn_error': 'None', 'cache_selected_only': 'False', 'debug': 'False', 'fail_fast': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'write_json': 'True', 'printer_width': '80', 'use_experimental_parser': 'False', 'static_parser': 'True', 'log_cache_events': 'False'}
[0m13:50:38.098051 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'b40dbba9-fdfc-4983-b8c2-144e1f65fddd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1125c5280>]}
[0m13:50:38.175842 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'b40dbba9-fdfc-4983-b8c2-144e1f65fddd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111e912e0>]}
[0m13:50:38.179964 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:50:38.351897 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:50:38.519883 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:50:38.520394 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:50:38.566040 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'b40dbba9-fdfc-4983-b8c2-144e1f65fddd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1127d5580>]}
[0m13:50:38.672846 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:50:38.676491 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:50:38.708834 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'b40dbba9-fdfc-4983-b8c2-144e1f65fddd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112b1bef0>]}
[0m13:50:38.709553 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:50:38.710025 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'b40dbba9-fdfc-4983-b8c2-144e1f65fddd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110dc85c0>]}
[0m13:50:38.711795 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:50:38.712758 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:50:38.713432 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:50:38.714041 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:50:38.714656 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:50:38.715265 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:50:38.716042 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:50:38.719645 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.058267, "process_in_blocks": "0", "process_kernel_time": 0.542544, "process_mem_max_rss": "120598528", "process_out_blocks": "0", "process_user_time": 2.905716}
[0m13:50:38.720627 [debug] [MainThread]: Command `dbt ls` succeeded at 13:50:38.720440 after 1.06 seconds
[0m13:50:38.721217 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111e730b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112546ea0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112547320>]}
[0m13:50:38.721711 [debug] [MainThread]: Flushing usage events
[0m13:50:39.180256 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:50:49.285874 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1065f7e00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1066673b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106666e70>]}


============================== 13:50:49.292811 | f516c78d-a5ea-47e8-897a-8ee23844d93d ==============================
[0m13:50:49.292811 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:50:49.293746 [debug] [MainThread]: running dbt with arguments {'cache_selected_only': 'False', 'target_path': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'partial_parse': 'True', 'use_colors': 'True', 'log_cache_events': 'False', 'no_print': 'None', 'fail_fast': 'False', 'use_experimental_parser': 'False', 'write_json': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'log_format': 'default', 'version_check': 'True', 'static_parser': 'True', 'empty': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'quiet': 'False', 'introspect': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'warn_error': 'None', 'printer_width': '80', 'indirect_selection': 'eager', 'send_anonymous_usage_stats': 'True', 'debug': 'False'}
[0m13:50:49.620080 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'f516c78d-a5ea-47e8-897a-8ee23844d93d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10685cdd0>]}
[0m13:50:49.702438 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'f516c78d-a5ea-47e8-897a-8ee23844d93d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1059109b0>]}
[0m13:50:49.704483 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:50:49.854882 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:50:50.006689 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:50:50.007243 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:50:50.055967 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'f516c78d-a5ea-47e8-897a-8ee23844d93d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106917680>]}
[0m13:50:50.166943 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:50:50.169727 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:50:50.185457 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'f516c78d-a5ea-47e8-897a-8ee23844d93d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106b2eae0>]}
[0m13:50:50.186104 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:50:50.186554 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'f516c78d-a5ea-47e8-897a-8ee23844d93d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106701430>]}
[0m13:50:50.187862 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:50:50.188564 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:50:50.189235 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:50:50.189830 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:50:50.190535 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:50:50.191175 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:50:50.191777 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:50:50.194645 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0130355, "process_in_blocks": "0", "process_kernel_time": 0.345255, "process_mem_max_rss": "121483264", "process_out_blocks": "0", "process_user_time": 2.614891}
[0m13:50:50.195532 [debug] [MainThread]: Command `dbt ls` succeeded at 13:50:50.195311 after 1.01 seconds
[0m13:50:50.196104 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106667170>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1066670e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106713980>]}
[0m13:50:50.196671 [debug] [MainThread]: Flushing usage events
[0m13:50:50.643270 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:51:11.171228 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a9ec680>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ab7f620>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ab7f0e0>]}


============================== 13:51:11.178655 | 982f19c8-6b44-47c0-baa7-155b6e4c06ce ==============================
[0m13:51:11.178655 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:51:11.179426 [debug] [MainThread]: running dbt with arguments {'version_check': 'True', 'cache_selected_only': 'False', 'use_experimental_parser': 'False', 'debug': 'False', 'target_path': 'None', 'log_cache_events': 'False', 'quiet': 'False', 'log_format': 'default', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'no_print': 'None', 'use_colors': 'True', 'warn_error': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'partial_parse': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'write_json': 'True', 'send_anonymous_usage_stats': 'True', 'empty': 'None', 'indirect_selection': 'eager', 'printer_width': '80', 'introspect': 'True', 'fail_fast': 'False'}
[0m13:51:11.496583 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '982f19c8-6b44-47c0-baa7-155b6e4c06ce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108474f50>]}
[0m13:51:11.574367 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '982f19c8-6b44-47c0-baa7-155b6e4c06ce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a9ee090>]}
[0m13:51:11.578447 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:51:11.723934 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:51:11.849483 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:51:11.850002 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:51:11.896826 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '982f19c8-6b44-47c0-baa7-155b6e4c06ce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ae3b560>]}
[0m13:51:11.986284 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:51:11.989027 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:51:12.005514 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '982f19c8-6b44-47c0-baa7-155b6e4c06ce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10afc70b0>]}
[0m13:51:12.006165 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:51:12.006614 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '982f19c8-6b44-47c0-baa7-155b6e4c06ce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ae0d6d0>]}
[0m13:51:12.008014 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:51:12.008750 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:51:12.009534 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:51:12.010333 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:51:12.011039 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:51:12.011633 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:51:12.012202 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:51:12.015732 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.9403434, "process_in_blocks": "0", "process_kernel_time": 0.484441, "process_mem_max_rss": "120922112", "process_out_blocks": "0", "process_user_time": 2.840074}
[0m13:51:12.016538 [debug] [MainThread]: Command `dbt ls` succeeded at 13:51:12.016387 after 0.94 seconds
[0m13:51:12.017081 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ab35820>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ab7f320>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ae0d6d0>]}
[0m13:51:12.017553 [debug] [MainThread]: Flushing usage events
[0m13:51:12.432322 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:52:32.125161 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111a23f20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11409eae0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1141cb020>]}


============================== 13:52:32.132454 | c8deca06-95ac-4269-97dd-de669719a43c ==============================
[0m13:52:32.132454 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:52:32.133265 [debug] [MainThread]: running dbt with arguments {'no_print': 'None', 'quiet': 'False', 'warn_error': 'None', 'static_parser': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_format': 'default', 'use_experimental_parser': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'write_json': 'True', 'version_check': 'True', 'introspect': 'True', 'fail_fast': 'False', 'empty': 'None', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'printer_width': '80', 'send_anonymous_usage_stats': 'True', 'partial_parse': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'cache_selected_only': 'False', 'use_colors': 'True', 'log_cache_events': 'False', 'debug': 'False', 'indirect_selection': 'eager', 'target_path': 'None'}
[0m13:52:32.449063 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'c8deca06-95ac-4269-97dd-de669719a43c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11352bb00>]}
[0m13:52:32.557410 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'c8deca06-95ac-4269-97dd-de669719a43c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11429b050>]}
[0m13:52:32.560890 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:52:32.728497 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:52:32.903511 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:52:32.904008 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:52:32.948296 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'c8deca06-95ac-4269-97dd-de669719a43c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1143df9e0>]}
[0m13:52:33.035682 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:52:33.040535 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:52:33.073978 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'c8deca06-95ac-4269-97dd-de669719a43c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114681b50>]}
[0m13:52:33.074697 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:52:33.075224 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'c8deca06-95ac-4269-97dd-de669719a43c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1143df620>]}
[0m13:52:33.076791 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:52:33.077553 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:52:33.078234 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:52:33.078901 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:52:33.079488 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:52:33.080079 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:52:33.080668 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:52:33.084073 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0603223, "process_in_blocks": "0", "process_kernel_time": 0.503607, "process_mem_max_rss": "120557568", "process_out_blocks": "0", "process_user_time": 2.783916}
[0m13:52:33.084799 [debug] [MainThread]: Command `dbt ls` succeeded at 13:52:33.084656 after 1.06 seconds
[0m13:52:33.085322 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1141cb350>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1143df620>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114448950>]}
[0m13:52:33.085798 [debug] [MainThread]: Flushing usage events
[0m13:52:33.570264 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:55:04.530801 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110dd7fb0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111427ce0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111492ed0>]}


============================== 13:55:04.536161 | 1edb875a-15cf-490d-a14b-68e30d62616e ==============================
[0m13:55:04.536161 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:55:04.536850 [debug] [MainThread]: running dbt with arguments {'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'quiet': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'indirect_selection': 'eager', 'send_anonymous_usage_stats': 'True', 'write_json': 'True', 'empty': 'None', 'fail_fast': 'False', 'use_colors': 'True', 'warn_error': 'None', 'use_experimental_parser': 'False', 'introspect': 'True', 'cache_selected_only': 'False', 'log_cache_events': 'False', 'debug': 'False', 'version_check': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'no_print': 'None', 'partial_parse': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'static_parser': 'True', 'log_format': 'default', 'printer_width': '80', 'target_path': 'None'}
[0m13:55:04.835203 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '1edb875a-15cf-490d-a14b-68e30d62616e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111529070>]}
[0m13:55:04.914444 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '1edb875a-15cf-490d-a14b-68e30d62616e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1116cc4a0>]}
[0m13:55:04.916720 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:55:05.060286 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:55:05.158964 [info ] [MainThread]: Unable to do partial parsing because a project config has changed
[0m13:55:05.159575 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '1edb875a-15cf-490d-a14b-68e30d62616e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110e313a0>]}
[0m13:55:06.781635 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '1edb875a-15cf-490d-a14b-68e30d62616e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1115c1c10>]}
[0m13:55:06.863098 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:55:06.865701 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:55:06.880549 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '1edb875a-15cf-490d-a14b-68e30d62616e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111b0e750>]}
[0m13:55:06.881132 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:55:06.881624 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '1edb875a-15cf-490d-a14b-68e30d62616e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111b740b0>]}
[0m13:55:06.882913 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:55:06.883608 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:55:06.884213 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:55:06.884841 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:55:06.885590 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:55:06.886184 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:55:06.886965 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:55:06.889606 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 2.446364, "process_in_blocks": "0", "process_kernel_time": 0.376511, "process_mem_max_rss": "125644800", "process_out_blocks": "0", "process_user_time": 3.96813}
[0m13:55:06.890240 [debug] [MainThread]: Command `dbt ls` succeeded at 13:55:06.890108 after 2.45 seconds
[0m13:55:06.890824 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111493170>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11162e7b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111bb9eb0>]}
[0m13:55:06.891366 [debug] [MainThread]: Flushing usage events
[0m13:55:07.336796 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:55:30.476476 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d3bf8f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2de6f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2de480>]}


============================== 13:55:30.482687 | 3c3e29cd-3f74-462f-be45-bae6d4023aa2 ==============================
[0m13:55:30.482687 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:55:30.483483 [debug] [MainThread]: running dbt with arguments {'introspect': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'quiet': 'False', 'write_json': 'True', 'no_print': 'None', 'static_parser': 'True', 'use_experimental_parser': 'False', 'version_check': 'True', 'fail_fast': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'empty': 'False', 'warn_error': 'None', 'use_colors': 'True', 'invocation_command': 'dbt run --target prod', 'partial_parse': 'True', 'log_cache_events': 'False', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_format': 'default', 'indirect_selection': 'eager', 'printer_width': '80', 'send_anonymous_usage_stats': 'True', 'debug': 'False'}
[0m13:55:30.493139 [error] [MainThread]: Encountered an error:
Parsing Error
  Env var required but not provided: 'S3_REGION'
[0m13:55:30.496257 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": false, "command_wall_clock_time": 0.11564786, "process_in_blocks": "0", "process_kernel_time": 0.217659, "process_mem_max_rss": "97488896", "process_out_blocks": "0", "process_user_time": 1.74071}
[0m13:55:30.497025 [debug] [MainThread]: Command `dbt run` failed at 13:55:30.496882 after 0.12 seconds
[0m13:55:30.497579 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dff39e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2de210>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e273650>]}
[0m13:55:30.498103 [debug] [MainThread]: Flushing usage events
[0m13:55:30.941246 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:56:07.960849 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107f73830>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108cf2c90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108cf2900>]}


============================== 13:56:07.967245 | a243dabc-0744-4944-9fc3-67df07ee9e04 ==============================
[0m13:56:07.967245 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:56:07.968174 [debug] [MainThread]: running dbt with arguments {'cache_selected_only': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'printer_width': '80', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True', 'log_cache_events': 'False', 'use_colors': 'True', 'no_print': 'None', 'indirect_selection': 'eager', 'empty': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'fail_fast': 'False', 'partial_parse': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_format': 'default', 'introspect': 'True', 'write_json': 'True', 'debug': 'False', 'invocation_command': 'dbt run --target prod', 'warn_error': 'None', 'quiet': 'False', 'target_path': 'None', 'use_experimental_parser': 'False', 'version_check': 'True'}
[0m13:56:08.304938 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'a243dabc-0744-4944-9fc3-67df07ee9e04', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108e9efc0>]}
[0m13:56:08.382663 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'a243dabc-0744-4944-9fc3-67df07ee9e04', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10863d940>]}
[0m13:56:08.384698 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:56:08.547729 [debug] [MainThread]: checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, vars: {}, profile: , target: prod, version: 1.10.9
[0m13:56:08.646023 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m13:56:08.646546 [debug] [MainThread]: previous checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, current checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23
[0m13:56:08.646961 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'a243dabc-0744-4944-9fc3-67df07ee9e04', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108679370>]}
[0m13:56:10.160421 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'a243dabc-0744-4944-9fc3-67df07ee9e04', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1093c29c0>]}
[0m13:56:10.235669 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:56:10.237953 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:56:10.257983 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'a243dabc-0744-4944-9fc3-67df07ee9e04', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108e02300>]}
[0m13:56:10.258565 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:56:10.259008 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a243dabc-0744-4944-9fc3-67df07ee9e04', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109491ca0>]}
[0m13:56:10.261311 [info ] [MainThread]: 
[0m13:56:10.261751 [info ] [MainThread]: Concurrency: 1 threads (target='prod')
[0m13:56:10.262149 [info ] [MainThread]: 
[0m13:56:10.262747 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m13:56:10.269242 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m13:56:10.341190 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m13:56:10.341696 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m13:56:10.342084 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m13:56:10.434793 [debug] [ThreadPool]: SQL status: OK in 0.093 seconds
[0m13:56:10.438033 [debug] [ThreadPool]: On list_memory: Close
[0m13:56:10.440693 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m13:56:10.441171 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m13:56:10.441562 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:56:10.443807 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:56:10.445534 [debug] [ThreadPool]: On list_memory: Close
[0m13:56:10.446446 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_references)
[0m13:56:10.447445 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_references"
"
[0m13:56:10.454727 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:56:10.455253 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m13:56:10.455661 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:56:10.459114 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m13:56:10.460840 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:56:10.461250 [debug] [ThreadPool]: On create_memory_fct_references: BEGIN
[0m13:56:10.461893 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:56:10.462272 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:56:10.462640 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_references"} */

    
    
        create schema if not exists memory."fct_references"
    
[0m13:56:10.466172 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m13:56:10.467521 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m13:56:10.467956 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:56:10.468327 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m13:56:10.469609 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m13:56:10.470185 [debug] [ThreadPool]: On create_memory_fct_references: Close
[0m13:56:10.470949 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_references, now create_memory_fct_salesforce)
[0m13:56:10.471511 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m13:56:10.473686 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:56:10.474094 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m13:56:10.474463 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:56:10.476553 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:56:10.478244 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:56:10.478639 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m13:56:10.479246 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:56:10.479621 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:56:10.479988 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m13:56:10.480693 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:56:10.481722 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m13:56:10.482128 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:56:10.482467 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m13:56:10.483087 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:56:10.483472 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m13:56:10.485033 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_fct_references)
[0m13:56:10.490859 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m13:56:10.491456 [debug] [ThreadPool]: On list_memory_fct_references: BEGIN
[0m13:56:10.491797 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:56:10.493331 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:56:10.493692 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m13:56:10.494054 [debug] [ThreadPool]: On list_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_references'
    and lower(table_catalog) = 'memory'
  
[0m13:56:10.542369 [debug] [ThreadPool]: SQL status: OK in 0.048 seconds
[0m13:56:10.545251 [debug] [ThreadPool]: On list_memory_fct_references: ROLLBACK
[0m13:56:10.548461 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_references'
[0m13:56:10.549069 [debug] [ThreadPool]: On list_memory_fct_references: Close
[0m13:56:10.549960 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_references, now list_memory_fct_salesforce)
[0m13:56:10.554789 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m13:56:10.555311 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m13:56:10.555715 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:56:10.557629 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:56:10.558066 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m13:56:10.558503 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m13:56:10.562807 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m13:56:10.564454 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m13:56:10.565566 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m13:56:10.565941 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m13:56:10.566633 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a243dabc-0744-4944-9fc3-67df07ee9e04', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10943e3f0>]}
[0m13:56:10.567195 [debug] [MainThread]: Using duckdb connection "master"
[0m13:56:10.567574 [debug] [MainThread]: On master: BEGIN
[0m13:56:10.567930 [debug] [MainThread]: Opening a new connection, currently in state init
[0m13:56:10.569650 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m13:56:10.570065 [debug] [MainThread]: On master: COMMIT
[0m13:56:10.570450 [debug] [MainThread]: Using duckdb connection "master"
[0m13:56:10.570811 [debug] [MainThread]: On master: COMMIT
[0m13:56:10.571434 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m13:56:10.571843 [debug] [MainThread]: On master: Close
[0m13:56:10.576388 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m13:56:10.577075 [info ] [Thread-1 (]: 1 of 7 START sql table model fct_references.states ............................. [RUN]
[0m13:56:10.577680 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m13:56:10.578142 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m13:56:10.586433 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m13:56:10.587510 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m13:56:10.627506 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m13:56:10.628555 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:56:10.629009 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m13:56:10.629448 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:56:10.631156 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:56:10.631724 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:56:10.632299 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."fct_references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m13:56:10.688104 [debug] [Thread-1 (]: SQL status: OK in 0.055 seconds
[0m13:56:10.695125 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:56:10.695669 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */
alter table memory."fct_references"."states__dbt_tmp" rename to "states"
[0m13:56:10.698579 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:56:10.707322 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:56:10.707849 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."fct_references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/fct_references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:56:10.721545 [debug] [Thread-1 (]: SQL status: OK in 0.013 seconds
[0m13:56:10.734228 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m13:56:10.734781 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:56:10.735215 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m13:56:10.736305 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:56:10.742403 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:56:10.742905 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

      drop table if exists memory."fct_references"."states__dbt_backup" cascade
    
[0m13:56:10.743700 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:56:10.746288 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m13:56:10.748453 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a243dabc-0744-4944-9fc3-67df07ee9e04', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1065e46b0>]}
[0m13:56:10.749298 [info ] [Thread-1 (]: 1 of 7 OK created sql table model fct_references.states ........................ [[32mOK[0m in 0.17s]
[0m13:56:10.750215 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m13:56:10.750827 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m13:56:10.751740 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m13:56:10.752367 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m13:56:10.752829 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m13:56:10.757667 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m13:56:10.758776 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m13:56:10.762319 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m13:56:10.764717 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:56:10.765313 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m13:56:10.765716 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:56:10.767334 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:56:10.767774 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:56:10.768302 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as timestamp) as created,
        cast(_dlt_processed_utc as timestamp) as processed,
        cast(system_modstamp as timestamp) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m13:56:11.462391 [debug] [Thread-1 (]: SQL status: OK in 0.693 seconds
[0m13:56:11.467154 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:56:11.467820 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m13:56:11.468866 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:56:11.475143 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:56:11.475831 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:56:11.480149 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m13:56:11.482099 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m13:56:11.482706 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:56:11.483232 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m13:56:11.484435 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:56:11.490182 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:56:11.491215 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m13:56:11.493309 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:56:11.496334 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m13:56:11.498046 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a243dabc-0744-4944-9fc3-67df07ee9e04', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10994e450>]}
[0m13:56:11.499682 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.75s]
[0m13:56:11.501213 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m13:56:11.502337 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m13:56:11.503450 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m13:56:11.504530 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m13:56:11.505318 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m13:56:11.525188 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m13:56:11.527516 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m13:56:11.535896 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m13:56:11.538253 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:56:11.539341 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m13:56:11.540284 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:56:11.544378 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m13:56:11.545560 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:56:11.547198 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as timestamp) as created,
        cast(c._dlt_processed_utc as timestamp) as processed,
        cast(c.system_modstamp as timestamp) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."fct_references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."fct_references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m13:56:17.729177 [debug] [Thread-1 (]: SQL status: OK in 6.180 seconds
[0m13:56:17.732864 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:56:17.733353 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m13:56:17.734221 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:56:17.739139 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:56:17.739626 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:56:17.935191 [debug] [Thread-1 (]: SQL status: OK in 0.195 seconds
[0m13:56:17.937105 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m13:56:17.937653 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:56:17.938203 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m13:56:17.945698 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m13:56:17.949028 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:56:17.949633 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m13:56:17.950651 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:56:17.952431 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m13:56:17.953191 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a243dabc-0744-4944-9fc3-67df07ee9e04', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10994e3c0>]}
[0m13:56:17.953988 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.45s]
[0m13:56:17.955372 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m13:56:17.956228 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m13:56:17.956860 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m13:56:17.957609 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m13:56:17.958315 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m13:56:17.964241 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m13:56:17.965954 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m13:56:17.971776 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m13:56:17.974322 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:56:17.975081 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m13:56:17.975643 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:56:17.977973 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:56:17.978566 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:56:17.979244 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        cast(ol.is_deleted as boolean) as is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        cast(o.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as timestamp) as created,
        cast(o._dlt_processed_utc as timestamp) as processed,
        cast(o.system_modstamp as timestamp) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m13:56:18.894859 [debug] [Thread-1 (]: SQL status: OK in 0.915 seconds
[0m13:56:18.898353 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:56:18.898857 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m13:56:18.899839 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:56:18.904854 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:56:18.905376 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:56:18.909188 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m13:56:18.910672 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m13:56:18.911191 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:56:18.911610 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m13:56:18.913901 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:56:18.916688 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:56:18.917140 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m13:56:18.918089 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:56:18.920120 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m13:56:18.920875 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a243dabc-0744-4944-9fc3-67df07ee9e04', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10984c920>]}
[0m13:56:18.921625 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 0.96s]
[0m13:56:18.922357 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m13:56:18.922834 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m13:56:18.923366 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m13:56:18.923949 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m13:56:18.924425 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m13:56:18.928180 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m13:56:18.929534 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m13:56:18.932988 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m13:56:18.933849 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:56:18.934277 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m13:56:18.934669 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:56:18.936316 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:56:18.936784 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:56:18.937283 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        cast(t.is_deleted as boolean) as is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as timestamp) as created,
        cast(t._dlt_processed_utc as timestamp) as processed,
        cast(t.system_modstamp as timestamp) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m13:56:19.403912 [debug] [Thread-1 (]: SQL status: OK in 0.466 seconds
[0m13:56:19.409492 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:56:19.410009 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m13:56:19.410864 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:56:19.415993 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:56:19.416559 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:56:19.419321 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:56:19.420848 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m13:56:19.421369 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:56:19.421780 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m13:56:19.423013 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:56:19.425502 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:56:19.425937 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m13:56:19.426710 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:56:19.428372 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m13:56:19.429147 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a243dabc-0744-4944-9fc3-67df07ee9e04', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109997e60>]}
[0m13:56:19.430081 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.51s]
[0m13:56:19.431362 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m13:56:19.432513 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m13:56:19.433468 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m13:56:19.434123 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m13:56:19.434761 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m13:56:19.440052 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m13:56:19.441744 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m13:56:19.445526 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m13:56:19.446807 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:56:19.447296 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m13:56:19.447712 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:56:19.450584 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m13:56:19.451380 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:56:19.452515 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        cast(m.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as timestamp) as created,
        cast(m._dlt_processed_utc as timestamp) as processed,
        cast(m.system_modstamp as timestamp) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m13:56:21.228238 [debug] [Thread-1 (]: SQL status: OK in 1.775 seconds
[0m13:56:21.231680 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:56:21.232140 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m13:56:21.233002 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:56:21.238043 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:56:21.238558 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:56:21.243069 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m13:56:21.244558 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m13:56:21.245021 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:56:21.245425 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m13:56:21.247574 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:56:21.250268 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:56:21.250713 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m13:56:21.251725 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:56:21.253801 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m13:56:21.254586 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a243dabc-0744-4944-9fc3-67df07ee9e04', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109869070>]}
[0m13:56:21.255404 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.82s]
[0m13:56:21.256100 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m13:56:21.256585 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m13:56:21.257107 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m13:56:21.257789 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m13:56:21.258231 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m13:56:21.264152 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m13:56:21.265773 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m13:56:21.270342 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m13:56:21.272367 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:56:21.272947 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m13:56:21.273365 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:56:21.275019 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:56:21.275784 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:56:21.276961 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m13:56:23.074843 [debug] [Thread-1 (]: SQL status: OK in 1.796 seconds
[0m13:56:23.078456 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:56:23.078941 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m13:56:23.079834 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:56:23.084822 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:56:23.085318 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:56:23.087668 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:56:23.089116 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m13:56:23.089559 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:56:23.089961 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m13:56:23.090720 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:56:23.093358 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:56:23.093823 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m13:56:23.094598 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:56:23.096093 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m13:56:23.096715 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a243dabc-0744-4944-9fc3-67df07ee9e04', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10992d940>]}
[0m13:56:23.097656 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.84s]
[0m13:56:23.098799 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m13:56:23.100409 [debug] [MainThread]: Using duckdb connection "master"
[0m13:56:23.100857 [debug] [MainThread]: On master: BEGIN
[0m13:56:23.101209 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m13:56:23.102884 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m13:56:23.103370 [debug] [MainThread]: On master: COMMIT
[0m13:56:23.103769 [debug] [MainThread]: Using duckdb connection "master"
[0m13:56:23.104362 [debug] [MainThread]: On master: COMMIT
[0m13:56:23.105607 [debug] [MainThread]: SQL status: OK in 0.001 seconds
[0m13:56:23.106178 [debug] [MainThread]: On master: Close
[0m13:56:23.106926 [debug] [MainThread]: Connection 'master' was properly closed.
[0m13:56:23.107389 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m13:56:23.107867 [info ] [MainThread]: 
[0m13:56:23.108283 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.85 seconds (12.85s).
[0m13:56:23.110401 [debug] [MainThread]: Command end result
[0m13:56:23.138198 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:56:23.140741 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:56:23.152112 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m13:56:23.152637 [info ] [MainThread]: 
[0m13:56:23.153126 [info ] [MainThread]: [32mCompleted successfully[0m
[0m13:56:23.153544 [info ] [MainThread]: 
[0m13:56:23.154012 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m13:56:23.156852 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 15.292012, "process_in_blocks": "0", "process_kernel_time": 1.047782, "process_mem_max_rss": "371773440", "process_out_blocks": "0", "process_user_time": 8.119907}
[0m13:56:23.157492 [debug] [MainThread]: Command `dbt run` succeeded at 13:56:23.157364 after 15.29 seconds
[0m13:56:23.158100 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108c87ad0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1092a0260>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107f99d90>]}
[0m13:56:23.158613 [debug] [MainThread]: Flushing usage events
[0m13:56:23.666175 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:56:54.133491 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1062a7230>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106977650>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1069770e0>]}


============================== 13:56:54.139077 | 266afca1-2b95-40d1-85e2-3b1c9592ee16 ==============================
[0m13:56:54.139077 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:56:54.139788 [debug] [MainThread]: running dbt with arguments {'cache_selected_only': 'False', 'use_experimental_parser': 'False', 'target_path': 'None', 'log_format': 'default', 'use_colors': 'True', 'partial_parse': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'warn_error': 'None', 'write_json': 'True', 'printer_width': '80', 'log_cache_events': 'False', 'static_parser': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'debug': 'False', 'indirect_selection': 'eager', 'no_print': 'None', 'send_anonymous_usage_stats': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'version_check': 'True', 'fail_fast': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'introspect': 'True', 'quiet': 'False', 'empty': 'None'}
[0m13:56:54.438852 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '266afca1-2b95-40d1-85e2-3b1c9592ee16', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104270fe0>]}
[0m13:56:54.516885 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '266afca1-2b95-40d1-85e2-3b1c9592ee16', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1069f54f0>]}
[0m13:56:54.519201 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:56:54.665885 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:56:54.763770 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m13:56:54.764317 [debug] [MainThread]: previous checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, current checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e
[0m13:56:54.764730 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '266afca1-2b95-40d1-85e2-3b1c9592ee16', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1063014c0>]}
[0m13:56:56.268546 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '266afca1-2b95-40d1-85e2-3b1c9592ee16', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106932c60>]}
[0m13:56:56.364884 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:56:56.368024 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:56:56.388687 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '266afca1-2b95-40d1-85e2-3b1c9592ee16', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107103d40>]}
[0m13:56:56.389385 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:56:56.389970 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '266afca1-2b95-40d1-85e2-3b1c9592ee16', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10716e300>]}
[0m13:56:56.391508 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:56:56.392510 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:56:56.393421 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:56:56.394311 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:56:56.395112 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:56:56.396011 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:56:56.396779 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:56:56.400419 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 2.3555224, "process_in_blocks": "0", "process_kernel_time": 0.311465, "process_mem_max_rss": "125698048", "process_out_blocks": "0", "process_user_time": 3.838376}
[0m13:56:56.401238 [debug] [MainThread]: Command `dbt ls` succeeded at 13:56:56.401092 after 2.36 seconds
[0m13:56:56.401843 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1070bc3e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106977320>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1069773b0>]}
[0m13:56:56.402358 [debug] [MainThread]: Flushing usage events
[0m13:56:56.853117 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m14:26:09.820253 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110a23320>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f16df70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1110630b0>]}


============================== 14:26:09.832170 | 5e8cf355-dadd-46b0-b52e-71a27f5fc714 ==============================
[0m14:26:09.832170 [info ] [MainThread]: Running with dbt=1.10.9
[0m14:26:09.833464 [debug] [MainThread]: running dbt with arguments {'warn_error': 'None', 'indirect_selection': 'eager', 'no_print': 'None', 'send_anonymous_usage_stats': 'True', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'static_parser': 'True', 'quiet': 'False', 'empty': 'None', 'log_format': 'default', 'fail_fast': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'use_experimental_parser': 'False', 'cache_selected_only': 'False', 'partial_parse': 'True', 'printer_width': '80', 'use_colors': 'True', 'introspect': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'log_cache_events': 'False', 'version_check': 'True', 'write_json': 'True', 'debug': 'False', 'invocation_command': 'dbt ls --resource-type model --output json'}
[0m14:26:10.243413 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '5e8cf355-dadd-46b0-b52e-71a27f5fc714', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11101a270>]}
[0m14:26:10.329339 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '5e8cf355-dadd-46b0-b52e-71a27f5fc714', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110832030>]}
[0m14:26:10.333030 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m14:26:10.497657 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m14:26:10.666341 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m14:26:10.666823 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m14:26:10.712345 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '5e8cf355-dadd-46b0-b52e-71a27f5fc714', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11127fd40>]}
[0m14:26:10.806534 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m14:26:10.810365 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m14:26:10.843611 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '5e8cf355-dadd-46b0-b52e-71a27f5fc714', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11152c290>]}
[0m14:26:10.844400 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m14:26:10.845003 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '5e8cf355-dadd-46b0-b52e-71a27f5fc714', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1111116a0>]}
[0m14:26:10.847492 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m14:26:10.848439 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m14:26:10.849188 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m14:26:10.849948 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m14:26:10.850689 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m14:26:10.851363 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m14:26:10.852178 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m14:26:10.855672 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.1487072, "process_in_blocks": "0", "process_kernel_time": 0.49034, "process_mem_max_rss": "120762368", "process_out_blocks": "0", "process_user_time": 2.727616}
[0m14:26:10.856412 [debug] [MainThread]: Command `dbt ls` succeeded at 14:26:10.856269 after 1.15 seconds
[0m14:26:10.856932 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110d48f20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1110632c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1110630b0>]}
[0m14:26:10.857399 [debug] [MainThread]: Flushing usage events
[0m14:26:11.305234 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m14:26:59.773240 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a1cf3e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c497440>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c496ed0>]}


============================== 14:26:59.778990 | 1e7c2fe8-db27-4774-b07e-d7429aa1b59c ==============================
[0m14:26:59.778990 [info ] [MainThread]: Running with dbt=1.10.9
[0m14:26:59.779707 [debug] [MainThread]: running dbt with arguments {'debug': 'False', 'no_print': 'None', 'version_check': 'True', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True', 'use_colors': 'True', 'partial_parse': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'quiet': 'False', 'log_cache_events': 'False', 'warn_error': 'None', 'log_format': 'default', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'printer_width': '80', 'introspect': 'True', 'indirect_selection': 'eager', 'write_json': 'True', 'target_path': 'None', 'use_experimental_parser': 'False', 'cache_selected_only': 'False', 'fail_fast': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'empty': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])'}
[0m14:27:00.143295 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '1e7c2fe8-db27-4774-b07e-d7429aa1b59c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c517770>]}
[0m14:27:00.220477 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '1e7c2fe8-db27-4774-b07e-d7429aa1b59c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109e3acf0>]}
[0m14:27:00.222435 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m14:27:00.366580 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m14:27:00.513327 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m14:27:00.513802 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m14:27:00.562719 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '1e7c2fe8-db27-4774-b07e-d7429aa1b59c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c534740>]}
[0m14:27:00.656202 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m14:27:00.658835 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m14:27:00.677187 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '1e7c2fe8-db27-4774-b07e-d7429aa1b59c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c964470>]}
[0m14:27:00.677961 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m14:27:00.678561 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '1e7c2fe8-db27-4774-b07e-d7429aa1b59c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c87d940>]}
[0m14:27:00.679891 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m14:27:00.680607 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m14:27:00.681325 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m14:27:00.682144 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m14:27:00.682766 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m14:27:00.683344 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m14:27:00.684024 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m14:27:00.686849 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0036733, "process_in_blocks": "0", "process_kernel_time": 0.310834, "process_mem_max_rss": "120696832", "process_out_blocks": "0", "process_user_time": 2.437622}
[0m14:27:00.687515 [debug] [MainThread]: Command `dbt ls` succeeded at 14:27:00.687381 after 1.00 seconds
[0m14:27:00.688014 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c497140>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c497200>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c497350>]}
[0m14:27:00.688460 [debug] [MainThread]: Flushing usage events
[0m14:27:01.138952 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m14:27:11.209663 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ee2f440>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fb0ab10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fb0a780>]}


============================== 14:27:11.215529 | e18f7a30-15e4-4d39-ae05-c2260f8365bb ==============================
[0m14:27:11.215529 [info ] [MainThread]: Running with dbt=1.10.9
[0m14:27:11.216271 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'invocation_command': 'dbt run', 'use_experimental_parser': 'False', 'indirect_selection': 'eager', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'empty': 'False', 'version_check': 'True', 'no_print': 'None', 'log_format': 'default', 'warn_error': 'None', 'fail_fast': 'False', 'target_path': 'None', 'cache_selected_only': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'send_anonymous_usage_stats': 'True', 'static_parser': 'True', 'partial_parse': 'True', 'log_cache_events': 'False', 'quiet': 'False', 'debug': 'False', 'use_colors': 'True', 'write_json': 'True', 'introspect': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl'}
[0m14:27:11.529172 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'e18f7a30-15e4-4d39-ae05-c2260f8365bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d8175c0>]}
[0m14:27:11.607531 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'e18f7a30-15e4-4d39-ae05-c2260f8365bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fc1ac30>]}
[0m14:27:11.609497 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m14:27:11.766310 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m14:27:11.888315 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m14:27:11.888876 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m14:27:11.933537 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'e18f7a30-15e4-4d39-ae05-c2260f8365bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fd9b920>]}
[0m14:27:12.018657 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m14:27:12.021367 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m14:27:12.043602 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'e18f7a30-15e4-4d39-ae05-c2260f8365bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10feecc20>]}
[0m14:27:12.044253 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m14:27:12.044755 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'e18f7a30-15e4-4d39-ae05-c2260f8365bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1100af7a0>]}
[0m14:27:12.047305 [info ] [MainThread]: 
[0m14:27:12.047807 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m14:27:12.048200 [info ] [MainThread]: 
[0m14:27:12.048847 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m14:27:12.055986 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m14:27:12.138119 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m14:27:12.138680 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m14:27:12.139092 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:27:12.257509 [debug] [ThreadPool]: SQL status: OK in 0.118 seconds
[0m14:27:12.260237 [debug] [ThreadPool]: On list_memory: Close
[0m14:27:12.262870 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m14:27:12.263423 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m14:27:12.263804 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:27:12.266273 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m14:27:12.267751 [debug] [ThreadPool]: On list_memory: Close
[0m14:27:12.268516 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_salesforce)
[0m14:27:12.269485 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m14:27:12.278590 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m14:27:12.279100 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m14:27:12.279440 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:27:12.283529 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m14:27:12.285375 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m14:27:12.285812 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m14:27:12.286510 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m14:27:12.286898 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m14:27:12.287267 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m14:27:12.291764 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m14:27:12.293208 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m14:27:12.293669 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m14:27:12.294039 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m14:27:12.295618 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m14:27:12.296367 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m14:27:12.297340 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now create_memory_fct_references)
[0m14:27:12.298229 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_references"
"
[0m14:27:12.300955 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m14:27:12.301426 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m14:27:12.301846 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:27:12.304172 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m14:27:12.305893 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m14:27:12.306339 [debug] [ThreadPool]: On create_memory_fct_references: BEGIN
[0m14:27:12.307062 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m14:27:12.307490 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m14:27:12.307908 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_references"} */

    
    
        create schema if not exists memory."fct_references"
    
[0m14:27:12.308653 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m14:27:12.309857 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m14:27:12.310267 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m14:27:12.310632 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m14:27:12.311289 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m14:27:12.311691 [debug] [ThreadPool]: On create_memory_fct_references: Close
[0m14:27:12.313619 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_references, now list_memory_fct_salesforce)
[0m14:27:12.320455 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m14:27:12.320994 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m14:27:12.321405 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:27:12.323098 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m14:27:12.323482 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m14:27:12.323870 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m14:27:12.363491 [debug] [ThreadPool]: SQL status: OK in 0.039 seconds
[0m14:27:12.365808 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m14:27:12.368519 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m14:27:12.369038 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m14:27:12.369730 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now list_memory_fct_references)
[0m14:27:12.371962 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m14:27:12.372407 [debug] [ThreadPool]: On list_memory_fct_references: BEGIN
[0m14:27:12.372781 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:27:12.374462 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m14:27:12.374866 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m14:27:12.375251 [debug] [ThreadPool]: On list_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_references'
    and lower(table_catalog) = 'memory'
  
[0m14:27:12.379277 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m14:27:12.380907 [debug] [ThreadPool]: On list_memory_fct_references: ROLLBACK
[0m14:27:12.381959 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_references'
[0m14:27:12.382317 [debug] [ThreadPool]: On list_memory_fct_references: Close
[0m14:27:12.383004 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'e18f7a30-15e4-4d39-ae05-c2260f8365bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d4aabd0>]}
[0m14:27:12.383552 [debug] [MainThread]: Using duckdb connection "master"
[0m14:27:12.383911 [debug] [MainThread]: On master: BEGIN
[0m14:27:12.384247 [debug] [MainThread]: Opening a new connection, currently in state init
[0m14:27:12.385888 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m14:27:12.386289 [debug] [MainThread]: On master: COMMIT
[0m14:27:12.386660 [debug] [MainThread]: Using duckdb connection "master"
[0m14:27:12.387009 [debug] [MainThread]: On master: COMMIT
[0m14:27:12.387545 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m14:27:12.387926 [debug] [MainThread]: On master: Close
[0m14:27:12.393280 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m14:27:12.394053 [info ] [Thread-1 (]: 1 of 7 START sql table model fct_references.states ............................. [RUN]
[0m14:27:12.394655 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_references, now model.usawfl.states)
[0m14:27:12.395106 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m14:27:12.403958 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m14:27:12.404977 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m14:27:12.446013 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m14:27:12.447060 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:27:12.447569 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m14:27:12.448002 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:27:12.449721 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:12.450159 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:27:12.450715 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."fct_references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m14:27:12.508545 [debug] [Thread-1 (]: SQL status: OK in 0.057 seconds
[0m14:27:12.516499 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:27:12.517199 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."fct_references"."states__dbt_tmp" rename to "states"
[0m14:27:12.519557 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:12.528797 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:27:12.529384 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."fct_references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m14:27:12.549214 [debug] [Thread-1 (]: SQL status: OK in 0.019 seconds
[0m14:27:12.561446 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m14:27:12.562022 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:27:12.562461 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m14:27:12.563697 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:27:12.569879 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:27:12.570420 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop table if exists memory."fct_references"."states__dbt_backup" cascade
    
[0m14:27:12.571251 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:12.573932 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m14:27:12.576385 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e18f7a30-15e4-4d39-ae05-c2260f8365bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d3fc410>]}
[0m14:27:12.577293 [info ] [Thread-1 (]: 1 of 7 OK created sql table model fct_references.states ........................ [[32mOK[0m in 0.18s]
[0m14:27:12.578029 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m14:27:12.578519 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m14:27:12.579063 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m14:27:12.579824 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m14:27:12.580366 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m14:27:12.587940 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m14:27:12.589174 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m14:27:12.600371 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m14:27:12.601376 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:27:12.601846 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m14:27:12.602282 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:27:12.604163 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:12.604649 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:27:12.605240 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as timestamp) as created,
        cast(_dlt_processed_utc as timestamp) as processed,
        cast(system_modstamp as timestamp) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m14:27:13.109103 [debug] [Thread-1 (]: SQL status: OK in 0.503 seconds
[0m14:27:13.113679 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:27:13.114346 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m14:27:13.115390 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:13.121509 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:27:13.122140 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m14:27:13.126279 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m14:27:13.128004 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m14:27:13.128477 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:27:13.128907 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m14:27:13.130009 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:27:13.132746 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:27:13.133219 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m14:27:13.134081 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:13.135835 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m14:27:13.136563 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e18f7a30-15e4-4d39-ae05-c2260f8365bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d4aabd0>]}
[0m14:27:13.137464 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.56s]
[0m14:27:13.138371 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m14:27:13.138891 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m14:27:13.139505 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m14:27:13.140148 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m14:27:13.140600 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m14:27:13.156307 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m14:27:13.158095 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m14:27:13.162047 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m14:27:13.163270 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:27:13.163830 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m14:27:13.164275 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:27:13.166210 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:13.166815 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:27:13.168079 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as timestamp) as created,
        cast(c._dlt_processed_utc as timestamp) as processed,
        cast(c.system_modstamp as timestamp) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."fct_references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."fct_references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m14:27:18.985755 [debug] [Thread-1 (]: SQL status: OK in 5.816 seconds
[0m14:27:18.989400 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:27:18.989979 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m14:27:18.990866 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:18.995932 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:27:18.996437 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m14:27:19.191177 [debug] [Thread-1 (]: SQL status: OK in 0.194 seconds
[0m14:27:19.193070 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m14:27:19.193576 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:27:19.194027 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m14:27:19.200631 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m14:27:19.203873 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:27:19.204350 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m14:27:19.205229 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:19.206868 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m14:27:19.207715 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e18f7a30-15e4-4d39-ae05-c2260f8365bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1104392b0>]}
[0m14:27:19.208537 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.07s]
[0m14:27:19.209292 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m14:27:19.210352 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m14:27:19.211283 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m14:27:19.212501 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m14:27:19.214103 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m14:27:19.231341 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m14:27:19.233724 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m14:27:19.243423 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m14:27:19.245269 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:27:19.245940 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m14:27:19.246468 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:27:19.248778 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:19.249534 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:27:19.250396 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        cast(ol.is_deleted as boolean) as is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        cast(o.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as timestamp) as created,
        cast(o._dlt_processed_utc as timestamp) as processed,
        cast(o.system_modstamp as timestamp) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m14:27:20.218607 [debug] [Thread-1 (]: SQL status: OK in 0.967 seconds
[0m14:27:20.222231 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:27:20.222739 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m14:27:20.223667 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:20.228779 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:27:20.229323 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m14:27:20.232992 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m14:27:20.236423 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m14:27:20.236924 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:27:20.237337 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m14:27:20.239797 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:20.242638 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:27:20.243270 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m14:27:20.244118 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:20.245727 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m14:27:20.246374 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e18f7a30-15e4-4d39-ae05-c2260f8365bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110589040>]}
[0m14:27:20.247077 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 1.03s]
[0m14:27:20.247764 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m14:27:20.248228 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m14:27:20.248813 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m14:27:20.249344 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m14:27:20.249772 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m14:27:20.253519 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m14:27:20.255314 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m14:27:20.259385 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m14:27:20.261490 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:27:20.263395 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m14:27:20.264046 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:27:20.266124 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:20.266832 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:27:20.267490 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        cast(t.is_deleted as boolean) as is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as timestamp) as created,
        cast(t._dlt_processed_utc as timestamp) as processed,
        cast(t.system_modstamp as timestamp) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m14:27:20.747603 [debug] [Thread-1 (]: SQL status: OK in 0.479 seconds
[0m14:27:20.751745 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:27:20.752365 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m14:27:20.753441 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:27:20.759241 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:27:20.759992 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m14:27:20.763383 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m14:27:20.765490 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m14:27:20.766323 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:27:20.766870 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m14:27:20.768685 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:27:20.771658 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:27:20.772191 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m14:27:20.773372 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:20.775555 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m14:27:20.776545 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e18f7a30-15e4-4d39-ae05-c2260f8365bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1105973b0>]}
[0m14:27:20.777569 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.53s]
[0m14:27:20.778448 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m14:27:20.779357 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m14:27:20.780058 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m14:27:20.780838 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m14:27:20.781464 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m14:27:20.788187 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m14:27:20.789740 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m14:27:20.796748 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m14:27:20.798418 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:27:20.799123 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m14:27:20.800619 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:27:20.803275 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m14:27:20.804070 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:27:20.804737 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        cast(m.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as timestamp) as created,
        cast(m._dlt_processed_utc as timestamp) as processed,
        cast(m.system_modstamp as timestamp) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m14:27:22.668293 [debug] [Thread-1 (]: SQL status: OK in 1.863 seconds
[0m14:27:22.672152 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:27:22.672679 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m14:27:22.673674 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:27:22.679245 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:27:22.679821 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m14:27:22.684899 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m14:27:22.686467 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m14:27:22.686952 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:27:22.687366 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m14:27:22.691809 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m14:27:22.696400 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:27:22.715599 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m14:27:22.735867 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:27:22.756465 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m14:27:22.774534 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e18f7a30-15e4-4d39-ae05-c2260f8365bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110505550>]}
[0m14:27:22.776401 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.99s]
[0m14:27:22.777985 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m14:27:22.778859 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m14:27:22.779933 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m14:27:22.780926 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m14:27:22.781717 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m14:27:22.790409 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m14:27:22.791877 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m14:27:22.800125 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m14:27:22.802395 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:27:22.803283 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m14:27:22.803955 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:27:22.807299 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m14:27:22.808038 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:27:22.809141 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m14:27:24.668978 [debug] [Thread-1 (]: SQL status: OK in 1.858 seconds
[0m14:27:24.753905 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:27:24.754620 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m14:27:24.755803 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:27:24.762835 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:27:24.763552 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m14:27:24.766541 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:24.768309 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m14:27:24.768883 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:27:24.769356 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m14:27:24.770352 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:24.773507 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:27:24.774248 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m14:27:24.775505 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:24.777534 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m14:27:24.778333 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e18f7a30-15e4-4d39-ae05-c2260f8365bb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1105af020>]}
[0m14:27:24.779274 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 2.00s]
[0m14:27:24.780100 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m14:27:24.781754 [debug] [MainThread]: Using duckdb connection "master"
[0m14:27:24.782252 [debug] [MainThread]: On master: BEGIN
[0m14:27:24.782646 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m14:27:24.784506 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m14:27:24.785014 [debug] [MainThread]: On master: COMMIT
[0m14:27:24.785496 [debug] [MainThread]: Using duckdb connection "master"
[0m14:27:24.786260 [debug] [MainThread]: On master: COMMIT
[0m14:27:24.787316 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m14:27:24.787943 [debug] [MainThread]: On master: Close
[0m14:27:24.788709 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:27:24.789171 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m14:27:24.789742 [info ] [MainThread]: 
[0m14:27:24.790727 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.74 seconds (12.74s).
[0m14:27:24.794432 [debug] [MainThread]: Command end result
[0m14:27:24.828601 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m14:27:24.835345 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m14:27:24.847054 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m14:27:24.847647 [info ] [MainThread]: 
[0m14:27:24.848400 [info ] [MainThread]: [32mCompleted successfully[0m
[0m14:27:24.848906 [info ] [MainThread]: 
[0m14:27:24.849418 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m14:27:24.853396 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 13.735771, "process_in_blocks": "0", "process_kernel_time": 1.000019, "process_mem_max_rss": "368340992", "process_out_blocks": "0", "process_user_time": 6.505825}
[0m14:27:24.855069 [debug] [MainThread]: Command `dbt run` succeeded at 14:27:24.854595 after 13.74 seconds
[0m14:27:24.855975 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fb0a570>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fb0a990>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10def6d80>]}
[0m14:27:24.856623 [debug] [MainThread]: Flushing usage events
[0m14:27:25.404861 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m14:27:41.448011 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1052a9ca0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105926d50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1059269c0>]}


============================== 14:27:41.455113 | d64b2a64-49db-400b-9137-6c3eec228f2f ==============================
[0m14:27:41.455113 [info ] [MainThread]: Running with dbt=1.10.9
[0m14:27:41.455964 [debug] [MainThread]: running dbt with arguments {'write_json': 'True', 'target_path': 'None', 'cache_selected_only': 'False', 'debug': 'False', 'no_print': 'None', 'partial_parse': 'True', 'introspect': 'True', 'empty': 'False', 'fail_fast': 'False', 'send_anonymous_usage_stats': 'True', 'version_check': 'True', 'quiet': 'False', 'log_cache_events': 'False', 'log_format': 'default', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'use_colors': 'True', 'static_parser': 'True', 'printer_width': '80', 'warn_error': 'None', 'invocation_command': 'dbt run --target prod', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'indirect_selection': 'eager', 'use_experimental_parser': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs'}
[0m14:27:41.789275 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'd64b2a64-49db-400b-9137-6c3eec228f2f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10321cdd0>]}
[0m14:27:41.867103 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'd64b2a64-49db-400b-9137-6c3eec228f2f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105955220>]}
[0m14:27:41.870888 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m14:27:42.032782 [debug] [MainThread]: checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, vars: {}, profile: , target: prod, version: 1.10.9
[0m14:27:42.130693 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m14:27:42.131226 [debug] [MainThread]: previous checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, current checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23
[0m14:27:42.131645 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'd64b2a64-49db-400b-9137-6c3eec228f2f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1052a95b0>]}
[0m14:27:43.791950 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'd64b2a64-49db-400b-9137-6c3eec228f2f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106057140>]}
[0m14:27:43.870180 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m14:27:43.872421 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m14:27:43.914348 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'd64b2a64-49db-400b-9137-6c3eec228f2f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1060fa1e0>]}
[0m14:27:43.915148 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m14:27:43.915868 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'd64b2a64-49db-400b-9137-6c3eec228f2f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10612cbf0>]}
[0m14:27:43.918480 [info ] [MainThread]: 
[0m14:27:43.919053 [info ] [MainThread]: Concurrency: 1 threads (target='prod')
[0m14:27:43.919647 [info ] [MainThread]: 
[0m14:27:43.920715 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m14:27:43.928412 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m14:27:43.992153 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m14:27:43.992791 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m14:27:43.993302 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:27:44.050039 [debug] [ThreadPool]: SQL status: OK in 0.057 seconds
[0m14:27:44.051663 [debug] [ThreadPool]: On list_memory: Close
[0m14:27:44.054296 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m14:27:44.054803 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m14:27:44.055187 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:27:44.057412 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m14:27:44.058885 [debug] [ThreadPool]: On list_memory: Close
[0m14:27:44.059742 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_salesforce)
[0m14:27:44.060381 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m14:27:44.067232 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m14:27:44.067670 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m14:27:44.068030 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:27:44.070014 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m14:27:44.071487 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m14:27:44.071861 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m14:27:44.072438 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m14:27:44.072815 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m14:27:44.073170 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m14:27:44.073933 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m14:27:44.074918 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m14:27:44.075399 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m14:27:44.075760 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m14:27:44.076461 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m14:27:44.076858 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m14:27:44.077512 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now create_memory_fct_references)
[0m14:27:44.078015 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_references"
"
[0m14:27:44.080073 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m14:27:44.080462 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m14:27:44.080820 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:27:44.083020 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m14:27:44.084737 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m14:27:44.085153 [debug] [ThreadPool]: On create_memory_fct_references: BEGIN
[0m14:27:44.085790 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m14:27:44.086170 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m14:27:44.086539 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_references"} */

    
    
        create schema if not exists memory."fct_references"
    
[0m14:27:44.087219 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m14:27:44.088237 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m14:27:44.088630 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m14:27:44.088979 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m14:27:44.089580 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m14:27:44.089956 [debug] [ThreadPool]: On create_memory_fct_references: Close
[0m14:27:44.091505 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_references, now list_memory_fct_salesforce)
[0m14:27:44.097471 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m14:27:44.097912 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m14:27:44.098256 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:27:44.099847 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m14:27:44.100214 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m14:27:44.100589 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m14:27:44.116275 [debug] [ThreadPool]: SQL status: OK in 0.015 seconds
[0m14:27:44.117759 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m14:27:44.120102 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m14:27:44.120530 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m14:27:44.121154 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now list_memory_fct_references)
[0m14:27:44.124577 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m14:27:44.125075 [debug] [ThreadPool]: On list_memory_fct_references: BEGIN
[0m14:27:44.125531 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:27:44.127351 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m14:27:44.127764 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m14:27:44.128157 [debug] [ThreadPool]: On list_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_references'
    and lower(table_catalog) = 'memory'
  
[0m14:27:44.132000 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m14:27:44.133486 [debug] [ThreadPool]: On list_memory_fct_references: ROLLBACK
[0m14:27:44.134551 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_references'
[0m14:27:44.134936 [debug] [ThreadPool]: On list_memory_fct_references: Close
[0m14:27:44.135613 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'd64b2a64-49db-400b-9137-6c3eec228f2f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1032c6a20>]}
[0m14:27:44.136213 [debug] [MainThread]: Using duckdb connection "master"
[0m14:27:44.136599 [debug] [MainThread]: On master: BEGIN
[0m14:27:44.136962 [debug] [MainThread]: Opening a new connection, currently in state init
[0m14:27:44.138595 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m14:27:44.138998 [debug] [MainThread]: On master: COMMIT
[0m14:27:44.139358 [debug] [MainThread]: Using duckdb connection "master"
[0m14:27:44.139703 [debug] [MainThread]: On master: COMMIT
[0m14:27:44.140228 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m14:27:44.140596 [debug] [MainThread]: On master: Close
[0m14:27:44.144282 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m14:27:44.145015 [info ] [Thread-1 (]: 1 of 7 START sql table model fct_references.states ............................. [RUN]
[0m14:27:44.145635 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_references, now model.usawfl.states)
[0m14:27:44.146105 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m14:27:44.154902 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m14:27:44.155778 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m14:27:44.197245 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m14:27:44.198240 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:27:44.198703 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m14:27:44.199200 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:27:44.200982 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:44.201446 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:27:44.202025 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."fct_references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m14:27:44.236621 [debug] [Thread-1 (]: SQL status: OK in 0.034 seconds
[0m14:27:44.243812 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:27:44.244510 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */
alter table memory."fct_references"."states__dbt_tmp" rename to "states"
[0m14:27:44.245430 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:44.254816 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:27:44.255382 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."fct_references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/fct_references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m14:27:44.257477 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:44.270049 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m14:27:44.270590 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:27:44.271014 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m14:27:44.272251 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:27:44.278403 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m14:27:44.278904 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

      drop table if exists memory."fct_references"."states__dbt_backup" cascade
    
[0m14:27:44.279745 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:44.282387 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m14:27:44.284683 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd64b2a64-49db-400b-9137-6c3eec228f2f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1031f3f50>]}
[0m14:27:44.285637 [info ] [Thread-1 (]: 1 of 7 OK created sql table model fct_references.states ........................ [[32mOK[0m in 0.14s]
[0m14:27:44.286578 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m14:27:44.287094 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m14:27:44.287668 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m14:27:44.288328 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m14:27:44.288805 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m14:27:44.293834 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m14:27:44.294752 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m14:27:44.299558 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m14:27:44.300596 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:27:44.301080 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m14:27:44.301514 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:27:44.303430 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:44.303953 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:27:44.304518 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as timestamp) as created,
        cast(_dlt_processed_utc as timestamp) as processed,
        cast(system_modstamp as timestamp) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m14:27:44.781646 [debug] [Thread-1 (]: SQL status: OK in 0.476 seconds
[0m14:27:44.785058 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:27:44.785527 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m14:27:44.786436 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:44.791733 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:27:44.792252 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m14:27:44.794466 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:44.795908 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m14:27:44.796353 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:27:44.796760 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m14:27:44.797657 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:44.801612 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m14:27:44.802086 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m14:27:44.802856 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:44.804384 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m14:27:44.805188 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd64b2a64-49db-400b-9137-6c3eec228f2f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10656eab0>]}
[0m14:27:44.805917 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.52s]
[0m14:27:44.806871 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m14:27:44.807377 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m14:27:44.808000 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m14:27:44.808632 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m14:27:44.809175 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m14:27:44.816962 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m14:27:44.817903 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m14:27:44.822332 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m14:27:44.823268 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:27:44.823711 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m14:27:44.824115 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:27:44.825964 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:44.826502 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:27:44.827387 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as timestamp) as created,
        cast(c._dlt_processed_utc as timestamp) as processed,
        cast(c.system_modstamp as timestamp) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."fct_references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."fct_references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m14:27:50.579167 [debug] [Thread-1 (]: SQL status: OK in 5.751 seconds
[0m14:27:50.582554 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:27:50.583048 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m14:27:50.583997 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:50.589023 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:27:50.589520 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m14:27:50.765627 [debug] [Thread-1 (]: SQL status: OK in 0.176 seconds
[0m14:27:50.767156 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m14:27:50.767627 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:27:50.768039 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m14:27:50.773781 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m14:27:50.777098 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m14:27:50.777897 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m14:27:50.778742 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:50.780270 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m14:27:50.780885 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd64b2a64-49db-400b-9137-6c3eec228f2f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10612fb60>]}
[0m14:27:50.781558 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 5.97s]
[0m14:27:50.782451 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m14:27:50.783300 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m14:27:50.783861 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m14:27:50.784539 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m14:27:50.784990 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m14:27:50.789608 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m14:27:50.790441 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m14:27:50.793876 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m14:27:50.795017 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:27:50.795502 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m14:27:50.795917 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:27:50.798061 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:50.798745 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:27:50.799393 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        cast(ol.is_deleted as boolean) as is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        cast(o.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as timestamp) as created,
        cast(o._dlt_processed_utc as timestamp) as processed,
        cast(o.system_modstamp as timestamp) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m14:27:51.750066 [debug] [Thread-1 (]: SQL status: OK in 0.949 seconds
[0m14:27:51.753740 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:27:51.754262 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m14:27:51.755196 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:51.761342 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:27:51.762040 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m14:27:51.765604 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m14:27:51.767288 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m14:27:51.767816 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:27:51.768242 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m14:27:51.769943 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:27:51.772725 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m14:27:51.773244 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m14:27:51.774103 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:51.777979 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m14:27:51.778935 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd64b2a64-49db-400b-9137-6c3eec228f2f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106590170>]}
[0m14:27:51.779828 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 0.99s]
[0m14:27:51.780694 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m14:27:51.781252 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m14:27:51.781851 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m14:27:51.782489 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m14:27:51.783006 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m14:27:51.787056 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m14:27:51.787981 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m14:27:51.792390 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m14:27:51.793797 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:27:51.794481 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m14:27:51.795009 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:27:51.796886 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:51.797421 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:27:51.797936 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        cast(t.is_deleted as boolean) as is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as timestamp) as created,
        cast(t._dlt_processed_utc as timestamp) as processed,
        cast(t.system_modstamp as timestamp) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m14:27:52.220724 [debug] [Thread-1 (]: SQL status: OK in 0.422 seconds
[0m14:27:52.227118 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:27:52.227923 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m14:27:52.229044 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:52.234987 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:27:52.235582 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m14:27:52.238083 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:52.239683 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m14:27:52.240279 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:27:52.240862 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m14:27:52.242583 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:27:52.245886 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m14:27:52.246419 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m14:27:52.247506 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:27:52.249745 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m14:27:52.250592 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd64b2a64-49db-400b-9137-6c3eec228f2f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1065cb4d0>]}
[0m14:27:52.251364 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.47s]
[0m14:27:52.252128 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m14:27:52.252824 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m14:27:52.253466 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m14:27:52.254058 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m14:27:52.254518 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m14:27:52.259552 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m14:27:52.260755 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m14:27:52.264532 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m14:27:52.265562 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:27:52.266067 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m14:27:52.266624 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:27:52.270262 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m14:27:52.270834 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:27:52.271487 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        cast(m.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as timestamp) as created,
        cast(m._dlt_processed_utc as timestamp) as processed,
        cast(m.system_modstamp as timestamp) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m14:27:54.070075 [debug] [Thread-1 (]: SQL status: OK in 1.798 seconds
[0m14:27:54.073535 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:27:54.074055 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m14:27:54.074982 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:54.079778 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:27:54.080275 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m14:27:54.085151 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m14:27:54.086646 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m14:27:54.087153 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:27:54.087576 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m14:27:54.090615 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m14:27:54.093820 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m14:27:54.094609 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m14:27:54.095513 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:54.097891 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m14:27:54.098600 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd64b2a64-49db-400b-9137-6c3eec228f2f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10647dca0>]}
[0m14:27:54.099452 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.84s]
[0m14:27:54.100230 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m14:27:54.100768 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m14:27:54.101426 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m14:27:54.102051 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m14:27:54.102541 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m14:27:54.108617 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m14:27:54.109679 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m14:27:54.116009 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m14:27:54.116944 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:27:54.117372 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m14:27:54.117769 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:27:54.119369 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:54.119828 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:27:54.120674 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m14:27:55.948745 [debug] [Thread-1 (]: SQL status: OK in 1.827 seconds
[0m14:27:55.952613 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:27:55.953181 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m14:27:55.954124 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:55.959423 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:27:55.960000 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m14:27:55.962870 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:27:55.964648 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m14:27:55.965196 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:27:55.965648 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m14:27:55.966619 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:55.969724 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m14:27:55.970266 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m14:27:55.971159 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m14:27:55.973199 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m14:27:55.974045 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd64b2a64-49db-400b-9137-6c3eec228f2f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106595ac0>]}
[0m14:27:55.975257 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.87s]
[0m14:27:55.976392 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m14:27:55.977810 [debug] [MainThread]: Using duckdb connection "master"
[0m14:27:55.978230 [debug] [MainThread]: On master: BEGIN
[0m14:27:55.978582 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m14:27:55.980257 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m14:27:55.980719 [debug] [MainThread]: On master: COMMIT
[0m14:27:55.981105 [debug] [MainThread]: Using duckdb connection "master"
[0m14:27:55.981665 [debug] [MainThread]: On master: COMMIT
[0m14:27:55.983347 [debug] [MainThread]: SQL status: OK in 0.001 seconds
[0m14:27:55.984011 [debug] [MainThread]: On master: Close
[0m14:27:55.984704 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:27:55.985199 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m14:27:55.985774 [info ] [MainThread]: 
[0m14:27:55.986309 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.07 seconds (12.07s).
[0m14:27:55.988356 [debug] [MainThread]: Command end result
[0m14:27:56.024025 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m14:27:56.027689 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m14:27:56.035857 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m14:27:56.036394 [info ] [MainThread]: 
[0m14:27:56.036894 [info ] [MainThread]: [32mCompleted successfully[0m
[0m14:27:56.037341 [info ] [MainThread]: 
[0m14:27:56.037807 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m14:27:56.040731 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 14.69295, "process_in_blocks": "0", "process_kernel_time": 1.128127, "process_mem_max_rss": "372973568", "process_out_blocks": "0", "process_user_time": 10.839916}
[0m14:27:56.041544 [debug] [MainThread]: Command `dbt run` succeeded at 14:27:56.041388 after 14.69 seconds
[0m14:27:56.042447 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1054ab470>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104bd1e20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105ad30e0>]}
[0m14:27:56.044411 [debug] [MainThread]: Flushing usage events
[0m14:27:56.571067 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m14:33:08.006574 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d29e840>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d5b7500>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d5b6ff0>]}


============================== 14:33:08.014214 | 24f9e064-345d-4989-97dd-38a55db086cb ==============================
[0m14:33:08.014214 [info ] [MainThread]: Running with dbt=1.10.9
[0m14:33:08.015151 [debug] [MainThread]: running dbt with arguments {'quiet': 'False', 'version_check': 'True', 'indirect_selection': 'eager', 'use_experimental_parser': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'partial_parse': 'True', 'printer_width': '80', 'use_colors': 'True', 'write_json': 'True', 'target_path': 'None', 'warn_error': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'no_print': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'empty': 'None', 'send_anonymous_usage_stats': 'True', 'log_cache_events': 'False', 'debug': 'False', 'static_parser': 'True', 'cache_selected_only': 'False', 'introspect': 'True', 'log_format': 'default', 'fail_fast': 'False'}
[0m14:33:08.357267 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '24f9e064-345d-4989-97dd-38a55db086cb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d6c28d0>]}
[0m14:33:08.435637 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '24f9e064-345d-4989-97dd-38a55db086cb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10af5ab10>]}
[0m14:33:08.439670 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m14:33:08.603440 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m14:33:08.704278 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m14:33:08.704866 [debug] [MainThread]: previous checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, current checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e
[0m14:33:08.705927 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '24f9e064-345d-4989-97dd-38a55db086cb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10daaa780>]}
[0m14:33:10.329625 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '24f9e064-345d-4989-97dd-38a55db086cb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dca9190>]}
[0m14:33:10.406767 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m14:33:10.409787 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m14:33:10.438995 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '24f9e064-345d-4989-97dd-38a55db086cb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dcf8470>]}
[0m14:33:10.439635 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m14:33:10.440083 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '24f9e064-345d-4989-97dd-38a55db086cb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dccba70>]}
[0m14:33:10.441402 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m14:33:10.442113 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m14:33:10.442736 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m14:33:10.443350 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m14:33:10.443962 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m14:33:10.444571 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m14:33:10.445176 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m14:33:10.448622 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 2.541551, "process_in_blocks": "0", "process_kernel_time": 0.572189, "process_mem_max_rss": "126009344", "process_out_blocks": "0", "process_user_time": 4.277735}
[0m14:33:10.449425 [debug] [MainThread]: Command `dbt ls` succeeded at 14:33:10.449280 after 2.54 seconds
[0m14:33:10.449991 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dced790>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dcefd40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d59d670>]}
[0m14:33:10.450486 [debug] [MainThread]: Flushing usage events
[0m14:33:10.932098 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:04:30.164688 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10703c7a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107897890>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1078972f0>]}


============================== 15:04:30.171425 | ce0e6aef-7f30-4da5-a70e-f960c3cd13f4 ==============================
[0m15:04:30.171425 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:04:30.172528 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'introspect': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'debug': 'False', 'fail_fast': 'False', 'partial_parse': 'True', 'log_cache_events': 'False', 'no_print': 'None', 'target_path': 'None', 'version_check': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'send_anonymous_usage_stats': 'True', 'write_json': 'True', 'quiet': 'False', 'use_experimental_parser': 'False', 'empty': 'None', 'log_format': 'default', 'warn_error': 'None', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'use_colors': 'True', 'static_parser': 'True', 'cache_selected_only': 'False', 'invocation_command': 'dbt ls --resource-type model --output json'}
[0m15:04:30.514328 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'ce0e6aef-7f30-4da5-a70e-f960c3cd13f4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107254320>]}
[0m15:04:30.597271 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'ce0e6aef-7f30-4da5-a70e-f960c3cd13f4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10750df40>]}
[0m15:04:30.601677 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:04:30.770436 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:04:30.944097 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:04:30.944630 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:04:30.989400 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'ce0e6aef-7f30-4da5-a70e-f960c3cd13f4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ae3110>]}
[0m15:04:31.078404 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m15:04:31.081550 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m15:04:31.120459 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'ce0e6aef-7f30-4da5-a70e-f960c3cd13f4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ce3410>]}
[0m15:04:31.121413 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:04:31.121939 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'ce0e6aef-7f30-4da5-a70e-f960c3cd13f4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107e68200>]}
[0m15:04:31.123389 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:04:31.124102 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:04:31.124732 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:04:31.125340 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:04:31.125954 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:04:31.126558 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:04:31.127168 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:04:31.130218 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0654427, "process_in_blocks": "0", "process_kernel_time": 0.327555, "process_mem_max_rss": "121200640", "process_out_blocks": "0", "process_user_time": 2.441929}
[0m15:04:31.131020 [debug] [MainThread]: Command `dbt ls` succeeded at 15:04:31.130882 after 1.07 seconds
[0m15:04:31.131556 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072b5040>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107e6be60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107e68200>]}
[0m15:04:31.132036 [debug] [MainThread]: Flushing usage events
[0m15:04:31.596206 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:05:10.175012 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cbe82f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d29b710>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d29b1a0>]}


============================== 15:05:10.180529 | 38879717-ee98-4054-9d51-5dc9206f2f20 ==============================
[0m15:05:10.180529 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:05:10.181307 [debug] [MainThread]: running dbt with arguments {'invocation_command': 'dbt ls --resource-type model --output json', 'fail_fast': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'use_experimental_parser': 'False', 'log_cache_events': 'False', 'introspect': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'partial_parse': 'True', 'quiet': 'False', 'static_parser': 'True', 'indirect_selection': 'eager', 'cache_selected_only': 'False', 'use_colors': 'True', 'debug': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'version_check': 'True', 'write_json': 'True', 'log_format': 'default', 'no_print': 'None', 'empty': 'None', 'target_path': 'None', 'warn_error': 'None', 'printer_width': '80', 'send_anonymous_usage_stats': 'True'}
[0m15:05:10.496079 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '38879717-ee98-4054-9d51-5dc9206f2f20', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d31bad0>]}
[0m15:05:10.574414 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '38879717-ee98-4054-9d51-5dc9206f2f20', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d07f740>]}
[0m15:05:10.576411 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:05:10.722689 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:05:10.855318 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:05:10.855863 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:05:10.936254 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '38879717-ee98-4054-9d51-5dc9206f2f20', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d3a5580>]}
[0m15:05:11.021271 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m15:05:11.023922 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m15:05:11.039436 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '38879717-ee98-4054-9d51-5dc9206f2f20', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d4e71d0>]}
[0m15:05:11.040093 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:05:11.040557 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '38879717-ee98-4054-9d51-5dc9206f2f20', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d67d2b0>]}
[0m15:05:11.041821 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:05:11.042461 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:05:11.043052 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:05:11.043627 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:05:11.044197 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:05:11.044776 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:05:11.045351 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:05:11.047937 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.96377814, "process_in_blocks": "0", "process_kernel_time": 0.3616, "process_mem_max_rss": "120840192", "process_out_blocks": "0", "process_user_time": 2.570462}
[0m15:05:11.048607 [debug] [MainThread]: Command `dbt ls` succeeded at 15:05:11.048477 after 0.96 seconds
[0m15:05:11.049111 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cbc7650>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d78ce00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d29ac00>]}
[0m15:05:11.049698 [debug] [MainThread]: Flushing usage events
[0m15:05:11.472146 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:05:36.218239 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109df0c20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c66b4d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c66af60>]}


============================== 15:05:36.223439 | 5b06e239-23f4-469f-a206-957ba3caa3a4 ==============================
[0m15:05:36.223439 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:05:36.224188 [debug] [MainThread]: running dbt with arguments {'partial_parse': 'True', 'log_format': 'default', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'no_print': 'None', 'empty': 'None', 'static_parser': 'True', 'indirect_selection': 'eager', 'printer_width': '80', 'send_anonymous_usage_stats': 'True', 'debug': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'warn_error': 'None', 'introspect': 'True', 'log_cache_events': 'False', 'target_path': 'None', 'use_colors': 'True', 'write_json': 'True', 'fail_fast': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'cache_selected_only': 'False', 'quiet': 'False', 'version_check': 'True', 'use_experimental_parser': 'False'}
[0m15:05:36.520009 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '5b06e239-23f4-469f-a206-957ba3caa3a4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c699220>]}
[0m15:05:36.600934 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '5b06e239-23f4-469f-a206-957ba3caa3a4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10af61c40>]}
[0m15:05:36.602911 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:05:36.749166 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:05:36.872277 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:05:36.872773 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:05:36.916701 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '5b06e239-23f4-469f-a206-957ba3caa3a4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca3d100>]}
[0m15:05:36.999037 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m15:05:37.001677 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m15:05:37.017099 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '5b06e239-23f4-469f-a206-957ba3caa3a4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca9f4a0>]}
[0m15:05:37.017752 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:05:37.018183 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '5b06e239-23f4-469f-a206-957ba3caa3a4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cbf80e0>]}
[0m15:05:37.019443 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:05:37.022491 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:05:37.024148 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:05:37.024757 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:05:37.025315 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:05:37.026018 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:05:37.026607 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:05:37.029360 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.8974101, "process_in_blocks": "0", "process_kernel_time": 0.297548, "process_mem_max_rss": "120795136", "process_out_blocks": "0", "process_user_time": 2.355077}
[0m15:05:37.030099 [debug] [MainThread]: Command `dbt ls` succeeded at 15:05:37.029956 after 0.90 seconds
[0m15:05:37.030632 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c66b3e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cc20500>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cc20050>]}
[0m15:05:37.031101 [debug] [MainThread]: Flushing usage events
[0m15:05:37.465046 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:06:16.071115 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106feb260>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10762b650>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10762b110>]}


============================== 15:06:16.077669 | a891116d-d83a-46be-891e-6ffe4aad5d79 ==============================
[0m15:06:16.077669 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:06:16.078480 [debug] [MainThread]: running dbt with arguments {'warn_error': 'None', 'version_check': 'True', 'send_anonymous_usage_stats': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'empty': 'None', 'static_parser': 'True', 'partial_parse': 'True', 'quiet': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'target_path': 'None', 'log_cache_events': 'False', 'no_print': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'use_experimental_parser': 'False', 'log_format': 'default', 'write_json': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'indirect_selection': 'eager', 'cache_selected_only': 'False', 'debug': 'False', 'use_colors': 'True', 'introspect': 'True', 'printer_width': '80', 'fail_fast': 'False'}
[0m15:06:16.390369 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'a891116d-d83a-46be-891e-6ffe4aad5d79', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072a20c0>]}
[0m15:06:16.467564 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'a891116d-d83a-46be-891e-6ffe4aad5d79', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106feb3b0>]}
[0m15:06:16.471345 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:06:16.630456 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:06:16.796276 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:06:16.796836 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:06:16.840573 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'a891116d-d83a-46be-891e-6ffe4aad5d79', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1078de7e0>]}
[0m15:06:16.922411 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m15:06:16.925942 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m15:06:16.957184 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'a891116d-d83a-46be-891e-6ffe4aad5d79', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107af5400>]}
[0m15:06:16.957831 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:06:16.958311 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a891116d-d83a-46be-891e-6ffe4aad5d79', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107a096a0>]}
[0m15:06:16.959619 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:06:16.960302 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:06:16.960931 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:06:16.961538 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:06:16.962146 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:06:16.962757 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:06:16.963370 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:06:16.966017 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.98968494, "process_in_blocks": "0", "process_kernel_time": 0.376467, "process_mem_max_rss": "121069568", "process_out_blocks": "0", "process_user_time": 2.521227}
[0m15:06:16.966694 [debug] [MainThread]: Command `dbt ls` succeeded at 15:06:16.966557 after 0.99 seconds
[0m15:06:16.967409 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10762b350>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107876900>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106fb5c40>]}
[0m15:06:16.967903 [debug] [MainThread]: Flushing usage events
[0m15:06:17.408884 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:14:56.544228 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1024d8a10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f33620>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f33110>]}


============================== 15:14:56.551576 | 406e9829-ce31-4a53-adef-806e1a9c4f8d ==============================
[0m15:14:56.551576 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:14:56.552587 [debug] [MainThread]: running dbt with arguments {'use_colors': 'True', 'debug': 'False', 'cache_selected_only': 'False', 'fail_fast': 'False', 'static_parser': 'True', 'version_check': 'True', 'log_cache_events': 'False', 'send_anonymous_usage_stats': 'True', 'no_print': 'None', 'partial_parse': 'True', 'indirect_selection': 'eager', 'introspect': 'True', 'empty': 'None', 'warn_error': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'quiet': 'False', 'use_experimental_parser': 'False', 'log_format': 'default', 'printer_width': '80', 'target_path': 'None', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'invocation_command': 'dbt ls --resource-type model --output json', 'write_json': 'True'}
[0m15:14:56.562026 [error] [MainThread]: Encountered an error:
Parsing Error
  Env var required but not provided: 'S3_REGION'
[0m15:14:56.565016 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": false, "command_wall_clock_time": 0.12309557, "process_in_blocks": "0", "process_kernel_time": 0.369448, "process_mem_max_rss": "97472512", "process_out_blocks": "0", "process_user_time": 2.040691}
[0m15:14:56.565757 [debug] [MainThread]: Command `dbt ls` failed at 15:14:56.565612 after 0.12 seconds
[0m15:14:56.566276 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f332c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1049cd460>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1049cee40>]}
[0m15:14:56.566801 [debug] [MainThread]: Flushing usage events
[0m15:14:57.036878 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:16:35.391377 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109d1cc20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a2dbce0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a346cc0>]}


============================== 15:16:35.396803 | f50418d5-3ee1-4c08-a2bc-809c21868159 ==============================
[0m15:16:35.396803 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:16:35.397604 [debug] [MainThread]: running dbt with arguments {'log_cache_events': 'False', 'send_anonymous_usage_stats': 'True', 'cache_selected_only': 'False', 'use_colors': 'True', 'no_print': 'None', 'use_experimental_parser': 'False', 'partial_parse': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'quiet': 'False', 'printer_width': '80', 'fail_fast': 'False', 'warn_error': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'version_check': 'True', 'indirect_selection': 'eager', 'invocation_command': 'dbt ls --resource-type model --output json', 'log_format': 'default', 'target_path': 'None', 'write_json': 'True', 'debug': 'False', 'static_parser': 'True', 'empty': 'None', 'introspect': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl'}
[0m15:16:35.405934 [error] [MainThread]: Encountered an error:
Parsing Error
  Env var required but not provided: 'S3_REGION'
[0m15:16:35.408723 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": false, "command_wall_clock_time": 0.10374585, "process_in_blocks": "0", "process_kernel_time": 0.216482, "process_mem_max_rss": "97591296", "process_out_blocks": "0", "process_user_time": 1.701372}
[0m15:16:35.409456 [debug] [MainThread]: Command `dbt ls` failed at 15:16:35.409317 after 0.10 seconds
[0m15:16:35.409932 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a346b10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a346a80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a2db980>]}
[0m15:16:35.410416 [debug] [MainThread]: Flushing usage events
[0m15:16:35.840120 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:18:15.956076 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1102859a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1120e7410>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1120e6ed0>]}


============================== 15:18:15.963365 | 19e286be-9577-4eca-b3a9-4a22119ae59b ==============================
[0m15:18:15.963365 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:18:15.964361 [debug] [MainThread]: running dbt with arguments {'target_path': 'None', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'fail_fast': 'False', 'quiet': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_cache_events': 'False', 'printer_width': '80', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'write_json': 'True', 'log_format': 'default', 'indirect_selection': 'eager', 'debug': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'empty': 'None', 'static_parser': 'True', 'use_experimental_parser': 'False', 'introspect': 'True', 'warn_error': 'None', 'partial_parse': 'True', 'send_anonymous_usage_stats': 'True', 'no_print': 'None', 'use_colors': 'True', 'version_check': 'True', 'cache_selected_only': 'False'}
[0m15:18:15.973478 [error] [MainThread]: Encountered an error:
Parsing Error
  Env var required but not provided: 'S3_REGION'
[0m15:18:15.976442 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": false, "command_wall_clock_time": 0.12961167, "process_in_blocks": "0", "process_kernel_time": 0.33161, "process_mem_max_rss": "97595392", "process_out_blocks": "0", "process_user_time": 1.956615}
[0m15:18:15.977367 [debug] [MainThread]: Command `dbt ls` failed at 15:18:15.977202 after 0.13 seconds
[0m15:18:15.977871 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111460da0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111dc8620>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111be6900>]}
[0m15:18:15.978375 [debug] [MainThread]: Flushing usage events
[0m15:18:16.424559 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:27:25.971158 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104c8cad0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10535f440>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10535eed0>]}


============================== 15:27:25.977959 | 2207f1f0-b96a-4d93-9fe4-1a312d0e8317 ==============================
[0m15:27:25.977959 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:27:25.978879 [debug] [MainThread]: running dbt with arguments {'cache_selected_only': 'False', 'send_anonymous_usage_stats': 'True', 'quiet': 'False', 'indirect_selection': 'eager', 'warn_error': 'None', 'use_experimental_parser': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'version_check': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_cache_events': 'False', 'printer_width': '80', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'no_print': 'None', 'static_parser': 'True', 'debug': 'False', 'log_format': 'default', 'empty': 'None', 'partial_parse': 'True', 'target_path': 'None', 'fail_fast': 'False', 'introspect': 'True', 'use_colors': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'write_json': 'True'}
[0m15:27:25.988125 [error] [MainThread]: Encountered an error:
Parsing Error
  Env var required but not provided: 'S3_REGION'
[0m15:27:25.991585 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": false, "command_wall_clock_time": 0.11524813, "process_in_blocks": "0", "process_kernel_time": 0.394932, "process_mem_max_rss": "97812480", "process_out_blocks": "0", "process_user_time": 2.041391}
[0m15:27:25.992498 [debug] [MainThread]: Command `dbt ls` failed at 15:27:25.992313 after 0.12 seconds
[0m15:27:25.993152 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10535f230>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1051cfef0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1051cc530>]}
[0m15:27:25.993837 [debug] [MainThread]: Flushing usage events
[0m15:27:26.450375 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:37:41.268451 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124c7d10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112b778f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112b77350>]}


============================== 15:37:41.276001 | 8d150ae4-5600-4026-ba76-33feb9c94400 ==============================
[0m15:37:41.276001 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:37:41.277126 [debug] [MainThread]: running dbt with arguments {'send_anonymous_usage_stats': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'debug': 'False', 'write_json': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'static_parser': 'True', 'use_colors': 'True', 'target_path': 'None', 'introspect': 'True', 'indirect_selection': 'eager', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_cache_events': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'log_format': 'default', 'fail_fast': 'False', 'version_check': 'True', 'cache_selected_only': 'False', 'empty': 'None', 'no_print': 'None', 'use_experimental_parser': 'False', 'warn_error': 'None', 'partial_parse': 'True', 'printer_width': '80', 'quiet': 'False'}
[0m15:37:41.790417 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '8d150ae4-5600-4026-ba76-33feb9c94400', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111e56450>]}
[0m15:37:41.870447 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '8d150ae4-5600-4026-ba76-33feb9c94400', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1105ab800>]}
[0m15:37:41.874148 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:37:42.033147 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:37:42.197335 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:37:42.197837 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:37:42.240935 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '8d150ae4-5600-4026-ba76-33feb9c94400', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112dc1fa0>]}
[0m15:37:42.323837 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m15:37:42.327201 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m15:37:42.364543 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '8d150ae4-5600-4026-ba76-33feb9c94400', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112c25910>]}
[0m15:37:42.365177 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:37:42.365648 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '8d150ae4-5600-4026-ba76-33feb9c94400', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113119c40>]}
[0m15:37:42.367002 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:37:42.367695 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:37:42.368322 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:37:42.368936 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:37:42.369545 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:37:42.370174 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:37:42.370880 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:37:42.373776 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.411297, "process_in_blocks": "0", "process_kernel_time": 0.498921, "process_mem_max_rss": "119881728", "process_out_blocks": "0", "process_user_time": 2.723234}
[0m15:37:42.374475 [debug] [MainThread]: Command `dbt ls` succeeded at 15:37:42.374342 after 1.41 seconds
[0m15:37:42.375103 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1122a8b30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112b77650>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112b778f0>]}
[0m15:37:42.375590 [debug] [MainThread]: Flushing usage events
[0m15:37:42.839971 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:39:25.134553 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1138b8fe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113a938f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113a93350>]}


============================== 15:39:25.142082 | 7e4c46ff-ac12-4b62-b295-235befe11a2d ==============================
[0m15:39:25.142082 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:39:25.142915 [debug] [MainThread]: running dbt with arguments {'version_check': 'True', 'static_parser': 'True', 'use_experimental_parser': 'False', 'log_format': 'default', 'debug': 'False', 'target_path': 'None', 'no_print': 'None', 'warn_error': 'None', 'fail_fast': 'False', 'log_cache_events': 'False', 'printer_width': '80', 'empty': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'cache_selected_only': 'False', 'send_anonymous_usage_stats': 'True', 'introspect': 'True', 'use_colors': 'True', 'partial_parse': 'True', 'write_json': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'quiet': 'False', 'indirect_selection': 'eager'}
[0m15:39:25.695835 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '7e4c46ff-ac12-4b62-b295-235befe11a2d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113b314f0>]}
[0m15:39:25.775094 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '7e4c46ff-ac12-4b62-b295-235befe11a2d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112d71580>]}
[0m15:39:25.779425 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:39:25.949699 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:39:26.124910 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:39:26.125510 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:39:26.170933 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '7e4c46ff-ac12-4b62-b295-235befe11a2d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113e75a30>]}
[0m15:39:26.260812 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m15:39:26.264284 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m15:39:26.294121 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '7e4c46ff-ac12-4b62-b295-235befe11a2d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f58a10>]}
[0m15:39:26.294938 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:39:26.295598 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '7e4c46ff-ac12-4b62-b295-235befe11a2d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113e75dc0>]}
[0m15:39:26.297149 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:39:26.297952 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:39:26.298698 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:39:26.299436 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:39:26.300172 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:39:26.300837 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:39:26.301508 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:39:26.304838 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.2717237, "process_in_blocks": "0", "process_kernel_time": 0.562791, "process_mem_max_rss": "120729600", "process_out_blocks": "0", "process_user_time": 2.920555}
[0m15:39:26.306133 [debug] [MainThread]: Command `dbt ls` succeeded at 15:39:26.305814 after 1.27 seconds
[0m15:39:26.307060 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1137d8c80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113ac6120>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11330e480>]}
[0m15:39:26.307679 [debug] [MainThread]: Flushing usage events
[0m15:39:26.795351 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:44:28.073119 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1112358e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111b0d4f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d03080>]}


============================== 15:44:28.080163 | 2756656a-1954-45d9-b40e-72fa963bd5ba ==============================
[0m15:44:28.080163 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:44:28.081114 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'static_parser': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'warn_error': 'None', 'partial_parse': 'True', 'target_path': 'None', 'empty': 'None', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'indirect_selection': 'eager', 'write_json': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'no_print': 'None', 'cache_selected_only': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'version_check': 'True', 'log_format': 'default', 'send_anonymous_usage_stats': 'True', 'use_colors': 'True', 'debug': 'False', 'quiet': 'False', 'introspect': 'True', 'log_cache_events': 'False', 'fail_fast': 'False', 'use_experimental_parser': 'False'}
[0m15:44:28.584813 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '2756656a-1954-45d9-b40e-72fa963bd5ba', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111f1bfe0>]}
[0m15:44:28.661550 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '2756656a-1954-45d9-b40e-72fa963bd5ba', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111da15e0>]}
[0m15:44:28.665588 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:44:28.845613 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:44:29.047457 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:44:29.048006 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:44:29.092860 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '2756656a-1954-45d9-b40e-72fa963bd5ba', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111fb6b40>]}
[0m15:44:29.176236 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m15:44:29.179922 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m15:44:29.217240 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '2756656a-1954-45d9-b40e-72fa963bd5ba', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1121cc680>]}
[0m15:44:29.218022 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:44:29.218573 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '2756656a-1954-45d9-b40e-72fa963bd5ba', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1122d5610>]}
[0m15:44:29.220084 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:44:29.220919 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:44:29.221634 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:44:29.222546 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:44:29.223338 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:44:29.224372 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:44:29.225158 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:44:29.228436 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.2482523, "process_in_blocks": "0", "process_kernel_time": 0.487769, "process_mem_max_rss": "122355712", "process_out_blocks": "0", "process_user_time": 2.748093}
[0m15:44:29.229294 [debug] [MainThread]: Command `dbt ls` succeeded at 15:44:29.229141 after 1.25 seconds
[0m15:44:29.229867 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d032f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1114a8e30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111b0d4f0>]}
[0m15:44:29.230405 [debug] [MainThread]: Flushing usage events
[0m15:44:29.693911 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:47:39.689490 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1096dbfb0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a42f800>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a42f290>]}


============================== 15:47:39.696050 | 76c1eb40-cae9-4f62-88f2-7cb6a98bf70f ==============================
[0m15:47:39.696050 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:47:39.696987 [debug] [MainThread]: running dbt with arguments {'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'quiet': 'False', 'indirect_selection': 'eager', 'send_anonymous_usage_stats': 'True', 'no_print': 'None', 'printer_width': '80', 'static_parser': 'True', 'use_colors': 'True', 'introspect': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'warn_error': 'None', 'debug': 'False', 'cache_selected_only': 'False', 'version_check': 'True', 'target_path': 'None', 'fail_fast': 'False', 'write_json': 'True', 'empty': 'None', 'log_cache_events': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'partial_parse': 'True', 'use_experimental_parser': 'False', 'log_format': 'default'}
[0m15:47:40.004905 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '76c1eb40-cae9-4f62-88f2-7cb6a98bf70f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1097601a0>]}
[0m15:47:40.085849 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '76c1eb40-cae9-4f62-88f2-7cb6a98bf70f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a535400>]}
[0m15:47:40.087872 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:47:40.233179 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:47:40.355507 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:47:40.355989 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:47:40.399227 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '76c1eb40-cae9-4f62-88f2-7cb6a98bf70f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a6dbe60>]}
[0m15:47:40.480896 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m15:47:40.483387 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m15:47:40.497886 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '76c1eb40-cae9-4f62-88f2-7cb6a98bf70f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a8e4560>]}
[0m15:47:40.498559 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:47:40.499022 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '76c1eb40-cae9-4f62-88f2-7cb6a98bf70f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a42eba0>]}
[0m15:47:40.500286 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:47:40.500922 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:47:40.501498 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:47:40.502068 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:47:40.502635 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:47:40.503204 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:47:40.503862 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:47:40.506411 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.9174321, "process_in_blocks": "0", "process_kernel_time": 0.312795, "process_mem_max_rss": "120922112", "process_out_blocks": "0", "process_user_time": 2.500389}
[0m15:47:40.507044 [debug] [MainThread]: Command `dbt ls` succeeded at 15:47:40.506917 after 0.92 seconds
[0m15:47:40.507551 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a643440>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a5cd640>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a536e40>]}
[0m15:47:40.508075 [debug] [MainThread]: Flushing usage events
[0m15:47:40.955388 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:48:22.459286 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108feb410>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109617860>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1096172c0>]}


============================== 15:48:22.464365 | 83c291c1-2375-4a8a-87ce-fe5eb0894b3c ==============================
[0m15:48:22.464365 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:48:22.465093 [debug] [MainThread]: running dbt with arguments {'indirect_selection': 'eager', 'write_json': 'True', 'cache_selected_only': 'False', 'fail_fast': 'False', 'static_parser': 'True', 'version_check': 'True', 'quiet': 'False', 'introspect': 'True', 'warn_error': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'empty': 'None', 'use_colors': 'True', 'printer_width': '80', 'invocation_command': 'dbt ls --resource-type model --output json', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'debug': 'False', 'log_cache_events': 'False', 'target_path': 'None', 'use_experimental_parser': 'False', 'partial_parse': 'True', 'send_anonymous_usage_stats': 'True', 'no_print': 'None', 'log_format': 'default'}
[0m15:48:22.763838 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '83c291c1-2375-4a8a-87ce-fe5eb0894b3c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106f88fe0>]}
[0m15:48:22.842736 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '83c291c1-2375-4a8a-87ce-fe5eb0894b3c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1096b3890>]}
[0m15:48:22.844776 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:48:23.019280 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:48:23.212921 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:48:23.213586 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:48:23.265481 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '83c291c1-2375-4a8a-87ce-fe5eb0894b3c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10982bdd0>]}
[0m15:48:23.352672 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m15:48:23.355161 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m15:48:23.370701 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '83c291c1-2375-4a8a-87ce-fe5eb0894b3c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109a858e0>]}
[0m15:48:23.371306 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:48:23.371804 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '83c291c1-2375-4a8a-87ce-fe5eb0894b3c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1098c39e0>]}
[0m15:48:23.373201 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:48:23.373975 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:48:23.374585 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:48:23.375247 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:48:23.376090 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:48:23.376762 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:48:23.377355 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:48:23.379973 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0072298, "process_in_blocks": "0", "process_kernel_time": 0.315632, "process_mem_max_rss": "121200640", "process_out_blocks": "0", "process_user_time": 2.420288}
[0m15:48:23.380688 [debug] [MainThread]: Command `dbt ls` succeeded at 15:48:23.380516 after 1.01 seconds
[0m15:48:23.381233 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1096172c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109bd1e50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109bd2090>]}
[0m15:48:23.381705 [debug] [MainThread]: Flushing usage events
[0m15:48:23.857518 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m15:52:56.636288 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db4a870>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2b54f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e92b0b0>]}


============================== 15:52:56.644590 | 661decb9-cddb-4d01-a0a2-8663a89fac39 ==============================
[0m15:52:56.644590 [info ] [MainThread]: Running with dbt=1.10.9
[0m15:52:56.645663 [debug] [MainThread]: running dbt with arguments {'introspect': 'True', 'log_format': 'default', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'version_check': 'True', 'printer_width': '80', 'target_path': 'None', 'quiet': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'debug': 'False', 'no_print': 'None', 'log_cache_events': 'False', 'write_json': 'True', 'indirect_selection': 'eager', 'empty': 'None', 'fail_fast': 'False', 'cache_selected_only': 'False', 'warn_error': 'None', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'static_parser': 'True', 'use_experimental_parser': 'False', 'send_anonymous_usage_stats': 'True', 'use_colors': 'True', 'partial_parse': 'True'}
[0m15:52:57.126325 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '661decb9-cddb-4d01-a0a2-8663a89fac39', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db74a70>]}
[0m15:52:57.204852 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '661decb9-cddb-4d01-a0a2-8663a89fac39', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10eb77920>]}
[0m15:52:57.208482 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m15:52:57.385755 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m15:52:57.573740 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m15:52:57.574318 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m15:52:57.619278 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '661decb9-cddb-4d01-a0a2-8663a89fac39', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dd78800>]}
[0m15:52:57.704029 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m15:52:57.707888 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m15:52:57.748716 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '661decb9-cddb-4d01-a0a2-8663a89fac39', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10edf4980>]}
[0m15:52:57.749467 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m15:52:57.749997 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '661decb9-cddb-4d01-a0a2-8663a89fac39', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ddf42c0>]}
[0m15:52:57.751522 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m15:52:57.752305 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m15:52:57.753006 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m15:52:57.753707 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m15:52:57.754327 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m15:52:57.754950 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m15:52:57.755574 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m15:52:57.758556 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.2245451, "process_in_blocks": "0", "process_kernel_time": 0.533759, "process_mem_max_rss": "119799808", "process_out_blocks": "0", "process_user_time": 2.780364}
[0m15:52:57.759327 [debug] [MainThread]: Command `dbt ls` succeeded at 15:52:57.759176 after 1.23 seconds
[0m15:52:57.759987 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e802e10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0f8770>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e92b380>]}
[0m15:52:57.760527 [debug] [MainThread]: Flushing usage events
[0m15:52:58.248465 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:02:53.428317 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109e3f3b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a47b830>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a47b2c0>]}


============================== 16:02:53.435536 | 219aae00-b2ad-4cef-a29e-8e83ee45b138 ==============================
[0m16:02:53.435536 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:02:53.436654 [debug] [MainThread]: running dbt with arguments {'indirect_selection': 'eager', 'log_format': 'default', 'write_json': 'True', 'log_cache_events': 'False', 'quiet': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'version_check': 'True', 'warn_error': 'None', 'use_colors': 'True', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'fail_fast': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'debug': 'False', 'use_experimental_parser': 'False', 'introspect': 'True', 'cache_selected_only': 'False', 'printer_width': '80', 'target_path': 'None', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'partial_parse': 'True', 'empty': 'None'}
[0m16:02:53.796386 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '219aae00-b2ad-4cef-a29e-8e83ee45b138', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a558ef0>]}
[0m16:02:53.892495 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '219aae00-b2ad-4cef-a29e-8e83ee45b138', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a4ad4c0>]}
[0m16:02:53.894527 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:02:54.039130 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:02:54.163340 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:02:54.163830 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:02:54.207459 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '219aae00-b2ad-4cef-a29e-8e83ee45b138', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a85d8b0>]}
[0m16:02:54.291342 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:02:54.294305 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:02:54.310075 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '219aae00-b2ad-4cef-a29e-8e83ee45b138', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a900680>]}
[0m16:02:54.310711 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:02:54.311178 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '219aae00-b2ad-4cef-a29e-8e83ee45b138', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a47aff0>]}
[0m16:02:54.312471 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:02:54.313132 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:02:54.313734 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:02:54.314320 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:02:54.314910 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:02:54.315493 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:02:54.316085 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:02:54.319685 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.067816, "process_in_blocks": "0", "process_kernel_time": 0.360843, "process_mem_max_rss": "121204736", "process_out_blocks": "0", "process_user_time": 2.686287}
[0m16:02:54.320527 [debug] [MainThread]: Command `dbt ls` succeeded at 16:02:54.320382 after 1.07 seconds
[0m16:02:54.321100 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a4313d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a4315b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a47aff0>]}
[0m16:02:54.321601 [debug] [MainThread]: Flushing usage events
[0m16:02:54.788863 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:03:36.620471 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b95f1a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bf837a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bf83200>]}


============================== 16:03:36.628793 | 51dfff28-c63f-4f44-a674-4cbe34d76ea5 ==============================
[0m16:03:36.628793 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:03:36.629654 [debug] [MainThread]: running dbt with arguments {'quiet': 'False', 'no_print': 'None', 'use_experimental_parser': 'False', 'target_path': 'None', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'send_anonymous_usage_stats': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'use_colors': 'True', 'debug': 'False', 'static_parser': 'True', 'fail_fast': 'False', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'printer_width': '80', 'log_format': 'default', 'log_cache_events': 'False', 'empty': 'None', 'partial_parse': 'True', 'cache_selected_only': 'False', 'indirect_selection': 'eager', 'write_json': 'True', 'warn_error': 'None', 'version_check': 'True'}
[0m16:03:36.954736 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '51dfff28-c63f-4f44-a674-4cbe34d76ea5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109ca0560>]}
[0m16:03:37.034424 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '51dfff28-c63f-4f44-a674-4cbe34d76ea5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c04f410>]}
[0m16:03:37.036534 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:03:37.194301 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:03:37.319757 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:03:37.320253 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:03:37.363010 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '51dfff28-c63f-4f44-a674-4cbe34d76ea5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c351b20>]}
[0m16:03:37.444688 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:03:37.447129 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:03:37.461808 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '51dfff28-c63f-4f44-a674-4cbe34d76ea5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c436ae0>]}
[0m16:03:37.462635 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:03:37.463139 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '51dfff28-c63f-4f44-a674-4cbe34d76ea5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c53cad0>]}
[0m16:03:37.464463 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:03:37.465126 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:03:37.465711 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:03:37.466285 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:03:37.466867 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:03:37.467443 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:03:37.468019 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:03:37.470572 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.95585823, "process_in_blocks": "0", "process_kernel_time": 0.317569, "process_mem_max_rss": "120950784", "process_out_blocks": "0", "process_user_time": 2.426522}
[0m16:03:37.471308 [debug] [MainThread]: Command `dbt ls` succeeded at 16:03:37.471162 after 0.96 seconds
[0m16:03:37.471820 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bf83470>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bf834a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bf83440>]}
[0m16:03:37.472288 [debug] [MainThread]: Flushing usage events
[0m16:03:37.920768 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:04:29.904918 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109be7530>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a213800>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a213260>]}


============================== 16:04:29.911729 | b269246a-ad1a-4494-b03a-a32da5582e75 ==============================
[0m16:04:29.911729 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:04:29.912484 [debug] [MainThread]: running dbt with arguments {'debug': 'False', 'warn_error': 'None', 'version_check': 'True', 'introspect': 'True', 'indirect_selection': 'eager', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'fail_fast': 'False', 'use_experimental_parser': 'False', 'log_format': 'default', 'log_cache_events': 'False', 'quiet': 'False', 'cache_selected_only': 'False', 'empty': 'None', 'use_colors': 'True', 'printer_width': '80', 'partial_parse': 'True', 'send_anonymous_usage_stats': 'True', 'static_parser': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'write_json': 'True', 'no_print': 'None'}
[0m16:04:30.466544 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'b269246a-ad1a-4494-b03a-a32da5582e75', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109968b00>]}
[0m16:04:30.542891 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'b269246a-ad1a-4494-b03a-a32da5582e75', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a245700>]}
[0m16:04:30.546790 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:04:30.704073 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:04:30.873420 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:04:30.873967 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:04:30.920146 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'b269246a-ad1a-4494-b03a-a32da5582e75', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a451b20>]}
[0m16:04:31.001678 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:04:31.005093 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:04:31.040083 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'b269246a-ad1a-4494-b03a-a32da5582e75', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a6812b0>]}
[0m16:04:31.040715 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:04:31.041184 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'b269246a-ad1a-4494-b03a-a32da5582e75', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a7a5f40>]}
[0m16:04:31.042481 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:04:31.043159 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:04:31.043775 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:04:31.044383 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:04:31.044993 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:04:31.045600 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:04:31.046210 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:04:31.048880 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.2389152, "process_in_blocks": "0", "process_kernel_time": 0.51556, "process_mem_max_rss": "120401920", "process_out_blocks": "0", "process_user_time": 2.813276}
[0m16:04:31.049696 [debug] [MainThread]: Command `dbt ls` succeeded at 16:04:31.049551 after 1.24 seconds
[0m16:04:31.050229 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109e91460>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a1fa060>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a7a57c0>]}
[0m16:04:31.050704 [debug] [MainThread]: Flushing usage events
[0m16:04:31.546803 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:05:46.241196 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1109fb2c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111037860>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111037290>]}


============================== 16:05:46.247852 | ed4d87d0-6ad1-404d-b994-65da0c332192 ==============================
[0m16:05:46.247852 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:05:46.248681 [debug] [MainThread]: running dbt with arguments {'static_parser': 'True', 'debug': 'False', 'printer_width': '80', 'target_path': 'None', 'use_experimental_parser': 'False', 'indirect_selection': 'eager', 'introspect': 'True', 'fail_fast': 'False', 'partial_parse': 'True', 'version_check': 'True', 'write_json': 'True', 'warn_error': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'empty': 'None', 'no_print': 'None', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'use_colors': 'True', 'send_anonymous_usage_stats': 'True', 'log_cache_events': 'False', 'cache_selected_only': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'quiet': 'False', 'log_format': 'default'}
[0m16:05:46.716013 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'ed4d87d0-6ad1-404d-b994-65da0c332192', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11101c7a0>]}
[0m16:05:46.812008 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'ed4d87d0-6ad1-404d-b994-65da0c332192', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11035bb00>]}
[0m16:05:46.815258 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:05:46.988810 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:05:47.163330 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:05:47.163908 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:05:47.209018 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'ed4d87d0-6ad1-404d-b994-65da0c332192', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111164380>]}
[0m16:05:47.292564 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:05:47.295473 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:05:47.328919 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'ed4d87d0-6ad1-404d-b994-65da0c332192', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111480e30>]}
[0m16:05:47.329553 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:05:47.330030 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'ed4d87d0-6ad1-404d-b994-65da0c332192', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1115e7320>]}
[0m16:05:47.331357 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:05:47.332049 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:05:47.332685 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:05:47.333306 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:05:47.333944 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:05:47.334567 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:05:47.335191 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:05:47.338570 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.1908982, "process_in_blocks": "0", "process_kernel_time": 0.46624, "process_mem_max_rss": "120414208", "process_out_blocks": "0", "process_user_time": 2.716231}
[0m16:05:47.339318 [debug] [MainThread]: Command `dbt ls` succeeded at 16:05:47.339174 after 1.19 seconds
[0m16:05:47.339879 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1115e5880>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f91e3c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1115dff80>]}
[0m16:05:47.340365 [debug] [MainThread]: Flushing usage events
[0m16:05:47.777449 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:22:07.408253 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110bd4e90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1134d7380>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1134d6e10>]}


============================== 16:22:07.415749 | 1242b106-ba26-465a-a36d-584edd2275b8 ==============================
[0m16:22:07.415749 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:22:07.416627 [debug] [MainThread]: running dbt with arguments {'invocation_command': 'dbt run --target prod --target prod', 'no_print': 'None', 'use_colors': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'send_anonymous_usage_stats': 'True', 'partial_parse': 'True', 'indirect_selection': 'eager', 'quiet': 'False', 'cache_selected_only': 'False', 'use_experimental_parser': 'False', 'empty': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'static_parser': 'True', 'debug': 'False', 'fail_fast': 'False', 'write_json': 'True', 'version_check': 'True', 'introspect': 'True', 'log_format': 'default', 'printer_width': '80', 'target_path': 'None', 'warn_error': 'None', 'log_cache_events': 'False'}
[0m16:22:07.425894 [error] [MainThread]: Encountered an error:
Parsing Error
  Env var required but not provided: 'S3_REGION'
[0m16:22:07.428993 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": false, "command_wall_clock_time": 0.12401151, "process_in_blocks": "0", "process_kernel_time": 0.416384, "process_mem_max_rss": "97079296", "process_out_blocks": "0", "process_user_time": 2.050433}
[0m16:22:07.429740 [debug] [MainThread]: Command `dbt run` failed at 16:22:07.429589 after 0.12 seconds
[0m16:22:07.430263 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1134d7170>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1134d6b40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112f6eed0>]}
[0m16:22:07.430790 [debug] [MainThread]: Flushing usage events
[0m16:22:07.903469 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:23:46.766131 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1137b1b20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113e2b260>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113e2acc0>]}


============================== 16:23:46.771672 | 36ca6602-a0f6-4e7d-bd03-e2e7c6fbe96e ==============================
[0m16:23:46.771672 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:23:46.772410 [debug] [MainThread]: running dbt with arguments {'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'introspect': 'True', 'invocation_command': 'dbt run --target prod --target prod', 'partial_parse': 'True', 'write_json': 'True', 'warn_error': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True', 'debug': 'False', 'version_check': 'True', 'use_colors': 'True', 'empty': 'False', 'printer_width': '80', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'static_parser': 'True', 'log_cache_events': 'False', 'fail_fast': 'False', 'cache_selected_only': 'False', 'use_experimental_parser': 'False', 'indirect_selection': 'eager', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'no_print': 'None', 'quiet': 'False'}
[0m16:23:47.275486 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '36ca6602-a0f6-4e7d-bd03-e2e7c6fbe96e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113ff04a0>]}
[0m16:23:47.354298 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '36ca6602-a0f6-4e7d-bd03-e2e7c6fbe96e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11185b830>]}
[0m16:23:47.358495 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:23:47.521064 [debug] [MainThread]: checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, vars: {}, profile: , target: prod, version: 1.10.9
[0m16:23:47.621575 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m16:23:47.622168 [debug] [MainThread]: previous checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, current checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23
[0m16:23:47.622632 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '36ca6602-a0f6-4e7d-bd03-e2e7c6fbe96e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1137b1610>]}
[0m16:23:49.167644 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '36ca6602-a0f6-4e7d-bd03-e2e7c6fbe96e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112fe8fe0>]}
[0m16:23:49.244429 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:23:49.247524 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:23:49.284427 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '36ca6602-a0f6-4e7d-bd03-e2e7c6fbe96e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1145f7740>]}
[0m16:23:49.285213 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:23:49.285741 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '36ca6602-a0f6-4e7d-bd03-e2e7c6fbe96e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1145fd610>]}
[0m16:23:49.288373 [info ] [MainThread]: 
[0m16:23:49.288894 [info ] [MainThread]: Concurrency: 1 threads (target='prod')
[0m16:23:49.289369 [info ] [MainThread]: 
[0m16:23:49.290076 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:23:49.296534 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m16:23:49.375288 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:23:49.375867 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:23:49.376292 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:23:49.459684 [debug] [ThreadPool]: SQL status: OK in 0.083 seconds
[0m16:23:49.461628 [debug] [ThreadPool]: On list_memory: Close
[0m16:23:49.464563 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:23:49.465117 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:23:49.465581 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:23:49.468381 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:23:49.470130 [debug] [ThreadPool]: On list_memory: Close
[0m16:23:49.471000 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_references)
[0m16:23:49.471593 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_references"
"
[0m16:23:49.479146 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:23:49.479651 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:23:49.480059 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:23:49.483246 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:23:49.485136 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:23:49.485586 [debug] [ThreadPool]: On create_memory_fct_references: BEGIN
[0m16:23:49.486294 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:23:49.486700 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:23:49.487105 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_references"} */

    
    
        create schema if not exists memory."fct_references"
    
[0m16:23:49.487854 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:23:49.488892 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m16:23:49.489318 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:23:49.489719 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m16:23:49.490371 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:23:49.490811 [debug] [ThreadPool]: On create_memory_fct_references: Close
[0m16:23:49.491539 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_references, now create_memory_fct_salesforce)
[0m16:23:49.492098 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m16:23:49.494511 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:23:49.494984 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:23:49.495371 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:23:49.497367 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:23:49.499118 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:23:49.499553 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m16:23:49.500199 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:23:49.500588 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:23:49.500973 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m16:23:49.501621 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:23:49.502617 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:23:49.503021 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:23:49.503396 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:23:49.504038 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:23:49.504497 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m16:23:49.506218 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_fct_references)
[0m16:23:49.512239 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m16:23:49.512696 [debug] [ThreadPool]: On list_memory_fct_references: BEGIN
[0m16:23:49.513074 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:23:49.514674 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:23:49.515071 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m16:23:49.515478 [debug] [ThreadPool]: On list_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_references'
    and lower(table_catalog) = 'memory'
  
[0m16:23:49.537524 [debug] [ThreadPool]: SQL status: OK in 0.022 seconds
[0m16:23:49.539490 [debug] [ThreadPool]: On list_memory_fct_references: ROLLBACK
[0m16:23:49.542022 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_references'
[0m16:23:49.542639 [debug] [ThreadPool]: On list_memory_fct_references: Close
[0m16:23:49.543415 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_references, now list_memory_fct_salesforce)
[0m16:23:49.547528 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:23:49.548066 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m16:23:49.548475 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:23:49.550459 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:23:49.551046 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:23:49.551492 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m16:23:49.555724 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m16:23:49.557383 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m16:23:49.558507 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m16:23:49.558955 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m16:23:49.559714 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '36ca6602-a0f6-4e7d-bd03-e2e7c6fbe96e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a21160>]}
[0m16:23:49.560313 [debug] [MainThread]: Using duckdb connection "master"
[0m16:23:49.560720 [debug] [MainThread]: On master: BEGIN
[0m16:23:49.561098 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:23:49.562936 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:23:49.563456 [debug] [MainThread]: On master: COMMIT
[0m16:23:49.563876 [debug] [MainThread]: Using duckdb connection "master"
[0m16:23:49.564256 [debug] [MainThread]: On master: COMMIT
[0m16:23:49.564879 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:23:49.565303 [debug] [MainThread]: On master: Close
[0m16:23:49.569007 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m16:23:49.569681 [info ] [Thread-1 (]: 1 of 7 START sql table model fct_references.states ............................. [RUN]
[0m16:23:49.570259 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m16:23:49.570723 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m16:23:49.578095 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m16:23:49.578969 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m16:23:49.618349 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m16:23:49.619687 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:23:49.620583 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m16:23:49.621146 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:23:49.623612 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:23:49.624255 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:23:49.625146 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."fct_references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m16:23:49.691080 [debug] [Thread-1 (]: SQL status: OK in 0.065 seconds
[0m16:23:49.702670 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:23:49.703422 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */
alter table memory."fct_references"."states__dbt_tmp" rename to "states"
[0m16:23:49.705170 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:23:49.715147 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:23:49.715807 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."fct_references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:23:49.725426 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m16:23:49.743315 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:23:49.743965 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:23:49.744506 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:23:49.745986 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:23:49.754208 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:23:49.754927 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

      drop table if exists memory."fct_references"."states__dbt_backup" cascade
    
[0m16:23:49.756003 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:23:49.760256 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m16:23:49.764314 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '36ca6602-a0f6-4e7d-bd03-e2e7c6fbe96e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114656930>]}
[0m16:23:49.765454 [info ] [Thread-1 (]: 1 of 7 OK created sql table model fct_references.states ........................ [[32mOK[0m in 0.19s]
[0m16:23:49.766380 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m16:23:49.766951 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m16:23:49.767698 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m16:23:49.768753 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m16:23:49.769526 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m16:23:49.774881 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m16:23:49.776166 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m16:23:49.781053 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m16:23:49.782662 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:23:49.783654 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m16:23:49.784961 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:23:49.787937 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:23:49.788653 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:23:49.789412 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as timestamp) as created,
        cast(_dlt_processed_utc as timestamp) as processed,
        cast(system_modstamp as timestamp) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:23:50.305113 [debug] [Thread-1 (]: SQL status: OK in 0.515 seconds
[0m16:23:50.310585 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:23:50.311302 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m16:23:50.312490 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:23:50.319116 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:23:50.319771 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:23:50.324024 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:23:50.325862 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:23:50.326435 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:23:50.326959 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:23:50.328352 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:23:50.333920 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:23:50.334596 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m16:23:50.335531 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:23:50.337261 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m16:23:50.338024 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '36ca6602-a0f6-4e7d-bd03-e2e7c6fbe96e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a73d40>]}
[0m16:23:50.338830 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.57s]
[0m16:23:50.339598 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m16:23:50.340247 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m16:23:50.341076 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m16:23:50.341723 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m16:23:50.342230 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m16:23:50.349714 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m16:23:50.351198 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m16:23:50.354861 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m16:23:50.355882 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:23:50.356372 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m16:23:50.356832 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:23:50.358867 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:23:50.359385 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:23:50.360110 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as timestamp) as created,
        cast(c._dlt_processed_utc as timestamp) as processed,
        cast(c.system_modstamp as timestamp) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."fct_references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."fct_references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:23:56.012245 [debug] [Thread-1 (]: SQL status: OK in 5.651 seconds
[0m16:23:56.016200 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:23:56.016738 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m16:23:56.017613 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:23:56.022752 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:23:56.023355 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:23:56.208008 [debug] [Thread-1 (]: SQL status: OK in 0.184 seconds
[0m16:23:56.209584 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:23:56.210092 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:23:56.210591 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:23:56.215929 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m16:23:56.220333 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:23:56.221031 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m16:23:56.221979 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:23:56.223736 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m16:23:56.224411 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '36ca6602-a0f6-4e7d-bd03-e2e7c6fbe96e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a83230>]}
[0m16:23:56.225122 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 5.88s]
[0m16:23:56.225966 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m16:23:56.226897 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m16:23:56.227690 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m16:23:56.228436 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m16:23:56.228950 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m16:23:56.234467 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m16:23:56.235353 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m16:23:56.239013 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m16:23:56.239890 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:23:56.240356 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m16:23:56.240789 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:23:56.242630 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:23:56.243139 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:23:56.243779 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        cast(ol.is_deleted as boolean) as is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        cast(o.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as timestamp) as created,
        cast(o._dlt_processed_utc as timestamp) as processed,
        cast(o.system_modstamp as timestamp) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:23:57.206324 [debug] [Thread-1 (]: SQL status: OK in 0.962 seconds
[0m16:23:57.210005 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:23:57.210547 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m16:23:57.211425 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:23:57.216885 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:23:57.217607 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:23:57.221414 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:23:57.222911 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:23:57.223409 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:23:57.223851 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:23:57.225740 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:23:57.228531 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:23:57.229038 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m16:23:57.229897 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:23:57.232361 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m16:23:57.233153 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '36ca6602-a0f6-4e7d-bd03-e2e7c6fbe96e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114959520>]}
[0m16:23:57.233926 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 1.00s]
[0m16:23:57.234645 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m16:23:57.235149 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m16:23:57.236106 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m16:23:57.237313 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m16:23:57.237983 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m16:23:57.241713 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m16:23:57.242682 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m16:23:57.246272 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m16:23:57.247182 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:23:57.247688 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m16:23:57.248250 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:23:57.250127 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:23:57.250610 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:23:57.251151 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        cast(t.is_deleted as boolean) as is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as timestamp) as created,
        cast(t._dlt_processed_utc as timestamp) as processed,
        cast(t.system_modstamp as timestamp) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:23:57.680309 [debug] [Thread-1 (]: SQL status: OK in 0.428 seconds
[0m16:23:57.686181 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:23:57.686722 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m16:23:57.687636 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:23:57.692945 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:23:57.693511 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:23:57.696178 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:23:57.697683 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:23:57.698230 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:23:57.698707 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:23:57.699931 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:23:57.702528 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:23:57.702997 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m16:23:57.703742 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:23:57.705262 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m16:23:57.705975 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '36ca6602-a0f6-4e7d-bd03-e2e7c6fbe96e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114ad54f0>]}
[0m16:23:57.706807 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.47s]
[0m16:23:57.707816 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m16:23:57.708953 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m16:23:57.709800 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m16:23:57.710499 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m16:23:57.711120 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m16:23:57.715746 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m16:23:57.717080 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m16:23:57.720693 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m16:23:57.721632 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:23:57.722141 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m16:23:57.722589 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:23:57.724266 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:23:57.724804 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:23:57.725580 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        cast(m.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as timestamp) as created,
        cast(m._dlt_processed_utc as timestamp) as processed,
        cast(m.system_modstamp as timestamp) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:23:59.473745 [debug] [Thread-1 (]: SQL status: OK in 1.747 seconds
[0m16:23:59.477629 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:23:59.478186 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m16:23:59.479133 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:23:59.484459 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:23:59.485024 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:23:59.489719 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:23:59.491263 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:23:59.491749 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:23:59.492190 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:23:59.495122 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:23:59.498288 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:23:59.499209 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m16:23:59.500211 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:23:59.502361 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m16:23:59.503167 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '36ca6602-a0f6-4e7d-bd03-e2e7c6fbe96e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11465f950>]}
[0m16:23:59.503921 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.79s]
[0m16:23:59.504623 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m16:23:59.505121 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m16:23:59.505673 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m16:23:59.506228 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m16:23:59.506689 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m16:23:59.511795 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m16:23:59.512866 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m16:23:59.516323 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m16:23:59.517197 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:23:59.517651 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m16:23:59.518076 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:23:59.519697 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:23:59.520163 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:23:59.521067 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m16:24:01.438167 [debug] [Thread-1 (]: SQL status: OK in 1.916 seconds
[0m16:24:01.442016 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:24:01.442712 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m16:24:01.443674 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:24:01.448679 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:24:01.449224 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:24:01.451736 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:24:01.453276 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:24:01.453762 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:24:01.454202 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:24:01.455016 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:24:01.457612 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:24:01.458083 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m16:24:01.458831 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:24:01.460338 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m16:24:01.461254 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '36ca6602-a0f6-4e7d-bd03-e2e7c6fbe96e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a74260>]}
[0m16:24:01.462300 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.95s]
[0m16:24:01.463412 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m16:24:01.465138 [debug] [MainThread]: Using duckdb connection "master"
[0m16:24:01.465858 [debug] [MainThread]: On master: BEGIN
[0m16:24:01.466326 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:24:01.468374 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:24:01.468921 [debug] [MainThread]: On master: COMMIT
[0m16:24:01.469371 [debug] [MainThread]: Using duckdb connection "master"
[0m16:24:01.469761 [debug] [MainThread]: On master: COMMIT
[0m16:24:01.470407 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:24:01.470934 [debug] [MainThread]: On master: Close
[0m16:24:01.471637 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:24:01.472073 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m16:24:01.472617 [info ] [MainThread]: 
[0m16:24:01.473094 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.18 seconds (12.18s).
[0m16:24:01.475091 [debug] [MainThread]: Command end result
[0m16:24:01.500437 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:24:01.502682 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:24:01.510887 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m16:24:01.511413 [info ] [MainThread]: 
[0m16:24:01.511900 [info ] [MainThread]: [32mCompleted successfully[0m
[0m16:24:01.512325 [info ] [MainThread]: 
[0m16:24:01.512793 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m16:24:01.515524 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 14.841782, "process_in_blocks": "0", "process_kernel_time": 0.980304, "process_mem_max_rss": "373518336", "process_out_blocks": "0", "process_user_time": 10.711306}
[0m16:24:01.516150 [debug] [MainThread]: Command `dbt run` succeeded at 16:24:01.516022 after 14.84 seconds
[0m16:24:01.516679 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113e2b200>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113e2b170>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113e2afc0>]}
[0m16:24:01.517169 [debug] [MainThread]: Flushing usage events
[0m16:24:01.992006 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:25:46.564788 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ac24770>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd5b2f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd5ad20>]}


============================== 16:25:46.570883 | 9f18d9a0-a2f1-4553-86b6-e08c11122b51 ==============================
[0m16:25:46.570883 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:25:46.571672 [debug] [MainThread]: running dbt with arguments {'fail_fast': 'False', 'printer_width': '80', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'use_colors': 'True', 'version_check': 'True', 'target_path': 'None', 'indirect_selection': 'eager', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'static_parser': 'True', 'introspect': 'True', 'debug': 'False', 'write_json': 'True', 'no_print': 'None', 'send_anonymous_usage_stats': 'True', 'use_experimental_parser': 'False', 'warn_error': 'None', 'invocation_command': 'dbt run --target prod', 'cache_selected_only': 'False', 'empty': 'False', 'partial_parse': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_format': 'default', 'quiet': 'False', 'log_cache_events': 'False'}
[0m16:25:46.902057 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '9f18d9a0-a2f1-4553-86b6-e08c11122b51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd0c800>]}
[0m16:25:46.989900 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '9f18d9a0-a2f1-4553-86b6-e08c11122b51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10978b9e0>]}
[0m16:25:46.991978 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:25:47.159821 [debug] [MainThread]: checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, vars: {}, profile: , target: prod, version: 1.10.9
[0m16:25:47.296885 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:25:47.297422 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:25:47.343626 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '9f18d9a0-a2f1-4553-86b6-e08c11122b51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bfa1f40>]}
[0m16:25:47.433910 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:25:47.436712 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:25:47.455561 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '9f18d9a0-a2f1-4553-86b6-e08c11122b51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c325490>]}
[0m16:25:47.456217 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:25:47.456761 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '9f18d9a0-a2f1-4553-86b6-e08c11122b51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c13c7a0>]}
[0m16:25:47.459267 [info ] [MainThread]: 
[0m16:25:47.459777 [info ] [MainThread]: Concurrency: 1 threads (target='prod')
[0m16:25:47.460225 [info ] [MainThread]: 
[0m16:25:47.460936 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:25:47.467961 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m16:25:47.526119 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:25:47.526624 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:25:47.527031 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:25:47.576356 [debug] [ThreadPool]: SQL status: OK in 0.049 seconds
[0m16:25:47.578241 [debug] [ThreadPool]: On list_memory: Close
[0m16:25:47.581452 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:25:47.582033 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:25:47.582442 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:25:47.585185 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:25:47.586731 [debug] [ThreadPool]: On list_memory: Close
[0m16:25:47.587538 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_references)
[0m16:25:47.588127 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_references"
"
[0m16:25:47.597610 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:25:47.598162 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:25:47.598610 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:25:47.601296 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:25:47.602965 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:25:47.603392 [debug] [ThreadPool]: On create_memory_fct_references: BEGIN
[0m16:25:47.604058 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:25:47.604457 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:25:47.604840 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_references"} */

    
    
        create schema if not exists memory."fct_references"
    
[0m16:25:47.605548 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:25:47.606628 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m16:25:47.607062 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:25:47.607459 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m16:25:47.608235 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:25:47.608920 [debug] [ThreadPool]: On create_memory_fct_references: Close
[0m16:25:47.609626 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_references, now create_memory_fct_salesforce)
[0m16:25:47.610159 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m16:25:47.612725 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:25:47.613480 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:25:47.613933 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:25:47.616400 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:25:47.618365 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:25:47.618881 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m16:25:47.619602 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:25:47.620012 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:25:47.620407 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m16:25:47.621085 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:25:47.622104 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:25:47.622515 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:25:47.622951 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:25:47.623632 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:25:47.624108 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m16:25:47.625940 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_fct_references)
[0m16:25:47.632220 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m16:25:47.632758 [debug] [ThreadPool]: On list_memory_fct_references: BEGIN
[0m16:25:47.633496 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:25:47.635317 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:25:47.635830 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m16:25:47.636253 [debug] [ThreadPool]: On list_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_references'
    and lower(table_catalog) = 'memory'
  
[0m16:25:47.654356 [debug] [ThreadPool]: SQL status: OK in 0.018 seconds
[0m16:25:47.656425 [debug] [ThreadPool]: On list_memory_fct_references: ROLLBACK
[0m16:25:47.658144 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_references'
[0m16:25:47.658727 [debug] [ThreadPool]: On list_memory_fct_references: Close
[0m16:25:47.659474 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_references, now list_memory_fct_salesforce)
[0m16:25:47.661878 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:25:47.662373 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m16:25:47.662751 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:25:47.664659 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:25:47.665085 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:25:47.665489 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m16:25:47.669320 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:25:47.670774 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m16:25:47.671808 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m16:25:47.672199 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m16:25:47.672888 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '9f18d9a0-a2f1-4553-86b6-e08c11122b51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd59490>]}
[0m16:25:47.673467 [debug] [MainThread]: Using duckdb connection "master"
[0m16:25:47.673868 [debug] [MainThread]: On master: BEGIN
[0m16:25:47.674242 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:25:47.675873 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:25:47.676295 [debug] [MainThread]: On master: COMMIT
[0m16:25:47.676758 [debug] [MainThread]: Using duckdb connection "master"
[0m16:25:47.677150 [debug] [MainThread]: On master: COMMIT
[0m16:25:47.677789 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:25:47.678216 [debug] [MainThread]: On master: Close
[0m16:25:47.680588 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m16:25:47.681250 [info ] [Thread-1 (]: 1 of 7 START sql table model fct_references.states ............................. [RUN]
[0m16:25:47.681833 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m16:25:47.682313 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m16:25:47.689612 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m16:25:47.690499 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m16:25:47.727018 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m16:25:47.727985 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:25:47.728551 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m16:25:47.729011 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:25:47.730721 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:25:47.731202 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:25:47.731800 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."fct_references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m16:25:47.764134 [debug] [Thread-1 (]: SQL status: OK in 0.032 seconds
[0m16:25:47.770997 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:25:47.771515 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */
alter table memory."fct_references"."states__dbt_tmp" rename to "states"
[0m16:25:47.772380 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:25:47.781311 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:25:47.781862 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."fct_references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:25:47.783820 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:25:47.794998 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:25:47.795566 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:25:47.796153 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:25:47.797350 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:25:47.803805 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:25:47.804359 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

      drop table if exists memory."fct_references"."states__dbt_backup" cascade
    
[0m16:25:47.805206 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:25:47.807934 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m16:25:47.809885 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9f18d9a0-a2f1-4553-86b6-e08c11122b51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd59490>]}
[0m16:25:47.810778 [info ] [Thread-1 (]: 1 of 7 OK created sql table model fct_references.states ........................ [[32mOK[0m in 0.13s]
[0m16:25:47.811621 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m16:25:47.812205 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m16:25:47.812960 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m16:25:47.813713 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m16:25:47.814179 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m16:25:47.819399 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m16:25:47.820227 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m16:25:47.825048 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m16:25:47.825926 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:25:47.826401 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m16:25:47.826833 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:25:47.828549 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:25:47.829026 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:25:47.829646 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as timestamp) as created,
        cast(_dlt_processed_utc as timestamp) as processed,
        cast(system_modstamp as timestamp) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:25:48.328313 [debug] [Thread-1 (]: SQL status: OK in 0.498 seconds
[0m16:25:48.333260 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:25:48.333973 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m16:25:48.335152 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:25:48.341279 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:25:48.341902 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:25:48.344612 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:25:48.346308 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:25:48.346866 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:25:48.347389 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:25:48.348392 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:25:48.351014 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:25:48.351515 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m16:25:48.352326 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:25:48.353891 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m16:25:48.354696 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9f18d9a0-a2f1-4553-86b6-e08c11122b51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c7c1550>]}
[0m16:25:48.355629 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.54s]
[0m16:25:48.356508 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m16:25:48.357048 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m16:25:48.357870 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m16:25:48.358546 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m16:25:48.359082 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m16:25:48.374189 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m16:25:48.375194 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m16:25:48.378593 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m16:25:48.379602 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:25:48.380071 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m16:25:48.380527 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:25:48.382222 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:25:48.382710 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:25:48.383454 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as timestamp) as created,
        cast(c._dlt_processed_utc as timestamp) as processed,
        cast(c.system_modstamp as timestamp) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."fct_references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."fct_references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:25:54.129795 [debug] [Thread-1 (]: SQL status: OK in 5.746 seconds
[0m16:25:54.133360 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:25:54.134030 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m16:25:54.134929 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:25:54.140280 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:25:54.140888 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:25:54.318935 [debug] [Thread-1 (]: SQL status: OK in 0.177 seconds
[0m16:25:54.320616 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:25:54.321304 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:25:54.321794 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:25:54.327517 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m16:25:54.330830 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:25:54.331383 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m16:25:54.332329 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:25:54.334028 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m16:25:54.334875 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9f18d9a0-a2f1-4553-86b6-e08c11122b51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c7b3950>]}
[0m16:25:54.335650 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 5.98s]
[0m16:25:54.336365 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m16:25:54.337147 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m16:25:54.337747 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m16:25:54.338304 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m16:25:54.338766 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m16:25:54.343252 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m16:25:54.344330 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m16:25:54.347721 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m16:25:54.348624 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:25:54.349102 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m16:25:54.349540 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:25:54.351389 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:25:54.351857 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:25:54.352480 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        cast(ol.is_deleted as boolean) as is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        cast(o.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as timestamp) as created,
        cast(o._dlt_processed_utc as timestamp) as processed,
        cast(o.system_modstamp as timestamp) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:25:55.311766 [debug] [Thread-1 (]: SQL status: OK in 0.959 seconds
[0m16:25:55.316122 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:25:55.316692 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m16:25:55.317660 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:25:55.323293 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:25:55.323871 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:25:55.327557 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:25:55.332112 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:25:55.332909 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:25:55.333496 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:25:55.335389 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:25:55.339182 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:25:55.339990 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m16:25:55.341082 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:25:55.344144 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m16:25:55.345618 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9f18d9a0-a2f1-4553-86b6-e08c11122b51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c7d9550>]}
[0m16:25:55.347249 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 1.01s]
[0m16:25:55.348446 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m16:25:55.349140 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m16:25:55.349989 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m16:25:55.350788 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m16:25:55.351420 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m16:25:55.355849 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m16:25:55.356898 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m16:25:55.360814 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m16:25:55.361810 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:25:55.362361 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m16:25:55.363234 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:25:55.365572 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:25:55.366151 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:25:55.366754 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        cast(t.is_deleted as boolean) as is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as timestamp) as created,
        cast(t._dlt_processed_utc as timestamp) as processed,
        cast(t.system_modstamp as timestamp) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:25:55.833293 [debug] [Thread-1 (]: SQL status: OK in 0.466 seconds
[0m16:25:55.837099 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:25:55.837740 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m16:25:55.838650 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:25:55.843974 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:25:55.844677 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:25:55.847594 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:25:55.849117 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:25:55.849605 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:25:55.850042 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:25:55.851137 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:25:55.853913 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:25:55.854421 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m16:25:55.855258 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:25:55.856903 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m16:25:55.857812 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9f18d9a0-a2f1-4553-86b6-e08c11122b51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c7e4dd0>]}
[0m16:25:55.858854 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.51s]
[0m16:25:55.859938 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m16:25:55.861063 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m16:25:55.862044 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m16:25:55.862921 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m16:25:55.863552 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m16:25:55.867565 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m16:25:55.868593 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m16:25:55.872011 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m16:25:55.872858 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:25:55.873308 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m16:25:55.873730 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:25:55.875465 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:25:55.876203 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:25:55.876826 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        cast(m.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as timestamp) as created,
        cast(m._dlt_processed_utc as timestamp) as processed,
        cast(m.system_modstamp as timestamp) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:25:57.659960 [debug] [Thread-1 (]: SQL status: OK in 1.782 seconds
[0m16:25:57.664285 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:25:57.664893 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m16:25:57.665941 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:25:57.672046 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:25:57.672808 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:25:57.679350 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m16:25:57.681051 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:25:57.681592 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:25:57.682161 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:25:57.684217 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:25:57.689853 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:25:57.690801 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m16:25:57.691890 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:25:57.694411 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m16:25:57.696009 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9f18d9a0-a2f1-4553-86b6-e08c11122b51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c775a30>]}
[0m16:25:57.697022 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.83s]
[0m16:25:57.697932 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m16:25:57.698541 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m16:25:57.699312 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m16:25:57.699967 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m16:25:57.700470 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m16:25:57.706692 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m16:25:57.707720 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m16:25:57.714956 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m16:25:57.716122 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:25:57.716710 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m16:25:57.717402 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:25:57.719683 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:25:57.720320 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:25:57.721477 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m16:25:59.661412 [debug] [Thread-1 (]: SQL status: OK in 1.938 seconds
[0m16:25:59.738182 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:25:59.738931 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m16:25:59.739952 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:25:59.746017 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:25:59.746572 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:25:59.749569 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:25:59.751047 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:25:59.751573 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:25:59.752165 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:25:59.753073 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:25:59.756027 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:25:59.756810 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m16:25:59.757638 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:25:59.760405 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m16:25:59.761338 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9f18d9a0-a2f1-4553-86b6-e08c11122b51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c7fb110>]}
[0m16:25:59.762426 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 2.06s]
[0m16:25:59.763716 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m16:25:59.765267 [debug] [MainThread]: Using duckdb connection "master"
[0m16:25:59.765803 [debug] [MainThread]: On master: BEGIN
[0m16:25:59.766250 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:25:59.768364 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:25:59.768890 [debug] [MainThread]: On master: COMMIT
[0m16:25:59.769316 [debug] [MainThread]: Using duckdb connection "master"
[0m16:25:59.769812 [debug] [MainThread]: On master: COMMIT
[0m16:25:59.770504 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:25:59.771348 [debug] [MainThread]: On master: Close
[0m16:25:59.772354 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:25:59.772858 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m16:25:59.773580 [info ] [MainThread]: 
[0m16:25:59.774254 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.31 seconds (12.31s).
[0m16:25:59.776552 [debug] [MainThread]: Command end result
[0m16:25:59.806018 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:25:59.808637 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:25:59.818050 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m16:25:59.818564 [info ] [MainThread]: 
[0m16:25:59.819101 [info ] [MainThread]: [32mCompleted successfully[0m
[0m16:25:59.819526 [info ] [MainThread]: 
[0m16:25:59.820229 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m16:25:59.823527 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 13.354287, "process_in_blocks": "0", "process_kernel_time": 0.845751, "process_mem_max_rss": "365957120", "process_out_blocks": "0", "process_user_time": 6.401538}
[0m16:25:59.824295 [debug] [MainThread]: Command `dbt run` succeeded at 16:25:59.824155 after 13.36 seconds
[0m16:25:59.824857 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb86b10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ba3e900>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b006510>]}
[0m16:25:59.825433 [debug] [MainThread]: Flushing usage events
[0m16:26:00.368533 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:54:19.263616 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e928ce0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f64f260>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f64ecf0>]}


============================== 16:54:19.271394 | e1a3bdba-252e-43d9-bb3e-9a459b58f691 ==============================
[0m16:54:19.271394 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:54:19.272502 [debug] [MainThread]: running dbt with arguments {'version_check': 'True', 'empty': 'False', 'warn_error': 'None', 'use_experimental_parser': 'False', 'target_path': 'None', 'log_cache_events': 'False', 'cache_selected_only': 'False', 'use_colors': 'True', 'write_json': 'True', 'introspect': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'debug': 'False', 'indirect_selection': 'eager', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'fail_fast': 'False', 'invocation_command': 'dbt run', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'printer_width': '80', 'partial_parse': 'True', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m16:54:19.789090 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'e1a3bdba-252e-43d9-bb3e-9a459b58f691', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f602990>]}
[0m16:54:19.867474 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'e1a3bdba-252e-43d9-bb3e-9a459b58f691', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e983ec0>]}
[0m16:54:19.871280 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:54:20.038360 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:54:20.138931 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m16:54:20.139528 [debug] [MainThread]: previous checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, current checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e
[0m16:54:20.140002 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'e1a3bdba-252e-43d9-bb3e-9a459b58f691', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fb42480>]}
[0m16:54:21.724681 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'e1a3bdba-252e-43d9-bb3e-9a459b58f691', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fdc7380>]}
[0m16:54:21.802769 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:54:21.806011 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:54:21.851036 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'e1a3bdba-252e-43d9-bb3e-9a459b58f691', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fdd1280>]}
[0m16:54:21.851848 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:54:21.852357 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'e1a3bdba-252e-43d9-bb3e-9a459b58f691', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fd83950>]}
[0m16:54:21.854921 [info ] [MainThread]: 
[0m16:54:21.855424 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m16:54:21.855869 [info ] [MainThread]: 
[0m16:54:21.856525 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:54:21.862877 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m16:54:21.937713 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:54:21.938339 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:54:21.938810 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:54:22.029847 [debug] [ThreadPool]: SQL status: OK in 0.091 seconds
[0m16:54:22.031637 [debug] [ThreadPool]: On list_memory: Close
[0m16:54:22.034364 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:54:22.034907 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:54:22.035324 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:54:22.037503 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:54:22.038959 [debug] [ThreadPool]: On list_memory: Close
[0m16:54:22.039748 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_references)
[0m16:54:22.040322 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_references"
"
[0m16:54:22.047359 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:54:22.047851 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:54:22.048241 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:54:22.050886 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:54:22.052594 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:54:22.053051 [debug] [ThreadPool]: On create_memory_fct_references: BEGIN
[0m16:54:22.053737 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:54:22.054136 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:54:22.054523 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_references"} */

    
    
        create schema if not exists memory."fct_references"
    
[0m16:54:22.055215 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:54:22.056247 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m16:54:22.056666 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:54:22.057052 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m16:54:22.057789 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:54:22.058223 [debug] [ThreadPool]: On create_memory_fct_references: Close
[0m16:54:22.058932 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_references, now create_memory_fct_salesforce)
[0m16:54:22.059479 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m16:54:22.061619 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:54:22.062086 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:54:22.062499 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:54:22.064565 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:54:22.066301 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:54:22.066713 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m16:54:22.067317 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:54:22.067705 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:54:22.068085 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m16:54:22.068714 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:54:22.069692 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:54:22.070094 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:54:22.070469 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:54:22.071045 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:54:22.071445 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m16:54:22.073054 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_fct_references)
[0m16:54:22.079067 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m16:54:22.079732 [debug] [ThreadPool]: On list_memory_fct_references: BEGIN
[0m16:54:22.080134 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:54:22.081749 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:54:22.082149 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m16:54:22.082549 [debug] [ThreadPool]: On list_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_references'
    and lower(table_catalog) = 'memory'
  
[0m16:54:22.103952 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m16:54:22.105638 [debug] [ThreadPool]: On list_memory_fct_references: ROLLBACK
[0m16:54:22.108633 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_references'
[0m16:54:22.109346 [debug] [ThreadPool]: On list_memory_fct_references: Close
[0m16:54:22.110276 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_references, now list_memory_fct_salesforce)
[0m16:54:22.115025 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:54:22.115626 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m16:54:22.116096 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:54:22.118003 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:54:22.118481 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:54:22.118964 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m16:54:22.123583 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m16:54:22.125249 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m16:54:22.126364 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m16:54:22.126781 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m16:54:22.127526 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'e1a3bdba-252e-43d9-bb3e-9a459b58f691', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fbef320>]}
[0m16:54:22.128139 [debug] [MainThread]: Using duckdb connection "master"
[0m16:54:22.128559 [debug] [MainThread]: On master: BEGIN
[0m16:54:22.128966 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:54:22.130826 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:54:22.131323 [debug] [MainThread]: On master: COMMIT
[0m16:54:22.131755 [debug] [MainThread]: Using duckdb connection "master"
[0m16:54:22.132162 [debug] [MainThread]: On master: COMMIT
[0m16:54:22.132762 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:54:22.133251 [debug] [MainThread]: On master: Close
[0m16:54:22.137720 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m16:54:22.138498 [info ] [Thread-1 (]: 1 of 7 START sql table model fct_references.states ............................. [RUN]
[0m16:54:22.139193 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m16:54:22.139684 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m16:54:22.147467 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m16:54:22.148433 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m16:54:22.184298 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m16:54:22.185373 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:54:22.185854 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m16:54:22.186287 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:54:22.187953 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:54:22.188405 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:54:22.188991 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."fct_references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m16:54:22.244252 [debug] [Thread-1 (]: SQL status: OK in 0.055 seconds
[0m16:54:22.251730 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:54:22.252331 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."fct_references"."states__dbt_tmp" rename to "states"
[0m16:54:22.253887 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:54:22.262841 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:54:22.263465 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."fct_references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:54:22.273138 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m16:54:22.285480 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:54:22.286102 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:54:22.286575 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:54:22.287853 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:54:22.294383 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:54:22.294977 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop table if exists memory."fct_references"."states__dbt_backup" cascade
    
[0m16:54:22.295903 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:54:22.298961 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m16:54:22.301625 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e1a3bdba-252e-43d9-bb3e-9a459b58f691', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fe7ac90>]}
[0m16:54:22.302536 [info ] [Thread-1 (]: 1 of 7 OK created sql table model fct_references.states ........................ [[32mOK[0m in 0.16s]
[0m16:54:22.303307 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m16:54:22.303860 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m16:54:22.305308 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m16:54:22.306318 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m16:54:22.306903 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m16:54:22.311397 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m16:54:22.312497 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m16:54:22.316246 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m16:54:22.317268 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:54:22.317771 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m16:54:22.318213 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:54:22.320108 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:54:22.321125 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:54:22.322539 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as timestamp) as created,
        cast(_dlt_processed_utc as timestamp) as processed,
        cast(system_modstamp as timestamp) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:54:22.589158 [debug] [Thread-1 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as timestamp) as created,
        cast(_dlt_processed_utc as timestamp) as processed,
        cast(system_modstamp as timestamp) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:54:22.589995 [debug] [Thread-1 (]: DuckDB adapter: Rolling back transaction.
[0m16:54:22.590676 [debug] [Thread-1 (]: On model.usawfl.tournaments: ROLLBACK
[0m16:54:22.609138 [debug] [Thread-1 (]: Failed to rollback 'model.usawfl.tournaments'
[0m16:54:22.609790 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m16:54:22.612794 [debug] [Thread-1 (]: Runtime Error in model tournaments (models/fct_salesforce/tournaments.sql)
  IO Error: No files found that match the pattern "s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet"
[0m16:54:22.613458 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e1a3bdba-252e-43d9-bb3e-9a459b58f691', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fa70830>]}
[0m16:54:22.614278 [error] [Thread-1 (]: 2 of 7 ERROR creating sql table model fct_salesforce.tournaments ............... [[31mERROR[0m in 0.31s]
[0m16:54:22.615061 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m16:54:22.615598 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m16:54:22.616188 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m16:54:22.616917 [debug] [Thread-4 (]: Marking all children of 'model.usawfl.tournaments' to be skipped because of status 'error'.  Reason: Runtime Error in model tournaments (models/fct_salesforce/tournaments.sql)
  IO Error: No files found that match the pattern "s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet".
[0m16:54:22.617449 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m16:54:22.618798 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m16:54:22.627398 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m16:54:22.628585 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m16:54:22.634370 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m16:54:22.635483 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:54:22.635973 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m16:54:22.636429 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:54:22.638266 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:54:22.638816 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:54:22.639584 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as timestamp) as created,
        cast(c._dlt_processed_utc as timestamp) as processed,
        cast(c.system_modstamp as timestamp) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."fct_references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."fct_references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:54:22.875730 [debug] [Thread-1 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as timestamp) as created,
        cast(c._dlt_processed_utc as timestamp) as processed,
        cast(c.system_modstamp as timestamp) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."fct_references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."fct_references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:54:22.877562 [debug] [Thread-1 (]: DuckDB adapter: Rolling back transaction.
[0m16:54:22.878722 [debug] [Thread-1 (]: On model.usawfl.contacts: ROLLBACK
[0m16:54:22.884258 [debug] [Thread-1 (]: Failed to rollback 'model.usawfl.contacts'
[0m16:54:22.885019 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m16:54:22.888761 [debug] [Thread-1 (]: Runtime Error in model contacts (models/fct_salesforce/contacts.sql)
  IO Error: No files found that match the pattern "s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet"
[0m16:54:22.889581 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'e1a3bdba-252e-43d9-bb3e-9a459b58f691', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110309520>]}
[0m16:54:22.890608 [error] [Thread-1 (]: 3 of 7 ERROR creating sql table model fct_salesforce.contacts .................. [[31mERROR[0m in 0.27s]
[0m16:54:22.891607 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m16:54:22.892492 [debug] [Thread-4 (]: Marking all children of 'model.usawfl.contacts' to be skipped because of status 'error'.  Reason: Runtime Error in model contacts (models/fct_salesforce/contacts.sql)
  IO Error: No files found that match the pattern "s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet".
[0m16:54:22.893599 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m16:54:22.894212 [info ] [Thread-1 (]: 4 of 7 SKIP relation fct_salesforce.officials .................................. [[33mSKIP[0m]
[0m16:54:22.894845 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m16:54:22.895415 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m16:54:22.895981 [info ] [Thread-1 (]: 5 of 7 SKIP relation fct_salesforce.teams ...................................... [[33mSKIP[0m]
[0m16:54:22.896601 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m16:54:22.897554 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m16:54:22.898143 [info ] [Thread-1 (]: 6 of 7 SKIP relation fct_salesforce.members .................................... [[33mSKIP[0m]
[0m16:54:22.898757 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m16:54:22.899391 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m16:54:22.899973 [info ] [Thread-1 (]: 7 of 7 SKIP relation fct_salesforce.stats ...................................... [[33mSKIP[0m]
[0m16:54:22.900594 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m16:54:22.902043 [debug] [MainThread]: Using duckdb connection "master"
[0m16:54:22.902555 [debug] [MainThread]: On master: BEGIN
[0m16:54:22.903009 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:54:22.904994 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:54:22.905497 [debug] [MainThread]: On master: COMMIT
[0m16:54:22.905979 [debug] [MainThread]: Using duckdb connection "master"
[0m16:54:22.906440 [debug] [MainThread]: On master: COMMIT
[0m16:54:22.907106 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:54:22.907591 [debug] [MainThread]: On master: Close
[0m16:54:22.908199 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:54:22.908589 [debug] [MainThread]: Connection 'model.usawfl.contacts' was properly closed.
[0m16:54:22.909070 [info ] [MainThread]: 
[0m16:54:22.909519 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 1.05 seconds (1.05s).
[0m16:54:22.910977 [debug] [MainThread]: Command end result
[0m16:54:22.934076 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:54:22.936446 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:54:22.944618 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m16:54:22.945125 [info ] [MainThread]: 
[0m16:54:22.945637 [info ] [MainThread]: [31mCompleted with 2 errors, 0 partial successes, and 0 warnings:[0m
[0m16:54:22.946088 [info ] [MainThread]: 
[0m16:54:22.946720 [error] [MainThread]: [31mFailure in model tournaments (models/fct_salesforce/tournaments.sql)[0m
[0m16:54:22.947220 [error] [MainThread]:   Runtime Error in model tournaments (models/fct_salesforce/tournaments.sql)
  IO Error: No files found that match the pattern "s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet"
[0m16:54:22.947620 [info ] [MainThread]: 
[0m16:54:22.948101 [info ] [MainThread]:   compiled code at target/compiled/usawfl/models/fct_salesforce/tournaments.sql
[0m16:54:22.948518 [info ] [MainThread]: 
[0m16:54:22.949003 [error] [MainThread]: [31mFailure in model contacts (models/fct_salesforce/contacts.sql)[0m
[0m16:54:22.949489 [error] [MainThread]:   Runtime Error in model contacts (models/fct_salesforce/contacts.sql)
  IO Error: No files found that match the pattern "s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet"
[0m16:54:22.949902 [info ] [MainThread]: 
[0m16:54:22.950373 [info ] [MainThread]:   compiled code at target/compiled/usawfl/models/fct_salesforce/contacts.sql
[0m16:54:22.950778 [info ] [MainThread]: 
[0m16:54:22.951229 [info ] [MainThread]: Done. PASS=1 WARN=0 ERROR=2 SKIP=4 NO-OP=0 TOTAL=7
[0m16:54:22.953972 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": false, "command_wall_clock_time": 3.7949386, "process_in_blocks": "0", "process_kernel_time": 0.739384, "process_mem_max_rss": "152518656", "process_out_blocks": "0", "process_user_time": 4.863306}
[0m16:54:22.954752 [debug] [MainThread]: Command `dbt run` failed at 16:54:22.954615 after 3.80 seconds
[0m16:54:22.955314 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f64f1a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f64efc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1102883e0>]}
[0m16:54:22.955863 [debug] [MainThread]: Flushing usage events
[0m16:54:23.405836 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:58:21.110424 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111b139b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11218f2c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11218ed20>]}


============================== 16:58:21.118374 | d0139400-5950-4961-aa3a-182268e0a4cd ==============================
[0m16:58:21.118374 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:58:21.119292 [debug] [MainThread]: running dbt with arguments {'log_cache_events': 'False', 'send_anonymous_usage_stats': 'True', 'partial_parse': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'introspect': 'True', 'target_path': 'None', 'fail_fast': 'False', 'indirect_selection': 'eager', 'debug': 'False', 'write_json': 'True', 'empty': 'False', 'use_colors': 'True', 'cache_selected_only': 'False', 'version_check': 'True', 'quiet': 'False', 'invocation_command': 'dbt run', 'printer_width': '80', 'warn_error': 'None', 'no_print': 'None', 'log_format': 'default', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'static_parser': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'use_experimental_parser': 'False'}
[0m16:58:21.576418 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'd0139400-5950-4961-aa3a-182268e0a4cd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11220ce30>]}
[0m16:58:21.655207 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'd0139400-5950-4961-aa3a-182268e0a4cd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112257e90>]}
[0m16:58:21.658585 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:58:21.821505 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:58:21.995945 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:58:21.996458 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:58:22.043361 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'd0139400-5950-4961-aa3a-182268e0a4cd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1123d6390>]}
[0m16:58:22.124546 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:58:22.128007 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:58:22.166165 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'd0139400-5950-4961-aa3a-182268e0a4cd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1125d4b60>]}
[0m16:58:22.166796 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:58:22.167265 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'd0139400-5950-4961-aa3a-182268e0a4cd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112571190>]}
[0m16:58:22.169647 [info ] [MainThread]: 
[0m16:58:22.170131 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m16:58:22.170546 [info ] [MainThread]: 
[0m16:58:22.171206 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:58:22.177237 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m16:58:22.253858 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:58:22.254455 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:58:22.254936 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:58:22.328883 [debug] [ThreadPool]: SQL status: OK in 0.074 seconds
[0m16:58:22.330533 [debug] [ThreadPool]: On list_memory: Close
[0m16:58:22.333006 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:58:22.333480 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:58:22.333903 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:58:22.336261 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:58:22.337778 [debug] [ThreadPool]: On list_memory: Close
[0m16:58:22.338536 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_references)
[0m16:58:22.339093 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_references"
"
[0m16:58:22.347733 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:58:22.348234 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:58:22.348625 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:58:22.351374 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:58:22.353167 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:58:22.353628 [debug] [ThreadPool]: On create_memory_fct_references: BEGIN
[0m16:58:22.354331 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:58:22.354742 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:58:22.355148 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_references"} */

    
    
        create schema if not exists memory."fct_references"
    
[0m16:58:22.355931 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:58:22.356987 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m16:58:22.357418 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:58:22.357821 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m16:58:22.358475 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:58:22.358887 [debug] [ThreadPool]: On create_memory_fct_references: Close
[0m16:58:22.359571 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_references, now create_memory_fct_salesforce)
[0m16:58:22.360095 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m16:58:22.362205 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:58:22.362628 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:58:22.363047 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:58:22.365028 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:58:22.366539 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:58:22.366958 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m16:58:22.367580 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:58:22.367970 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:58:22.368354 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m16:58:22.369020 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:58:22.370000 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:58:22.370405 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:58:22.370782 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:58:22.371405 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:58:22.371812 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m16:58:22.373406 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_fct_references)
[0m16:58:22.379132 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m16:58:22.379635 [debug] [ThreadPool]: On list_memory_fct_references: BEGIN
[0m16:58:22.380038 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:58:22.381620 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:58:22.382022 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m16:58:22.382416 [debug] [ThreadPool]: On list_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_references'
    and lower(table_catalog) = 'memory'
  
[0m16:58:22.402053 [debug] [ThreadPool]: SQL status: OK in 0.019 seconds
[0m16:58:22.403595 [debug] [ThreadPool]: On list_memory_fct_references: ROLLBACK
[0m16:58:22.406380 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_references'
[0m16:58:22.406903 [debug] [ThreadPool]: On list_memory_fct_references: Close
[0m16:58:22.407605 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_references, now list_memory_fct_salesforce)
[0m16:58:22.409816 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:58:22.410243 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m16:58:22.410635 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:58:22.412543 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:58:22.413003 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:58:22.413479 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m16:58:22.417378 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:58:22.418872 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m16:58:22.420012 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m16:58:22.420414 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m16:58:22.421112 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'd0139400-5950-4961-aa3a-182268e0a4cd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111abb3b0>]}
[0m16:58:22.421666 [debug] [MainThread]: Using duckdb connection "master"
[0m16:58:22.422057 [debug] [MainThread]: On master: BEGIN
[0m16:58:22.422431 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:58:22.424044 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:58:22.424458 [debug] [MainThread]: On master: COMMIT
[0m16:58:22.424857 [debug] [MainThread]: Using duckdb connection "master"
[0m16:58:22.425236 [debug] [MainThread]: On master: COMMIT
[0m16:58:22.425806 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:58:22.426212 [debug] [MainThread]: On master: Close
[0m16:58:22.430095 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m16:58:22.430821 [info ] [Thread-1 (]: 1 of 7 START sql table model fct_references.states ............................. [RUN]
[0m16:58:22.431428 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m16:58:22.431923 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m16:58:22.439530 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m16:58:22.440373 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m16:58:22.475930 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m16:58:22.476907 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:58:22.477380 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m16:58:22.477812 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:58:22.479434 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:58:22.479877 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:58:22.480466 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."fct_references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m16:58:22.529998 [debug] [Thread-1 (]: SQL status: OK in 0.049 seconds
[0m16:58:22.536647 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:58:22.537152 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."fct_references"."states__dbt_tmp" rename to "states"
[0m16:58:22.538564 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:58:22.546770 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:58:22.547320 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."fct_references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:58:22.560629 [debug] [Thread-1 (]: SQL status: OK in 0.013 seconds
[0m16:58:22.572896 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:58:22.573512 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:58:22.574000 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:58:22.575340 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:58:22.581778 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:58:22.582380 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop table if exists memory."fct_references"."states__dbt_backup" cascade
    
[0m16:58:22.583253 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:58:22.586210 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m16:58:22.589085 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd0139400-5950-4961-aa3a-182268e0a4cd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fa80470>]}
[0m16:58:22.590156 [info ] [Thread-1 (]: 1 of 7 OK created sql table model fct_references.states ........................ [[32mOK[0m in 0.16s]
[0m16:58:22.590933 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m16:58:22.591445 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m16:58:22.592014 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m16:58:22.592583 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m16:58:22.593041 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m16:58:22.598398 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m16:58:22.599420 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m16:58:22.604169 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m16:58:22.605034 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:58:22.605530 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m16:58:22.605994 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:58:22.607685 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:58:22.608137 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:58:22.608697 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as timestamp) as created,
        cast(_dlt_processed_utc as timestamp) as processed,
        cast(system_modstamp as timestamp) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:58:23.065286 [debug] [Thread-1 (]: SQL status: OK in 0.456 seconds
[0m16:58:23.069294 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:58:23.069916 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m16:58:23.070915 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:58:23.076491 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:58:23.077072 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:58:23.081405 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:58:23.083029 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:58:23.083567 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:58:23.084043 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:58:23.085147 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:58:23.087974 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:58:23.088651 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m16:58:23.089641 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:58:23.091407 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m16:58:23.092167 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd0139400-5950-4961-aa3a-182268e0a4cd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112bcaae0>]}
[0m16:58:23.092935 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.50s]
[0m16:58:23.093721 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m16:58:23.094232 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m16:58:23.094789 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m16:58:23.095581 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m16:58:23.096175 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m16:58:23.111528 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m16:58:23.112521 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m16:58:23.115977 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m16:58:23.116974 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:58:23.117446 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m16:58:23.117884 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:58:23.119563 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:58:23.120038 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:58:23.120781 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as timestamp) as created,
        cast(c._dlt_processed_utc as timestamp) as processed,
        cast(c.system_modstamp as timestamp) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."fct_references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."fct_references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:58:28.697747 [debug] [Thread-1 (]: SQL status: OK in 5.574 seconds
[0m16:58:28.702756 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:58:28.703737 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m16:58:28.705309 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:58:28.712946 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:58:28.713954 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:58:28.944154 [debug] [Thread-1 (]: SQL status: OK in 0.229 seconds
[0m16:58:28.945752 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:58:28.946264 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:58:28.946721 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:58:28.951923 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m16:58:28.954723 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:58:28.955308 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m16:58:28.956189 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:58:28.957858 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m16:58:28.958608 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd0139400-5950-4961-aa3a-182268e0a4cd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112bed6a0>]}
[0m16:58:28.959407 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 5.86s]
[0m16:58:28.960149 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m16:58:28.961048 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m16:58:28.961661 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m16:58:28.962229 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m16:58:28.962722 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m16:58:28.967236 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m16:58:28.969865 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m16:58:28.973320 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m16:58:28.974311 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:58:28.974921 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m16:58:28.975519 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:58:28.977669 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:58:28.978215 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:58:28.978919 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        cast(ol.is_deleted as boolean) as is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        cast(o.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as timestamp) as created,
        cast(o._dlt_processed_utc as timestamp) as processed,
        cast(o.system_modstamp as timestamp) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:58:29.886631 [debug] [Thread-1 (]: SQL status: OK in 0.907 seconds
[0m16:58:29.892062 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:58:29.892769 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m16:58:29.893861 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:58:29.899632 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:58:29.900283 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:58:29.903848 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:58:29.907426 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:58:29.907957 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:58:29.908398 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:58:29.912592 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:58:29.916141 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:58:29.916721 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m16:58:29.917648 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:58:29.919635 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m16:58:29.920553 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd0139400-5950-4961-aa3a-182268e0a4cd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112c0fdd0>]}
[0m16:58:29.921531 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 0.96s]
[0m16:58:29.922568 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m16:58:29.923258 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m16:58:29.924120 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m16:58:29.924978 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m16:58:29.925513 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m16:58:29.929165 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m16:58:29.930206 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m16:58:29.934116 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m16:58:29.934974 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:58:29.935446 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m16:58:29.935880 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:58:29.937976 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:58:29.938493 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:58:29.939090 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        cast(t.is_deleted as boolean) as is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as timestamp) as created,
        cast(t._dlt_processed_utc as timestamp) as processed,
        cast(t.system_modstamp as timestamp) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:58:30.395475 [debug] [Thread-1 (]: SQL status: OK in 0.456 seconds
[0m16:58:30.399369 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:58:30.399955 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m16:58:30.400928 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:58:30.406093 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:58:30.406645 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:58:30.409660 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:58:30.411232 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:58:30.411749 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:58:30.412210 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:58:30.413933 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:58:30.416729 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:58:30.417226 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m16:58:30.418083 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:58:30.419809 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m16:58:30.420499 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd0139400-5950-4961-aa3a-182268e0a4cd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112768a10>]}
[0m16:58:30.421209 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.50s]
[0m16:58:30.421911 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m16:58:30.422737 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m16:58:30.423316 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m16:58:30.423866 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m16:58:30.424323 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m16:58:30.428250 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m16:58:30.429080 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m16:58:30.432302 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m16:58:30.433136 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:58:30.433586 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m16:58:30.434014 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:58:30.435622 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:58:30.436077 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:58:30.436782 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        cast(m.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as timestamp) as created,
        cast(m._dlt_processed_utc as timestamp) as processed,
        cast(m.system_modstamp as timestamp) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:58:32.230577 [debug] [Thread-1 (]: SQL status: OK in 1.793 seconds
[0m16:58:32.233973 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:58:32.234476 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m16:58:32.235388 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:58:32.240663 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:58:32.241239 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:58:32.246422 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m16:58:32.247969 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:58:32.248456 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:58:32.248916 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:58:32.251388 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:58:32.254490 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:58:32.255172 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m16:58:32.256467 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:58:32.258526 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m16:58:32.259367 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd0139400-5950-4961-aa3a-182268e0a4cd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112b8d9a0>]}
[0m16:58:32.260328 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.84s]
[0m16:58:32.261367 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m16:58:32.261967 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m16:58:32.262631 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m16:58:32.263342 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m16:58:32.263843 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m16:58:32.269415 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m16:58:32.270462 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m16:58:32.276349 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m16:58:32.277441 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:58:32.277903 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m16:58:32.278335 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:58:32.280064 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:58:32.280642 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:58:32.281532 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m16:58:34.123612 [debug] [Thread-1 (]: SQL status: OK in 1.841 seconds
[0m16:58:34.200588 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:58:34.201346 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m16:58:34.202518 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:58:34.209271 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:58:34.209968 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:58:34.213294 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:58:34.215235 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:58:34.215867 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:58:34.216450 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:58:34.217578 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:58:34.220867 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:58:34.221471 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m16:58:34.222730 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:58:34.224984 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m16:58:34.225868 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd0139400-5950-4961-aa3a-182268e0a4cd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112c33650>]}
[0m16:58:34.226758 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.96s]
[0m16:58:34.227756 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m16:58:34.229431 [debug] [MainThread]: Using duckdb connection "master"
[0m16:58:34.229932 [debug] [MainThread]: On master: BEGIN
[0m16:58:34.230373 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:58:34.232272 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:58:34.232755 [debug] [MainThread]: On master: COMMIT
[0m16:58:34.233211 [debug] [MainThread]: Using duckdb connection "master"
[0m16:58:34.233668 [debug] [MainThread]: On master: COMMIT
[0m16:58:34.234307 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:58:34.234771 [debug] [MainThread]: On master: Close
[0m16:58:34.235342 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:58:34.235753 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m16:58:34.236268 [info ] [MainThread]: 
[0m16:58:34.236745 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.07 seconds (12.07s).
[0m16:58:34.238793 [debug] [MainThread]: Command end result
[0m16:58:34.261316 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:58:34.263495 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:58:34.270601 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m16:58:34.271063 [info ] [MainThread]: 
[0m16:58:34.271569 [info ] [MainThread]: [32mCompleted successfully[0m
[0m16:58:34.271991 [info ] [MainThread]: 
[0m16:58:34.272430 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m16:58:34.275862 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 13.253997, "process_in_blocks": "0", "process_kernel_time": 1.12864, "process_mem_max_rss": "366886912", "process_out_blocks": "0", "process_user_time": 9.781661}
[0m16:58:34.276602 [debug] [MainThread]: Command `dbt run` succeeded at 16:58:34.276470 after 13.25 seconds
[0m16:58:34.277131 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11218f200>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111439f40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11143af00>]}
[0m16:58:34.277624 [debug] [MainThread]: Flushing usage events
[0m16:58:34.812818 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:58:37.240112 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10935f7a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a033740>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a0331a0>]}


============================== 16:58:37.245462 | a2d28a76-c31e-4b03-ba2f-7100bbf87778 ==============================
[0m16:58:37.245462 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:58:37.246185 [debug] [MainThread]: running dbt with arguments {'write_json': 'True', 'static_parser': 'True', 'use_colors': 'True', 'warn_error': 'None', 'target_path': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'debug': 'False', 'printer_width': '80', 'use_experimental_parser': 'False', 'introspect': 'True', 'partial_parse': 'True', 'quiet': 'False', 'version_check': 'True', 'no_print': 'None', 'cache_selected_only': 'False', 'empty': 'None', 'log_cache_events': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'send_anonymous_usage_stats': 'True', 'indirect_selection': 'eager', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'fail_fast': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_format': 'default'}
[0m16:58:37.545504 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'a2d28a76-c31e-4b03-ba2f-7100bbf87778', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a1efa10>]}
[0m16:58:37.624316 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'a2d28a76-c31e-4b03-ba2f-7100bbf87778', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109aba030>]}
[0m16:58:37.626658 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:58:37.773290 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:58:37.897916 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:58:37.898424 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:58:37.942310 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'a2d28a76-c31e-4b03-ba2f-7100bbf87778', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a419640>]}
[0m16:58:38.023865 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:58:38.026394 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:58:38.043089 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'a2d28a76-c31e-4b03-ba2f-7100bbf87778', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a47f290>]}
[0m16:58:38.043843 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:58:38.044375 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a2d28a76-c31e-4b03-ba2f-7100bbf87778', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a2c16d0>]}
[0m16:58:38.045732 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:58:38.046419 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:58:38.047026 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:58:38.047680 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:58:38.048259 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:58:38.048836 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:58:38.049417 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:58:38.052070 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.8986606, "process_in_blocks": "0", "process_kernel_time": 0.296533, "process_mem_max_rss": "121126912", "process_out_blocks": "0", "process_user_time": 2.397067}
[0m16:58:38.052787 [debug] [MainThread]: Command `dbt ls` succeeded at 16:58:38.052609 after 0.90 seconds
[0m16:58:38.053351 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1097df170>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a5e1760>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a06b020>]}
[0m16:58:38.053855 [debug] [MainThread]: Flushing usage events
[0m16:58:38.465784 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:58:40.941767 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107ded1c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108b0f710>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108b0f1a0>]}


============================== 16:58:40.947353 | 4d55a95f-4f74-46ca-8256-059d28913c42 ==============================
[0m16:58:40.947353 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:58:40.948096 [debug] [MainThread]: running dbt with arguments {'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'fail_fast': 'False', 'send_anonymous_usage_stats': 'True', 'use_colors': 'True', 'introspect': 'True', 'warn_error': 'None', 'printer_width': '80', 'log_format': 'default', 'cache_selected_only': 'False', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'debug': 'False', 'static_parser': 'True', 'write_json': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'indirect_selection': 'eager', 'version_check': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'invocation_command': 'dbt ls --resource-type model --output json', 'partial_parse': 'True', 'empty': 'None', 'log_cache_events': 'False', 'target_path': 'None'}
[0m16:58:41.540262 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '4d55a95f-4f74-46ca-8256-059d28913c42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108bac650>]}
[0m16:58:41.620465 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '4d55a95f-4f74-46ca-8256-059d28913c42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108cdf6b0>]}
[0m16:58:41.622421 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:58:41.789731 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:58:41.913396 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m16:58:41.913892 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m16:58:41.958222 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '4d55a95f-4f74-46ca-8256-059d28913c42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108ef1580>]}
[0m16:58:42.040993 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:58:42.043440 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:58:42.058653 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '4d55a95f-4f74-46ca-8256-059d28913c42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108fd80b0>]}
[0m16:58:42.059283 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:58:42.059748 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '4d55a95f-4f74-46ca-8256-059d28913c42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1090e1850>]}
[0m16:58:42.061063 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:58:42.061754 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:58:42.062351 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:58:42.062931 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:58:42.063511 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:58:42.064092 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:58:42.064679 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:58:42.067313 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.2133638, "process_in_blocks": "0", "process_kernel_time": 0.295601, "process_mem_max_rss": "120832000", "process_out_blocks": "0", "process_user_time": 2.516725}
[0m16:58:42.068063 [debug] [MainThread]: Command `dbt ls` succeeded at 16:58:42.067858 after 1.21 seconds
[0m16:58:42.068629 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1087c4da0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108b0f440>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108b0f470>]}
[0m16:58:42.069102 [debug] [MainThread]: Flushing usage events
[0m16:58:42.488537 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:38:12.453245 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c7c4d40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca7f890>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca7f290>]}


============================== 11:38:12.463230 | e4dc6895-4511-4024-a0cb-47ec52ea1431 ==============================
[0m11:38:12.463230 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:38:12.464290 [debug] [MainThread]: running dbt with arguments {'log_format': 'default', 'static_parser': 'True', 'cache_selected_only': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'quiet': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'introspect': 'True', 'empty': 'None', 'send_anonymous_usage_stats': 'True', 'printer_width': '80', 'version_check': 'True', 'write_json': 'True', 'warn_error': 'None', 'indirect_selection': 'eager', 'no_print': 'None', 'debug': 'False', 'fail_fast': 'False', 'log_cache_events': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'target_path': 'None', 'partial_parse': 'True', 'invocation_command': 'dbt ls --resource-type model --output json'}
[0m11:38:12.971637 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'e4dc6895-4511-4024-a0cb-47ec52ea1431', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cb1f7a0>]}
[0m11:38:13.049995 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'e4dc6895-4511-4024-a0cb-47ec52ea1431', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c1b2630>]}
[0m11:38:13.054310 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:38:13.222900 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:38:13.411185 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 7 files changed.
[0m11:38:13.411998 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/tournaments.sql
[0m11:38:13.412569 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/stats.sql
[0m11:38:13.413116 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/officials.sql
[0m11:38:13.413710 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/contacts.sql
[0m11:38:13.414293 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/teams.sql
[0m11:38:13.414848 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/members.sql
[0m11:38:13.415382 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_references/states.sql
[0m11:38:13.814689 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'e4dc6895-4511-4024-a0cb-47ec52ea1431', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d080110>]}
[0m11:38:13.895219 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:38:13.898689 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:38:13.933040 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'e4dc6895-4511-4024-a0cb-47ec52ea1431', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d1a5a30>]}
[0m11:38:13.933699 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:38:13.934200 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'e4dc6895-4511-4024-a0cb-47ec52ea1431', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cb577a0>]}
[0m11:38:13.935535 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:38:13.936234 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:38:13.936846 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:38:13.937431 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:38:13.938017 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:38:13.938607 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:38:13.939197 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:38:13.947014 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.6081434, "process_in_blocks": "0", "process_kernel_time": 0.619951, "process_mem_max_rss": "125620224", "process_out_blocks": "0", "process_user_time": 3.222203}
[0m11:38:13.947771 [debug] [MainThread]: Command `dbt ls` succeeded at 11:38:13.947623 after 1.61 seconds
[0m11:38:13.948314 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b1bb980>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a4b35f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cb1ddc0>]}
[0m11:38:13.948796 [debug] [MainThread]: Flushing usage events
[0m11:38:14.393265 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:39:49.802996 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1127d91c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112e93650>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112e93020>]}


============================== 11:39:49.811498 | fc0d5de1-1883-445f-bb16-9dcfa762f1bf ==============================
[0m11:39:49.811498 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:39:49.812575 [debug] [MainThread]: running dbt with arguments {'write_json': 'True', 'static_parser': 'True', 'use_experimental_parser': 'False', 'printer_width': '80', 'fail_fast': 'False', 'partial_parse': 'True', 'quiet': 'False', 'send_anonymous_usage_stats': 'True', 'no_print': 'None', 'target_path': 'None', 'debug': 'False', 'use_colors': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'cache_selected_only': 'False', 'warn_error': 'None', 'log_cache_events': 'False', 'version_check': 'True', 'indirect_selection': 'eager', 'log_format': 'default', 'empty': 'None', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'invocation_command': 'dbt ls --resource-type model --output json', 'introspect': 'True'}
[0m11:39:50.306500 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'fc0d5de1-1883-445f-bb16-9dcfa762f1bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112f43860>]}
[0m11:39:50.383791 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'fc0d5de1-1883-445f-bb16-9dcfa762f1bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112171220>]}
[0m11:39:50.387874 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:39:50.548258 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:39:50.726242 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:39:50.726835 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:39:50.772161 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'fc0d5de1-1883-445f-bb16-9dcfa762f1bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112ec51c0>]}
[0m11:39:50.854298 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:39:50.858137 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:39:50.893335 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'fc0d5de1-1883-445f-bb16-9dcfa762f1bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1132ddbb0>]}
[0m11:39:50.894034 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:39:50.894563 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'fc0d5de1-1883-445f-bb16-9dcfa762f1bf', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112f31dc0>]}
[0m11:39:50.895900 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:39:50.896578 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:39:50.897192 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:39:50.897801 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:39:50.898403 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:39:50.899015 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:39:50.899647 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:39:50.904611 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.1976, "process_in_blocks": "0", "process_kernel_time": 0.54165, "process_mem_max_rss": "120803328", "process_out_blocks": "0", "process_user_time": 2.832413}
[0m11:39:50.905406 [debug] [MainThread]: Command `dbt ls` succeeded at 11:39:50.905266 after 1.20 seconds
[0m11:39:50.905975 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11204ce00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112e93500>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11335c3e0>]}
[0m11:39:50.906484 [debug] [MainThread]: Flushing usage events
[0m11:39:51.378296 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:40:45.731495 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a654d70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a7e9670>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a833170>]}


============================== 11:40:45.739850 | a3c5d847-e4e4-450c-84f7-dd3265754246 ==============================
[0m11:40:45.739850 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:40:45.740758 [debug] [MainThread]: running dbt with arguments {'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'quiet': 'False', 'write_json': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'fail_fast': 'False', 'version_check': 'True', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True', 'printer_width': '80', 'use_experimental_parser': 'False', 'no_print': 'None', 'indirect_selection': 'eager', 'cache_selected_only': 'False', 'log_cache_events': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'use_colors': 'True', 'empty': 'None', 'target_path': 'None', 'introspect': 'True', 'debug': 'False', 'log_format': 'default', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'partial_parse': 'True', 'warn_error': 'None'}
[0m11:40:46.288522 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'a3c5d847-e4e4-450c-84f7-dd3265754246', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a7c7fb0>]}
[0m11:40:46.377377 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'a3c5d847-e4e4-450c-84f7-dd3265754246', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109d89ca0>]}
[0m11:40:46.381002 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:40:46.643564 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:40:46.837060 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:40:46.837598 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:40:46.884056 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'a3c5d847-e4e4-450c-84f7-dd3265754246', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10aa7e630>]}
[0m11:40:46.969104 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:40:46.972060 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:40:47.001245 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'a3c5d847-e4e4-450c-84f7-dd3265754246', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10acb84d0>]}
[0m11:40:47.001868 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:40:47.002330 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a3c5d847-e4e4-450c-84f7-dd3265754246', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10addb800>]}
[0m11:40:47.003615 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:40:47.004273 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:40:47.004874 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:40:47.005467 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:40:47.006069 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:40:47.006695 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:40:47.007371 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:40:47.011514 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.3752698, "process_in_blocks": "0", "process_kernel_time": 0.55198, "process_mem_max_rss": "120360960", "process_out_blocks": "0", "process_user_time": 2.966633}
[0m11:40:47.012295 [debug] [MainThread]: Command `dbt ls` succeeded at 11:40:47.012143 after 1.38 seconds
[0m11:40:47.012864 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a7e9820>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a7e89e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a8b36e0>]}
[0m11:40:47.013374 [debug] [MainThread]: Flushing usage events
[0m11:40:47.442715 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m11:42:00.323126 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105bb7b00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1062676e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1062670b0>]}


============================== 11:42:00.332684 | eee9efa3-7fd1-4f4c-a9d2-64099779e4d3 ==============================
[0m11:42:00.332684 [info ] [MainThread]: Running with dbt=1.10.9
[0m11:42:00.333687 [debug] [MainThread]: running dbt with arguments {'debug': 'False', 'indirect_selection': 'eager', 'invocation_command': 'dbt ls --resource-type model --output json', 'partial_parse': 'True', 'static_parser': 'True', 'introspect': 'True', 'use_experimental_parser': 'False', 'version_check': 'True', 'no_print': 'None', 'warn_error': 'None', 'fail_fast': 'False', 'log_cache_events': 'False', 'cache_selected_only': 'False', 'use_colors': 'True', 'empty': 'None', 'quiet': 'False', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'write_json': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'printer_width': '80'}
[0m11:42:00.814697 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'eee9efa3-7fd1-4f4c-a9d2-64099779e4d3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x103b5d2b0>]}
[0m11:42:00.892890 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'eee9efa3-7fd1-4f4c-a9d2-64099779e4d3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10640dbe0>]}
[0m11:42:00.897164 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m11:42:01.064602 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m11:42:01.239021 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:42:01.239557 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m11:42:01.283196 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'eee9efa3-7fd1-4f4c-a9d2-64099779e4d3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064c9340>]}
[0m11:42:01.364728 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m11:42:01.367948 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m11:42:01.403470 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'eee9efa3-7fd1-4f4c-a9d2-64099779e4d3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1066b0080>]}
[0m11:42:01.404161 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m11:42:01.404641 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'eee9efa3-7fd1-4f4c-a9d2-64099779e4d3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10680dc40>]}
[0m11:42:01.406158 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m11:42:01.406852 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m11:42:01.407479 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m11:42:01.408093 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m11:42:01.408724 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m11:42:01.409341 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m11:42:01.409958 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m11:42:01.415053 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.1918914, "process_in_blocks": "0", "process_kernel_time": 0.449981, "process_mem_max_rss": "121028608", "process_out_blocks": "0", "process_user_time": 2.648862}
[0m11:42:01.415945 [debug] [MainThread]: Command `dbt ls` succeeded at 11:42:01.415783 after 1.19 seconds
[0m11:42:01.416582 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106304920>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1045850a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106731eb0>]}
[0m11:42:01.417151 [debug] [MainThread]: Flushing usage events
[0m11:42:01.882796 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:27:27.146434 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f0ccd40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f387800>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f387260>]}


============================== 12:27:27.154634 | 05dcaa89-3370-40bc-b4a0-10f14485bf0b ==============================
[0m12:27:27.154634 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:27:27.155606 [debug] [MainThread]: running dbt with arguments {'debug': 'False', 'version_check': 'True', 'warn_error': 'None', 'send_anonymous_usage_stats': 'True', 'cache_selected_only': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'introspect': 'True', 'write_json': 'True', 'log_cache_events': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'indirect_selection': 'eager', 'use_colors': 'True', 'printer_width': '80', 'no_print': 'None', 'target_path': 'None', 'static_parser': 'True', 'quiet': 'False', 'fail_fast': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'partial_parse': 'True', 'log_format': 'default', 'use_experimental_parser': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'empty': 'None'}
[0m12:27:27.745486 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '05dcaa89-3370-40bc-b4a0-10f14485bf0b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f54ec60>]}
[0m12:27:27.850083 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '05dcaa89-3370-40bc-b4a0-10f14485bf0b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e609af0>]}
[0m12:27:27.855043 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:27:28.060243 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:27:28.314150 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 7 files changed.
[0m12:27:28.315285 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/tournaments.sql
[0m12:27:28.316050 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/stats.sql
[0m12:27:28.316776 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/officials.sql
[0m12:27:28.317403 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/contacts.sql
[0m12:27:28.318041 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/teams.sql
[0m12:27:28.318639 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/members.sql
[0m12:27:28.319333 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_references/states.sql
[0m12:27:28.745858 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '05dcaa89-3370-40bc-b4a0-10f14485bf0b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f947260>]}
[0m12:27:28.826685 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:27:28.830132 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:27:28.863779 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '05dcaa89-3370-40bc-b4a0-10f14485bf0b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f80e120>]}
[0m12:27:28.864425 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:27:28.864905 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '05dcaa89-3370-40bc-b4a0-10f14485bf0b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fa469c0>]}
[0m12:27:28.866228 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:27:28.866929 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:27:28.867553 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:27:28.868162 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:27:28.868768 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:27:28.869377 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:27:28.869990 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:27:28.872876 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.8344965, "process_in_blocks": "0", "process_kernel_time": 0.561253, "process_mem_max_rss": "124833792", "process_out_blocks": "0", "process_user_time": 3.225248}
[0m12:27:28.873570 [debug] [MainThread]: Command `dbt ls` succeeded at 12:27:28.873418 after 1.84 seconds
[0m12:27:28.874108 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10edd2180>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f7d0590>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f3874a0>]}
[0m12:27:28.874568 [debug] [MainThread]: Flushing usage events
[0m12:27:29.342392 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:27:31.693130 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110d44e00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1113bf260>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1113becc0>]}


============================== 12:27:31.698909 | 2c16b08f-b16e-4a29-b537-7f37dbd9a1aa ==============================
[0m12:27:31.698909 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:27:31.699638 [debug] [MainThread]: running dbt with arguments {'debug': 'False', 'quiet': 'False', 'target_path': 'None', 'empty': 'False', 'log_format': 'default', 'indirect_selection': 'eager', 'warn_error': 'None', 'no_print': 'None', 'use_experimental_parser': 'False', 'introspect': 'True', 'invocation_command': 'dbt run', 'version_check': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'fail_fast': 'False', 'partial_parse': 'True', 'send_anonymous_usage_stats': 'True', 'printer_width': '80', 'static_parser': 'True', 'log_cache_events': 'False', 'use_colors': 'True', 'write_json': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl'}
[0m12:27:32.000467 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '2c16b08f-b16e-4a29-b537-7f37dbd9a1aa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1111eacc0>]}
[0m12:27:32.079899 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '2c16b08f-b16e-4a29-b537-7f37dbd9a1aa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111492e10>]}
[0m12:27:32.082002 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:27:32.231925 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:27:32.354314 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:27:32.354827 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:27:32.398157 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '2c16b08f-b16e-4a29-b537-7f37dbd9a1aa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111459670>]}
[0m12:27:32.480613 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:27:32.483179 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:27:32.503880 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '2c16b08f-b16e-4a29-b537-7f37dbd9a1aa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1118433b0>]}
[0m12:27:32.504540 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:27:32.505117 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '2c16b08f-b16e-4a29-b537-7f37dbd9a1aa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111963230>]}
[0m12:27:32.507629 [info ] [MainThread]: 
[0m12:27:32.508128 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m12:27:32.508537 [info ] [MainThread]: 
[0m12:27:32.509202 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m12:27:32.515281 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m12:27:32.638970 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m12:27:32.639849 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m12:27:32.640415 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m12:27:32.738774 [debug] [ThreadPool]: SQL status: OK in 0.098 seconds
[0m12:27:32.741155 [debug] [ThreadPool]: On list_memory: Close
[0m12:27:32.744652 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m12:27:32.745325 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m12:27:32.745906 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:27:32.748584 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m12:27:32.750445 [debug] [ThreadPool]: On list_memory: Close
[0m12:27:32.751377 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_references)
[0m12:27:32.752754 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_references"
"
[0m12:27:32.763131 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m12:27:32.763673 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m12:27:32.764079 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:27:32.767676 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m12:27:32.769682 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m12:27:32.770148 [debug] [ThreadPool]: On create_memory_fct_references: BEGIN
[0m12:27:32.770853 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:27:32.771265 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m12:27:32.771661 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_references"} */

    
    
        create schema if not exists memory."fct_references"
    
[0m12:27:32.772406 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:27:32.773458 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m12:27:32.773891 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m12:27:32.774289 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m12:27:32.774951 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:27:32.775374 [debug] [ThreadPool]: On create_memory_fct_references: Close
[0m12:27:32.776070 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_references, now create_memory_fct_salesforce)
[0m12:27:32.776614 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m12:27:32.778849 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:27:32.779279 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m12:27:32.779678 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:27:32.781842 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:27:32.783367 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:27:32.783768 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m12:27:32.784405 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:27:32.784797 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:27:32.785181 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m12:27:32.785817 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:27:32.786901 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m12:27:32.787309 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m12:27:32.787680 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m12:27:32.788297 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m12:27:32.788699 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m12:27:32.790403 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_fct_references)
[0m12:27:32.796448 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m12:27:32.796905 [debug] [ThreadPool]: On list_memory_fct_references: BEGIN
[0m12:27:32.797281 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:27:32.799058 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:27:32.799498 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m12:27:32.799898 [debug] [ThreadPool]: On list_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_references'
    and lower(table_catalog) = 'memory'
  
[0m12:27:32.824690 [debug] [ThreadPool]: SQL status: OK in 0.024 seconds
[0m12:27:32.826351 [debug] [ThreadPool]: On list_memory_fct_references: ROLLBACK
[0m12:27:32.829383 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_references'
[0m12:27:32.829936 [debug] [ThreadPool]: On list_memory_fct_references: Close
[0m12:27:32.830863 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_references, now list_memory_fct_salesforce)
[0m12:27:32.833115 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m12:27:32.833541 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m12:27:32.833923 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m12:27:32.835613 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m12:27:32.836036 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m12:27:32.836452 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m12:27:32.840448 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m12:27:32.842014 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m12:27:32.843359 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m12:27:32.843879 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m12:27:32.844651 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '2c16b08f-b16e-4a29-b537-7f37dbd9a1aa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11198ec00>]}
[0m12:27:32.845263 [debug] [MainThread]: Using duckdb connection "master"
[0m12:27:32.845657 [debug] [MainThread]: On master: BEGIN
[0m12:27:32.846031 [debug] [MainThread]: Opening a new connection, currently in state init
[0m12:27:32.847833 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m12:27:32.848293 [debug] [MainThread]: On master: COMMIT
[0m12:27:32.848698 [debug] [MainThread]: Using duckdb connection "master"
[0m12:27:32.849078 [debug] [MainThread]: On master: COMMIT
[0m12:27:32.849698 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m12:27:32.850100 [debug] [MainThread]: On master: Close
[0m12:27:32.856037 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m12:27:32.856760 [info ] [Thread-1 (]: 1 of 7 START sql table model fct_references.states ............................. [RUN]
[0m12:27:32.857358 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m12:27:32.857840 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m12:27:32.865911 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m12:27:32.866832 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m12:27:32.906209 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m12:27:32.907127 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:27:32.907577 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m12:27:32.907999 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:27:32.909613 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:27:32.910060 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:27:32.910676 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."fct_references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m12:27:32.959314 [debug] [Thread-1 (]: SQL status: OK in 0.048 seconds
[0m12:27:32.966208 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:27:32.966739 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."fct_references"."states__dbt_tmp" rename to "states"
[0m12:27:32.968247 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:27:32.976620 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:27:32.977339 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."fct_references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:27:32.991406 [debug] [Thread-1 (]: SQL status: OK in 0.013 seconds
[0m12:27:33.004530 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m12:27:33.005086 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:27:33.005520 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m12:27:33.007347 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:27:33.013616 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m12:27:33.014131 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop table if exists memory."fct_references"."states__dbt_backup" cascade
    
[0m12:27:33.014970 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:27:33.017627 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m12:27:33.020377 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2c16b08f-b16e-4a29-b537-7f37dbd9a1aa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d0f020>]}
[0m12:27:33.021412 [info ] [Thread-1 (]: 1 of 7 OK created sql table model fct_references.states ........................ [[32mOK[0m in 0.16s]
[0m12:27:33.022199 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m12:27:33.022711 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m12:27:33.023268 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m12:27:33.023945 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m12:27:33.024404 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m12:27:33.029504 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m12:27:33.030496 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m12:27:33.035391 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m12:27:33.036405 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:27:33.036883 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m12:27:33.037314 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:27:33.039013 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:27:33.039461 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:27:33.040026 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as timestamp) as created,
        cast(_dlt_processed_utc as timestamp) as processed,
        cast(system_modstamp as timestamp) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m12:27:33.545849 [debug] [Thread-1 (]: SQL status: OK in 0.505 seconds
[0m12:27:33.550857 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:27:33.551564 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m12:27:33.552729 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:27:33.558686 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:27:33.559301 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:27:33.564309 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m12:27:33.566106 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m12:27:33.566660 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:27:33.567186 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m12:27:33.568467 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:27:33.571397 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m12:27:33.571890 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m12:27:33.572928 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:27:33.574737 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m12:27:33.575484 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2c16b08f-b16e-4a29-b537-7f37dbd9a1aa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111dfb140>]}
[0m12:27:33.576243 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.55s]
[0m12:27:33.576979 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m12:27:33.577510 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m12:27:33.578085 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m12:27:33.578646 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m12:27:33.579119 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m12:27:33.594770 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m12:27:33.596706 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m12:27:33.600617 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m12:27:33.601704 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:27:33.602181 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m12:27:33.602637 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:27:33.604399 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:27:33.604958 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:27:33.605761 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as timestamp) as created,
        cast(c._dlt_processed_utc as timestamp) as processed,
        cast(c.system_modstamp as timestamp) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."fct_references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."fct_references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m12:27:39.835533 [debug] [Thread-1 (]: SQL status: OK in 6.229 seconds
[0m12:27:39.838953 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:27:39.839536 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m12:27:39.840388 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:27:39.845502 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:27:39.846053 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:27:40.024722 [debug] [Thread-1 (]: SQL status: OK in 0.178 seconds
[0m12:27:40.027416 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m12:27:40.028276 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:27:40.029015 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m12:27:40.037049 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m12:27:40.040419 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m12:27:40.040981 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m12:27:40.041908 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:27:40.043710 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m12:27:40.044512 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2c16b08f-b16e-4a29-b537-7f37dbd9a1aa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d1c380>]}
[0m12:27:40.045436 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.47s]
[0m12:27:40.046395 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m12:27:40.047306 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m12:27:40.047894 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m12:27:40.048463 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m12:27:40.048940 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m12:27:40.053411 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m12:27:40.054376 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m12:27:40.057860 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m12:27:40.058679 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:27:40.059163 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m12:27:40.059611 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:27:40.061483 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:27:40.062057 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:27:40.062739 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        cast(ol.is_deleted as boolean) as is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        cast(o.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as timestamp) as created,
        cast(o._dlt_processed_utc as timestamp) as processed,
        cast(o.system_modstamp as timestamp) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m12:27:41.003164 [debug] [Thread-1 (]: SQL status: OK in 0.940 seconds
[0m12:27:41.006434 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:27:41.006948 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m12:27:41.007871 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:27:41.012677 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:27:41.013172 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:27:41.018250 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m12:27:41.021911 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m12:27:41.022429 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:27:41.023012 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m12:27:41.027561 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m12:27:41.030924 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m12:27:41.031890 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m12:27:41.033438 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:27:41.036117 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m12:27:41.037399 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2c16b08f-b16e-4a29-b537-7f37dbd9a1aa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111e41490>]}
[0m12:27:41.038743 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 0.99s]
[0m12:27:41.040109 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m12:27:41.041086 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m12:27:41.042058 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m12:27:41.043074 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m12:27:41.043957 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m12:27:41.049237 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m12:27:41.050527 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m12:27:41.056569 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m12:27:41.058184 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:27:41.059090 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m12:27:41.059965 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:27:41.063087 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:27:41.063942 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:27:41.064921 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        cast(t.is_deleted as boolean) as is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as timestamp) as created,
        cast(t._dlt_processed_utc as timestamp) as processed,
        cast(t.system_modstamp as timestamp) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m12:27:41.525154 [debug] [Thread-1 (]: SQL status: OK in 0.459 seconds
[0m12:27:41.528936 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:27:41.529587 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m12:27:41.530641 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:27:41.536087 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:27:41.536682 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:27:41.539794 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:27:41.541650 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m12:27:41.542301 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:27:41.543105 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m12:27:41.545144 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m12:27:41.549018 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m12:27:41.549597 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m12:27:41.550697 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:27:41.552890 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m12:27:41.553699 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2c16b08f-b16e-4a29-b537-7f37dbd9a1aa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111e4e3f0>]}
[0m12:27:41.554545 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.51s]
[0m12:27:41.555251 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m12:27:41.556095 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m12:27:41.556727 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m12:27:41.557351 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m12:27:41.557842 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m12:27:41.561919 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m12:27:41.563326 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m12:27:41.566643 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m12:27:41.567507 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:27:41.567966 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m12:27:41.568399 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:27:41.570404 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:27:41.571082 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:27:41.571673 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        cast(m.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as timestamp) as created,
        cast(m._dlt_processed_utc as timestamp) as processed,
        cast(m.system_modstamp as timestamp) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m12:27:43.321091 [debug] [Thread-1 (]: SQL status: OK in 1.749 seconds
[0m12:27:43.324275 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:27:43.324747 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m12:27:43.325591 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:27:43.330576 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:27:43.331179 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:27:43.337119 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m12:27:43.338917 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m12:27:43.339481 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:27:43.340001 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m12:27:43.342646 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:27:43.346247 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m12:27:43.346783 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m12:27:43.347845 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:27:43.349451 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m12:27:43.350129 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2c16b08f-b16e-4a29-b537-7f37dbd9a1aa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111dc1dc0>]}
[0m12:27:43.350851 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.79s]
[0m12:27:43.351570 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m12:27:43.352074 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m12:27:43.352702 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m12:27:43.353268 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m12:27:43.353742 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m12:27:43.358831 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m12:27:43.360218 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m12:27:43.365373 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m12:27:43.367351 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:27:43.367978 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m12:27:43.368434 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m12:27:43.370302 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m12:27:43.370822 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:27:43.371785 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m12:27:45.164402 [debug] [Thread-1 (]: SQL status: OK in 1.792 seconds
[0m12:27:45.234869 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:27:45.235574 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m12:27:45.236596 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:27:45.242836 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:27:45.243562 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m12:27:45.247047 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m12:27:45.248807 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m12:27:45.249468 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:27:45.250001 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m12:27:45.250937 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:27:45.253728 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m12:27:45.254261 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m12:27:45.255101 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m12:27:45.256693 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m12:27:45.257383 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2c16b08f-b16e-4a29-b537-7f37dbd9a1aa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111e63260>]}
[0m12:27:45.258258 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.90s]
[0m12:27:45.259135 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m12:27:45.260695 [debug] [MainThread]: Using duckdb connection "master"
[0m12:27:45.261268 [debug] [MainThread]: On master: BEGIN
[0m12:27:45.261742 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m12:27:45.263714 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m12:27:45.264263 [debug] [MainThread]: On master: COMMIT
[0m12:27:45.264769 [debug] [MainThread]: Using duckdb connection "master"
[0m12:27:45.265379 [debug] [MainThread]: On master: COMMIT
[0m12:27:45.266333 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m12:27:45.267040 [debug] [MainThread]: On master: Close
[0m12:27:45.267801 [debug] [MainThread]: Connection 'master' was properly closed.
[0m12:27:45.268366 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m12:27:45.269065 [info ] [MainThread]: 
[0m12:27:45.269615 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.76 seconds (12.76s).
[0m12:27:45.271608 [debug] [MainThread]: Command end result
[0m12:27:45.294424 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:27:45.296946 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:27:45.303960 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m12:27:45.304390 [info ] [MainThread]: 
[0m12:27:45.304910 [info ] [MainThread]: [32mCompleted successfully[0m
[0m12:27:45.305336 [info ] [MainThread]: 
[0m12:27:45.305775 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m12:27:45.308726 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 13.703879, "process_in_blocks": "0", "process_kernel_time": 0.95014, "process_mem_max_rss": "369512448", "process_out_blocks": "0", "process_user_time": 7.70021}
[0m12:27:45.309366 [debug] [MainThread]: Command `dbt run` succeeded at 12:27:45.309240 after 13.70 seconds
[0m12:27:45.309863 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1113becc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1113bf260>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11069a210>]}
[0m12:27:45.310327 [debug] [MainThread]: Flushing usage events
[0m12:27:45.792747 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m12:27:49.445041 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1127671a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113033830>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113033260>]}


============================== 12:27:49.452617 | a45d80b6-d96a-42c9-976c-5748d1e19dff ==============================
[0m12:27:49.452617 [info ] [MainThread]: Running with dbt=1.10.9
[0m12:27:49.453468 [debug] [MainThread]: running dbt with arguments {'fail_fast': 'False', 'partial_parse': 'True', 'quiet': 'False', 'use_experimental_parser': 'False', 'indirect_selection': 'eager', 'version_check': 'True', 'write_json': 'True', 'printer_width': '80', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_format': 'default', 'introspect': 'True', 'warn_error': 'None', 'log_cache_events': 'False', 'debug': 'False', 'send_anonymous_usage_stats': 'True', 'static_parser': 'True', 'cache_selected_only': 'False', 'use_colors': 'True', 'no_print': 'None', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'target_path': 'None', 'empty': 'None', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'invocation_command': 'dbt ls --resource-type model --output json'}
[0m12:27:49.787425 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'a45d80b6-d96a-42c9-976c-5748d1e19dff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110929520>]}
[0m12:27:49.878356 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'a45d80b6-d96a-42c9-976c-5748d1e19dff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1130e39e0>]}
[0m12:27:49.882084 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m12:27:50.059643 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m12:27:50.212384 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:27:50.212921 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:27:50.256819 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'a45d80b6-d96a-42c9-976c-5748d1e19dff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1134155b0>]}
[0m12:27:50.341129 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m12:27:50.343995 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m12:27:50.378686 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'a45d80b6-d96a-42c9-976c-5748d1e19dff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113543290>]}
[0m12:27:50.379339 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m12:27:50.379807 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a45d80b6-d96a-42c9-976c-5748d1e19dff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113501c10>]}
[0m12:27:50.381134 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m12:27:50.381806 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m12:27:50.382509 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m12:27:50.383140 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m12:27:50.383763 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m12:27:50.384375 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m12:27:50.385008 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m12:27:50.387914 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0392997, "process_in_blocks": "0", "process_kernel_time": 0.480228, "process_mem_max_rss": "120709120", "process_out_blocks": "0", "process_user_time": 2.885823}
[0m12:27:50.388616 [debug] [MainThread]: Command `dbt ls` succeeded at 12:27:50.388481 after 1.04 seconds
[0m12:27:50.389152 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1130334d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1127671a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1129b95e0>]}
[0m12:27:50.389625 [debug] [MainThread]: Flushing usage events
[0m12:27:50.800344 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:09:46.243146 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10315e6f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104d6f680>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104d6f0e0>]}


============================== 13:09:46.250288 | ed098ad1-ef16-46f2-87fc-cb7b4bd04577 ==============================
[0m13:09:46.250288 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:09:46.251282 [debug] [MainThread]: running dbt with arguments {'send_anonymous_usage_stats': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'empty': 'None', 'static_parser': 'True', 'warn_error': 'None', 'quiet': 'False', 'version_check': 'True', 'use_colors': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'partial_parse': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'printer_width': '80', 'introspect': 'True', 'log_cache_events': 'False', 'log_format': 'default', 'debug': 'False', 'write_json': 'True', 'target_path': 'None', 'fail_fast': 'False', 'no_print': 'None', 'indirect_selection': 'eager', 'use_experimental_parser': 'False', 'cache_selected_only': 'False'}
[0m13:09:46.808222 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'ed098ad1-ef16-46f2-87fc-cb7b4bd04577', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f19520>]}
[0m13:09:46.888827 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'ed098ad1-ef16-46f2-87fc-cb7b4bd04577', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104315d30>]}
[0m13:09:46.892891 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:09:47.057050 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:09:47.284142 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:09:47.284642 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:09:47.336884 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'ed098ad1-ef16-46f2-87fc-cb7b4bd04577', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f68aa0>]}
[0m13:09:47.434383 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:09:47.438016 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:09:47.468815 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'ed098ad1-ef16-46f2-87fc-cb7b4bd04577', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1051f6e40>]}
[0m13:09:47.469440 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:09:47.470155 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'ed098ad1-ef16-46f2-87fc-cb7b4bd04577', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104e1d0d0>]}
[0m13:09:47.472531 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:09:47.473291 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:09:47.473922 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:09:47.474549 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:09:47.475404 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:09:47.476087 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:09:47.476714 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:09:47.479863 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.3401364, "process_in_blocks": "0", "process_kernel_time": 0.525767, "process_mem_max_rss": "121520128", "process_out_blocks": "0", "process_user_time": 2.806158}
[0m13:09:47.480634 [debug] [MainThread]: Command `dbt ls` succeeded at 13:09:47.480480 after 1.34 seconds
[0m13:09:47.481164 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104bdcaa0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104d6f5c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10315e6f0>]}
[0m13:09:47.481650 [debug] [MainThread]: Flushing usage events
[0m13:09:47.944454 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:09:50.462022 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c1b4560>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c7f7380>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c7f6db0>]}


============================== 13:09:50.467091 | 6d5dc0ae-4f33-437e-98d7-bf3701dc5823 ==============================
[0m13:09:50.467091 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:09:50.467881 [debug] [MainThread]: running dbt with arguments {'empty': 'False', 'no_print': 'None', 'printer_width': '80', 'fail_fast': 'False', 'quiet': 'False', 'indirect_selection': 'eager', 'target_path': 'None', 'partial_parse': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'write_json': 'True', 'warn_error': 'None', 'cache_selected_only': 'False', 'log_cache_events': 'False', 'debug': 'False', 'send_anonymous_usage_stats': 'True', 'introspect': 'True', 'invocation_command': 'dbt run', 'static_parser': 'True', 'log_format': 'default', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'version_check': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])'}
[0m13:09:50.778479 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '6d5dc0ae-4f33-437e-98d7-bf3701dc5823', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c8748c0>]}
[0m13:09:50.883687 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '6d5dc0ae-4f33-437e-98d7-bf3701dc5823', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c829550>]}
[0m13:09:50.886870 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:09:51.077059 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:09:51.210578 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:09:51.211116 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:09:51.254939 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '6d5dc0ae-4f33-437e-98d7-bf3701dc5823', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c9a1dc0>]}
[0m13:09:51.340190 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:09:51.342562 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:09:51.360961 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '6d5dc0ae-4f33-437e-98d7-bf3701dc5823', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cc79dc0>]}
[0m13:09:51.361696 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:09:51.362164 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '6d5dc0ae-4f33-437e-98d7-bf3701dc5823', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c9c3170>]}
[0m13:09:51.364657 [info ] [MainThread]: 
[0m13:09:51.365152 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m13:09:51.365548 [info ] [MainThread]: 
[0m13:09:51.366172 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m13:09:51.372337 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m13:09:51.447779 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m13:09:51.448311 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m13:09:51.448744 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m13:09:51.537445 [debug] [ThreadPool]: SQL status: OK in 0.089 seconds
[0m13:09:51.539483 [debug] [ThreadPool]: On list_memory: Close
[0m13:09:51.541956 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m13:09:51.542453 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m13:09:51.542941 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:09:51.545469 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:09:51.547008 [debug] [ThreadPool]: On list_memory: Close
[0m13:09:51.547820 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_references)
[0m13:09:51.548818 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_references"
"
[0m13:09:51.558140 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:09:51.558797 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m13:09:51.559267 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:09:51.562692 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m13:09:51.564551 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:09:51.565021 [debug] [ThreadPool]: On create_memory_fct_references: BEGIN
[0m13:09:51.565702 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:09:51.566115 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:09:51.566568 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_references"} */

    
    
        create schema if not exists memory."fct_references"
    
[0m13:09:51.567897 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m13:09:51.569093 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m13:09:51.569555 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:09:51.569961 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m13:09:51.571225 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m13:09:51.571814 [debug] [ThreadPool]: On create_memory_fct_references: Close
[0m13:09:51.572615 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_references, now create_memory_fct_salesforce)
[0m13:09:51.573195 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m13:09:51.575498 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:09:51.576043 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m13:09:51.576459 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:09:51.578988 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:09:51.580646 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:09:51.581079 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m13:09:51.581701 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:09:51.582110 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:09:51.582585 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m13:09:51.583226 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:09:51.584354 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m13:09:51.584809 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:09:51.585193 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m13:09:51.585931 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:09:51.586354 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m13:09:51.588199 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_fct_references)
[0m13:09:51.595535 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m13:09:51.596024 [debug] [ThreadPool]: On list_memory_fct_references: BEGIN
[0m13:09:51.596397 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:09:51.598049 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:09:51.598464 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m13:09:51.598868 [debug] [ThreadPool]: On list_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_references'
    and lower(table_catalog) = 'memory'
  
[0m13:09:51.624464 [debug] [ThreadPool]: SQL status: OK in 0.025 seconds
[0m13:09:51.626069 [debug] [ThreadPool]: On list_memory_fct_references: ROLLBACK
[0m13:09:51.628717 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_references'
[0m13:09:51.629212 [debug] [ThreadPool]: On list_memory_fct_references: Close
[0m13:09:51.629893 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_references, now list_memory_fct_salesforce)
[0m13:09:51.632070 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m13:09:51.632584 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m13:09:51.632986 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:09:51.634712 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:09:51.635122 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m13:09:51.635538 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m13:09:51.639810 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m13:09:51.641796 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m13:09:51.642955 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m13:09:51.643425 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m13:09:51.644201 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '6d5dc0ae-4f33-437e-98d7-bf3701dc5823', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c6621b0>]}
[0m13:09:51.644916 [debug] [MainThread]: Using duckdb connection "master"
[0m13:09:51.645342 [debug] [MainThread]: On master: BEGIN
[0m13:09:51.645749 [debug] [MainThread]: Opening a new connection, currently in state init
[0m13:09:51.647483 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m13:09:51.647900 [debug] [MainThread]: On master: COMMIT
[0m13:09:51.648290 [debug] [MainThread]: Using duckdb connection "master"
[0m13:09:51.648678 [debug] [MainThread]: On master: COMMIT
[0m13:09:51.649411 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m13:09:51.649847 [debug] [MainThread]: On master: Close
[0m13:09:51.653721 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m13:09:51.654483 [info ] [Thread-1 (]: 1 of 7 START sql table model fct_references.states ............................. [RUN]
[0m13:09:51.655157 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m13:09:51.655644 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m13:09:51.664084 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m13:09:51.665354 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m13:09:51.710599 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m13:09:51.712012 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:09:51.712707 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m13:09:51.713215 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:09:51.715109 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:09:51.715671 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:09:51.716303 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."fct_references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m13:09:51.768066 [debug] [Thread-1 (]: SQL status: OK in 0.051 seconds
[0m13:09:51.801608 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:09:51.802263 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."fct_references"."states__dbt_tmp" rename to "states"
[0m13:09:51.808555 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m13:09:51.818113 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:09:51.818766 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."fct_references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:09:51.831169 [debug] [Thread-1 (]: SQL status: OK in 0.012 seconds
[0m13:09:51.843718 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m13:09:51.844359 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:09:51.844834 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m13:09:51.845990 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:09:51.852103 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:09:51.852690 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop table if exists memory."fct_references"."states__dbt_backup" cascade
    
[0m13:09:51.854106 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:09:51.856847 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m13:09:51.859403 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6d5dc0ae-4f33-437e-98d7-bf3701dc5823', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a0e86b0>]}
[0m13:09:51.860396 [info ] [Thread-1 (]: 1 of 7 OK created sql table model fct_references.states ........................ [[32mOK[0m in 0.20s]
[0m13:09:51.861231 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m13:09:51.861787 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m13:09:51.862391 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m13:09:51.863002 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m13:09:51.863498 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m13:09:51.868656 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m13:09:51.870286 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m13:09:51.875439 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m13:09:51.876379 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:09:51.877108 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m13:09:51.877607 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:09:51.879462 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:09:51.879943 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:09:51.880519 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as timestamp) as created,
        cast(_dlt_processed_utc as timestamp) as processed,
        cast(system_modstamp as timestamp) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m13:09:52.434019 [debug] [Thread-1 (]: SQL status: OK in 0.553 seconds
[0m13:09:52.439790 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:09:52.440560 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m13:09:52.441776 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:09:52.448617 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:09:52.449256 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:09:52.455064 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m13:09:52.457085 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m13:09:52.457671 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:09:52.458189 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m13:09:52.459906 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:09:52.463314 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:09:52.463997 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m13:09:52.465022 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:09:52.466711 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m13:09:52.467410 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6d5dc0ae-4f33-437e-98d7-bf3701dc5823', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d2539e0>]}
[0m13:09:52.468149 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.60s]
[0m13:09:52.468889 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m13:09:52.469400 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m13:09:52.470050 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m13:09:52.470610 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m13:09:52.471087 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m13:09:52.486839 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m13:09:52.488786 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m13:09:52.492947 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m13:09:52.494829 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:09:52.495524 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m13:09:52.495996 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:09:52.497928 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:09:52.498433 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:09:52.499266 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as timestamp) as created,
        cast(c._dlt_processed_utc as timestamp) as processed,
        cast(c.system_modstamp as timestamp) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."fct_references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."fct_references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m13:09:58.742909 [debug] [Thread-1 (]: SQL status: OK in 6.243 seconds
[0m13:09:58.747359 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:09:58.748227 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m13:09:58.749194 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:09:58.755129 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:09:58.756145 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:09:58.989396 [debug] [Thread-1 (]: SQL status: OK in 0.233 seconds
[0m13:09:58.990983 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m13:09:58.991512 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:09:58.992031 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m13:09:59.002949 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m13:09:59.008257 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:09:59.008807 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m13:09:59.009764 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:09:59.011412 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m13:09:59.012238 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6d5dc0ae-4f33-437e-98d7-bf3701dc5823', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d209040>]}
[0m13:09:59.013084 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.54s]
[0m13:09:59.013837 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m13:09:59.015003 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m13:09:59.015701 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m13:09:59.016465 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m13:09:59.016994 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m13:09:59.023440 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m13:09:59.024834 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m13:09:59.028889 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m13:09:59.030149 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:09:59.031008 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m13:09:59.031950 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:09:59.036087 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m13:09:59.037351 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:09:59.039281 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        cast(ol.is_deleted as boolean) as is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        cast(o.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as timestamp) as created,
        cast(o._dlt_processed_utc as timestamp) as processed,
        cast(o.system_modstamp as timestamp) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m13:09:59.988975 [debug] [Thread-1 (]: SQL status: OK in 0.948 seconds
[0m13:09:59.992483 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:09:59.993014 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m13:09:59.993923 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:09:59.998831 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:09:59.999369 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:10:00.004689 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m13:10:00.008179 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m13:10:00.008715 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:10:00.009161 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m13:10:00.012332 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m13:10:00.015515 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:10:00.016114 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m13:10:00.017063 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:10:00.018722 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m13:10:00.019424 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6d5dc0ae-4f33-437e-98d7-bf3701dc5823', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d279790>]}
[0m13:10:00.020140 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 1.00s]
[0m13:10:00.020826 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m13:10:00.021318 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m13:10:00.021859 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m13:10:00.022392 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m13:10:00.022994 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m13:10:00.026288 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m13:10:00.027054 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m13:10:00.030348 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m13:10:00.031121 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:10:00.031571 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m13:10:00.031998 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:10:00.033696 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:10:00.034166 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:10:00.034703 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        cast(t.is_deleted as boolean) as is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as timestamp) as created,
        cast(t._dlt_processed_utc as timestamp) as processed,
        cast(t.system_modstamp as timestamp) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m13:10:00.507371 [debug] [Thread-1 (]: SQL status: OK in 0.472 seconds
[0m13:10:00.511019 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:10:00.511626 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m13:10:00.512533 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:10:00.517508 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:10:00.518068 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:10:00.521535 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m13:10:00.523272 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m13:10:00.523775 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:10:00.524218 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m13:10:00.525621 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:10:00.528419 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:10:00.528934 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m13:10:00.529961 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:10:00.531652 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m13:10:00.532500 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6d5dc0ae-4f33-437e-98d7-bf3701dc5823', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d1fa690>]}
[0m13:10:00.533599 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.51s]
[0m13:10:00.534418 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m13:10:00.535359 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m13:10:00.536327 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m13:10:00.537118 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m13:10:00.537779 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m13:10:00.542146 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m13:10:00.543082 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m13:10:00.546652 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m13:10:00.547578 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:10:00.548049 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m13:10:00.548476 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:10:00.550397 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:10:00.551375 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:10:00.552047 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        cast(m.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as timestamp) as created,
        cast(m._dlt_processed_utc as timestamp) as processed,
        cast(m.system_modstamp as timestamp) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m13:10:02.383517 [debug] [Thread-1 (]: SQL status: OK in 1.831 seconds
[0m13:10:02.386790 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:10:02.387375 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m13:10:02.388269 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:10:02.393358 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:10:02.393903 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:10:02.398834 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m13:10:02.400289 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m13:10:02.400759 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:10:02.401196 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m13:10:02.403050 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:10:02.405579 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:10:02.406290 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m13:10:02.407407 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:10:02.409318 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m13:10:02.410261 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6d5dc0ae-4f33-437e-98d7-bf3701dc5823', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d255670>]}
[0m13:10:02.411013 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.87s]
[0m13:10:02.411793 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m13:10:02.412287 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m13:10:02.412889 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m13:10:02.413437 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m13:10:02.413891 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m13:10:02.419276 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m13:10:02.421247 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m13:10:02.426772 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m13:10:02.428556 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:10:02.429219 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m13:10:02.429677 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:10:02.431669 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:10:02.432177 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:10:02.433160 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m13:10:04.133571 [debug] [Thread-1 (]: SQL status: OK in 1.699 seconds
[0m13:10:04.199324 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:10:04.200077 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m13:10:04.201241 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:10:04.207942 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:10:04.208571 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:10:04.213246 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m13:10:04.214978 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m13:10:04.215557 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:10:04.216057 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m13:10:04.217072 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:10:04.219930 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:10:04.220606 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m13:10:04.221885 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:10:04.223720 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m13:10:04.224538 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6d5dc0ae-4f33-437e-98d7-bf3701dc5823', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d29a5d0>]}
[0m13:10:04.225340 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.81s]
[0m13:10:04.226100 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m13:10:04.227317 [debug] [MainThread]: Using duckdb connection "master"
[0m13:10:04.227843 [debug] [MainThread]: On master: BEGIN
[0m13:10:04.228483 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m13:10:04.230829 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m13:10:04.231343 [debug] [MainThread]: On master: COMMIT
[0m13:10:04.231835 [debug] [MainThread]: Using duckdb connection "master"
[0m13:10:04.232244 [debug] [MainThread]: On master: COMMIT
[0m13:10:04.232996 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m13:10:04.233452 [debug] [MainThread]: On master: Close
[0m13:10:04.234007 [debug] [MainThread]: Connection 'master' was properly closed.
[0m13:10:04.234413 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m13:10:04.234959 [info ] [MainThread]: 
[0m13:10:04.235410 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.87 seconds (12.87s).
[0m13:10:04.237283 [debug] [MainThread]: Command end result
[0m13:10:04.262833 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:10:04.265184 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:10:04.272851 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m13:10:04.273305 [info ] [MainThread]: 
[0m13:10:04.273849 [info ] [MainThread]: [32mCompleted successfully[0m
[0m13:10:04.274254 [info ] [MainThread]: 
[0m13:10:04.274687 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m13:10:04.277934 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 13.90476, "process_in_blocks": "0", "process_kernel_time": 0.961774, "process_mem_max_rss": "369135616", "process_out_blocks": "0", "process_user_time": 6.537706}
[0m13:10:04.278588 [debug] [MainThread]: Command `dbt run` succeeded at 13:10:04.278463 after 13.91 seconds
[0m13:10:04.279084 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cda16d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c901400>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c7f5c10>]}
[0m13:10:04.279598 [debug] [MainThread]: Flushing usage events
[0m13:10:04.825021 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:10:07.516961 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cbd2480>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f3bf7a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f3bf200>]}


============================== 13:10:07.522976 | aa95b203-849e-4029-b9b5-640d5babde68 ==============================
[0m13:10:07.522976 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:10:07.523790 [debug] [MainThread]: running dbt with arguments {'log_cache_events': 'False', 'write_json': 'True', 'quiet': 'False', 'use_experimental_parser': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'debug': 'False', 'partial_parse': 'True', 'no_print': 'None', 'cache_selected_only': 'False', 'use_colors': 'True', 'indirect_selection': 'eager', 'invocation_command': 'dbt ls --resource-type model --output json', 'static_parser': 'True', 'empty': 'None', 'fail_fast': 'False', 'introspect': 'True', 'send_anonymous_usage_stats': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'log_format': 'default', 'printer_width': '80', 'target_path': 'None', 'version_check': 'True', 'warn_error': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])'}
[0m13:10:07.832100 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'aa95b203-849e-4029-b9b5-640d5babde68', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f082cc0>]}
[0m13:10:07.924938 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'aa95b203-849e-4029-b9b5-640d5babde68', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cddab70>]}
[0m13:10:07.927173 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:10:08.116977 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:10:08.246391 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:10:08.246899 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:10:08.290731 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'aa95b203-849e-4029-b9b5-640d5babde68', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f790c80>]}
[0m13:10:08.377161 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:10:08.379498 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:10:08.396345 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'aa95b203-849e-4029-b9b5-640d5babde68', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f8312b0>]}
[0m13:10:08.397004 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:10:08.397553 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'aa95b203-849e-4029-b9b5-640d5babde68', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e98c8f0>]}
[0m13:10:08.398991 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:10:08.399704 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:10:08.400303 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:10:08.400920 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:10:08.401525 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:10:08.402209 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:10:08.402829 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:10:08.406199 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 0.98687804, "process_in_blocks": "0", "process_kernel_time": 0.355252, "process_mem_max_rss": "121692160", "process_out_blocks": "0", "process_user_time": 2.531673}
[0m13:10:08.407059 [debug] [MainThread]: Command `dbt ls` succeeded at 13:10:08.406784 after 0.99 seconds
[0m13:10:08.407690 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f790cb0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f7917f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f9795b0>]}
[0m13:10:08.408189 [debug] [MainThread]: Flushing usage events
[0m13:10:08.856927 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:13:22.681988 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109216270>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10917e3f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1095071d0>]}


============================== 13:13:22.690074 | fdd76933-b396-453d-888a-a26091a6d9cc ==============================
[0m13:13:22.690074 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:13:22.691182 [debug] [MainThread]: running dbt with arguments {'target_path': 'None', 'write_json': 'True', 'indirect_selection': 'eager', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'printer_width': '80', 'static_parser': 'True', 'fail_fast': 'False', 'use_colors': 'True', 'introspect': 'True', 'no_print': 'None', 'log_cache_events': 'False', 'send_anonymous_usage_stats': 'True', 'cache_selected_only': 'False', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'use_experimental_parser': 'False', 'log_format': 'default', 'quiet': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'warn_error': 'None', 'empty': 'None', 'version_check': 'True', 'invocation_command': 'dbt ls --resource-type model --output json', 'debug': 'False', 'partial_parse': 'True'}
[0m13:13:23.205552 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'fdd76933-b396-453d-888a-a26091a6d9cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1095e2ed0>]}
[0m13:13:23.294750 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'fdd76933-b396-453d-888a-a26091a6d9cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108d9e600>]}
[0m13:13:23.297747 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:13:23.464164 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:13:23.635482 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:13:23.636008 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:13:23.682268 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'fdd76933-b396-453d-888a-a26091a6d9cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109752810>]}
[0m13:13:23.770445 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:13:23.773900 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:13:23.806600 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'fdd76933-b396-453d-888a-a26091a6d9cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1099d0470>]}
[0m13:13:23.807324 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:13:23.807808 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'fdd76933-b396-453d-888a-a26091a6d9cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1095e3170>]}
[0m13:13:23.809224 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:13:23.809916 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:13:23.810575 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:13:23.811187 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:13:23.811796 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:13:23.812404 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:13:23.813016 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:13:23.815793 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.233338, "process_in_blocks": "0", "process_kernel_time": 0.470048, "process_mem_max_rss": "120721408", "process_out_blocks": "0", "process_user_time": 2.758884}
[0m13:13:23.816461 [debug] [MainThread]: Command `dbt ls` succeeded at 13:13:23.816329 after 1.23 seconds
[0m13:13:23.816994 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1095073b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109507470>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109ab7bc0>]}
[0m13:13:23.817463 [debug] [MainThread]: Flushing usage events
[0m13:13:24.237341 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:13:26.647519 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d9321b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d82d4f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10de26d80>]}


============================== 13:13:26.652752 | cf1354e6-dec4-4a13-9840-c5ddea5e91b1 ==============================
[0m13:13:26.652752 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:13:26.653472 [debug] [MainThread]: running dbt with arguments {'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'cache_selected_only': 'False', 'quiet': 'False', 'use_colors': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'True', 'partial_parse': 'True', 'write_json': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'static_parser': 'True', 'debug': 'False', 'log_format': 'default', 'indirect_selection': 'eager', 'warn_error': 'None', 'log_cache_events': 'False', 'introspect': 'True', 'version_check': 'True', 'no_print': 'None', 'fail_fast': 'False', 'invocation_command': 'dbt run', 'printer_width': '80'}
[0m13:13:26.961988 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'cf1354e6-dec4-4a13-9840-c5ddea5e91b1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b7194c0>]}
[0m13:13:27.039946 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'cf1354e6-dec4-4a13-9840-c5ddea5e91b1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d9a9f70>]}
[0m13:13:27.042074 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:13:27.185312 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:13:27.311167 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:13:27.311680 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:13:27.355755 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'cf1354e6-dec4-4a13-9840-c5ddea5e91b1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e20a2a0>]}
[0m13:13:27.442023 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:13:27.444549 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:13:27.464373 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'cf1354e6-dec4-4a13-9840-c5ddea5e91b1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e3c93a0>]}
[0m13:13:27.465036 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:13:27.465510 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'cf1354e6-dec4-4a13-9840-c5ddea5e91b1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dfef7d0>]}
[0m13:13:27.467964 [info ] [MainThread]: 
[0m13:13:27.468444 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m13:13:27.468896 [info ] [MainThread]: 
[0m13:13:27.469621 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m13:13:27.475749 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m13:13:27.552972 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m13:13:27.553540 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m13:13:27.553978 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m13:13:27.632822 [debug] [ThreadPool]: SQL status: OK in 0.079 seconds
[0m13:13:27.634692 [debug] [ThreadPool]: On list_memory: Close
[0m13:13:27.637376 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m13:13:27.637863 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m13:13:27.638278 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:13:27.640470 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:13:27.641930 [debug] [ThreadPool]: On list_memory: Close
[0m13:13:27.642719 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_references)
[0m13:13:27.643290 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_references"
"
[0m13:13:27.651878 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:13:27.652387 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m13:13:27.652772 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:13:27.655926 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m13:13:27.657955 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:13:27.658414 [debug] [ThreadPool]: On create_memory_fct_references: BEGIN
[0m13:13:27.659121 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:13:27.659527 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:13:27.659934 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_references"} */

    
    
        create schema if not exists memory."fct_references"
    
[0m13:13:27.660729 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:13:27.662104 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m13:13:27.662586 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:13:27.663002 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m13:13:27.663704 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:13:27.664110 [debug] [ThreadPool]: On create_memory_fct_references: Close
[0m13:13:27.664920 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_references, now create_memory_fct_salesforce)
[0m13:13:27.665455 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m13:13:27.667629 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:13:27.668059 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m13:13:27.668439 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:13:27.670441 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:13:27.672145 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:13:27.672612 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m13:13:27.673295 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:13:27.673697 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:13:27.674141 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m13:13:27.674837 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:13:27.675996 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m13:13:27.676426 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:13:27.676806 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m13:13:27.677428 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:13:27.677825 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m13:13:27.679437 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_fct_references)
[0m13:13:27.685372 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m13:13:27.685836 [debug] [ThreadPool]: On list_memory_fct_references: BEGIN
[0m13:13:27.686206 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:13:27.688035 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:13:27.688444 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m13:13:27.688844 [debug] [ThreadPool]: On list_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_references'
    and lower(table_catalog) = 'memory'
  
[0m13:13:27.711060 [debug] [ThreadPool]: SQL status: OK in 0.022 seconds
[0m13:13:27.712746 [debug] [ThreadPool]: On list_memory_fct_references: ROLLBACK
[0m13:13:27.715567 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_references'
[0m13:13:27.716135 [debug] [ThreadPool]: On list_memory_fct_references: Close
[0m13:13:27.716860 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_references, now list_memory_fct_salesforce)
[0m13:13:27.719118 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m13:13:27.719544 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m13:13:27.719934 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:13:27.721614 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:13:27.722028 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m13:13:27.722440 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m13:13:27.726467 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m13:13:27.728100 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m13:13:27.729178 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m13:13:27.729589 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m13:13:27.730399 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'cf1354e6-dec4-4a13-9840-c5ddea5e91b1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e3c7800>]}
[0m13:13:27.731060 [debug] [MainThread]: Using duckdb connection "master"
[0m13:13:27.731473 [debug] [MainThread]: On master: BEGIN
[0m13:13:27.731844 [debug] [MainThread]: Opening a new connection, currently in state init
[0m13:13:27.733726 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m13:13:27.734161 [debug] [MainThread]: On master: COMMIT
[0m13:13:27.734560 [debug] [MainThread]: Using duckdb connection "master"
[0m13:13:27.735005 [debug] [MainThread]: On master: COMMIT
[0m13:13:27.735581 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m13:13:27.735989 [debug] [MainThread]: On master: Close
[0m13:13:27.739839 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m13:13:27.740613 [info ] [Thread-1 (]: 1 of 7 START sql table model fct_references.states ............................. [RUN]
[0m13:13:27.741233 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m13:13:27.741721 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m13:13:27.749372 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m13:13:27.750253 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m13:13:27.785806 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m13:13:27.786851 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:13:27.787319 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m13:13:27.787743 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:13:27.789519 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:13:27.789990 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:13:27.790719 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."fct_references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m13:13:27.840726 [debug] [Thread-1 (]: SQL status: OK in 0.049 seconds
[0m13:13:27.847385 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:13:27.847917 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."fct_references"."states__dbt_tmp" rename to "states"
[0m13:13:27.849675 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:13:27.858306 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:13:27.858900 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."fct_references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:13:27.872054 [debug] [Thread-1 (]: SQL status: OK in 0.012 seconds
[0m13:13:27.884187 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m13:13:27.884798 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:13:27.885263 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m13:13:27.886500 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:13:27.892497 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:13:27.893026 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop table if exists memory."fct_references"."states__dbt_backup" cascade
    
[0m13:13:27.893925 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:13:27.896689 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m13:13:27.899074 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cf1354e6-dec4-4a13-9840-c5ddea5e91b1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e46af90>]}
[0m13:13:27.899860 [info ] [Thread-1 (]: 1 of 7 OK created sql table model fct_references.states ........................ [[32mOK[0m in 0.16s]
[0m13:13:27.900588 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m13:13:27.901092 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m13:13:27.901654 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m13:13:27.902318 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m13:13:27.902790 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m13:13:27.907773 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m13:13:27.908787 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m13:13:27.913638 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m13:13:27.914529 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:13:27.914986 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m13:13:27.915420 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:13:27.917120 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:13:27.917575 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:13:27.918142 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as timestamp) as created,
        cast(_dlt_processed_utc as timestamp) as processed,
        cast(system_modstamp as timestamp) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m13:13:28.391980 [debug] [Thread-1 (]: SQL status: OK in 0.473 seconds
[0m13:13:28.396653 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:13:28.397332 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m13:13:28.398573 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:13:28.404538 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:13:28.405130 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:13:28.409040 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m13:13:28.410835 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m13:13:28.411402 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:13:28.411919 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m13:13:28.413075 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:13:28.415919 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:13:28.416410 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m13:13:28.417374 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:13:28.419649 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m13:13:28.420486 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cf1354e6-dec4-4a13-9840-c5ddea5e91b1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e862900>]}
[0m13:13:28.421254 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.52s]
[0m13:13:28.421998 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m13:13:28.422518 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m13:13:28.423098 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m13:13:28.423783 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m13:13:28.424294 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m13:13:28.439377 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m13:13:28.440482 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m13:13:28.443981 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m13:13:28.444944 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:13:28.445402 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m13:13:28.445831 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:13:28.447626 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:13:28.448144 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:13:28.448885 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as timestamp) as created,
        cast(c._dlt_processed_utc as timestamp) as processed,
        cast(c.system_modstamp as timestamp) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."fct_references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."fct_references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m13:13:34.784385 [debug] [Thread-1 (]: SQL status: OK in 6.335 seconds
[0m13:13:34.787720 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:13:34.788296 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m13:13:34.789412 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:13:34.794644 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:13:34.795150 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:13:34.970865 [debug] [Thread-1 (]: SQL status: OK in 0.175 seconds
[0m13:13:34.972451 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m13:13:34.972908 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:13:34.973328 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m13:13:34.979900 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m13:13:34.982896 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:13:34.983436 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m13:13:34.984296 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:13:34.985880 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m13:13:34.986551 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cf1354e6-dec4-4a13-9840-c5ddea5e91b1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0db440>]}
[0m13:13:34.987294 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.56s]
[0m13:13:34.988024 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m13:13:34.988889 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m13:13:34.989469 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m13:13:34.990029 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m13:13:34.990554 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m13:13:34.994795 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m13:13:34.995674 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m13:13:34.998949 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m13:13:34.999875 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:13:35.000369 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m13:13:35.000798 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:13:35.002512 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:13:35.002975 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:13:35.003597 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        cast(ol.is_deleted as boolean) as is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        cast(o.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as timestamp) as created,
        cast(o._dlt_processed_utc as timestamp) as processed,
        cast(o.system_modstamp as timestamp) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m13:13:35.957667 [debug] [Thread-1 (]: SQL status: OK in 0.953 seconds
[0m13:13:35.961058 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:13:35.961552 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m13:13:35.962443 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:13:35.967375 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:13:35.967899 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:13:35.972510 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m13:13:35.976125 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m13:13:35.976697 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:13:35.977156 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m13:13:35.978916 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:13:35.981775 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:13:35.982347 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m13:13:35.983253 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:13:35.985099 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m13:13:35.985908 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cf1354e6-dec4-4a13-9840-c5ddea5e91b1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e8a5700>]}
[0m13:13:35.986966 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 1.00s]
[0m13:13:35.988198 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m13:13:35.988981 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m13:13:35.989703 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m13:13:35.990427 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m13:13:35.991302 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m13:13:35.995457 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m13:13:35.996660 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m13:13:36.000361 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m13:13:36.001254 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:13:36.001731 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m13:13:36.002180 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:13:36.003831 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:13:36.004538 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:13:36.005181 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        cast(t.is_deleted as boolean) as is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as timestamp) as created,
        cast(t._dlt_processed_utc as timestamp) as processed,
        cast(t.system_modstamp as timestamp) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m13:13:36.471774 [debug] [Thread-1 (]: SQL status: OK in 0.466 seconds
[0m13:13:36.475154 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:13:36.475626 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m13:13:36.476450 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:13:36.481152 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:13:36.481639 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:13:36.484608 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:13:36.486080 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m13:13:36.486559 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:13:36.486995 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m13:13:36.488204 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:13:36.491028 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:13:36.491488 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m13:13:36.492327 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:13:36.494134 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m13:13:36.495264 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cf1354e6-dec4-4a13-9840-c5ddea5e91b1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e4013d0>]}
[0m13:13:36.496149 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.50s]
[0m13:13:36.497028 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m13:13:36.498038 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m13:13:36.498775 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m13:13:36.499411 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m13:13:36.499896 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m13:13:36.504092 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m13:13:36.505034 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m13:13:36.508526 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m13:13:36.509469 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:13:36.509984 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m13:13:36.510438 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:13:36.512141 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:13:36.512653 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:13:36.513397 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        cast(m.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as timestamp) as created,
        cast(m._dlt_processed_utc as timestamp) as processed,
        cast(m.system_modstamp as timestamp) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m13:13:38.264516 [debug] [Thread-1 (]: SQL status: OK in 1.750 seconds
[0m13:13:38.267752 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:13:38.268240 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m13:13:38.269108 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:13:38.274417 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:13:38.274969 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:13:38.279808 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m13:13:38.281287 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m13:13:38.281769 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:13:38.282210 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m13:13:38.284407 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:13:38.287303 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:13:38.287833 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m13:13:38.288695 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:13:38.290312 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m13:13:38.291146 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cf1354e6-dec4-4a13-9840-c5ddea5e91b1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e8299d0>]}
[0m13:13:38.291951 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.79s]
[0m13:13:38.292784 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m13:13:38.293390 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m13:13:38.293983 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m13:13:38.294563 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m13:13:38.295132 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m13:13:38.301011 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m13:13:38.302382 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m13:13:38.307594 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m13:13:38.308705 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:13:38.309211 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m13:13:38.309644 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:13:38.311498 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:13:38.312001 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:13:38.312954 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m13:13:40.085228 [debug] [Thread-1 (]: SQL status: OK in 1.771 seconds
[0m13:13:40.163964 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:13:40.164734 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m13:13:40.165833 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:13:40.172069 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:13:40.172679 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:13:40.176803 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m13:13:40.178708 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m13:13:40.179258 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:13:40.179731 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m13:13:40.180638 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:13:40.183672 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:13:40.184221 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m13:13:40.185266 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:13:40.187546 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m13:13:40.188341 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cf1354e6-dec4-4a13-9840-c5ddea5e91b1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e8a3650>]}
[0m13:13:40.189137 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.89s]
[0m13:13:40.189875 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m13:13:40.191296 [debug] [MainThread]: Using duckdb connection "master"
[0m13:13:40.191740 [debug] [MainThread]: On master: BEGIN
[0m13:13:40.192131 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m13:13:40.195086 [debug] [MainThread]: SQL status: OK in 0.003 seconds
[0m13:13:40.195731 [debug] [MainThread]: On master: COMMIT
[0m13:13:40.196195 [debug] [MainThread]: Using duckdb connection "master"
[0m13:13:40.196605 [debug] [MainThread]: On master: COMMIT
[0m13:13:40.197293 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m13:13:40.197699 [debug] [MainThread]: On master: Close
[0m13:13:40.198204 [debug] [MainThread]: Connection 'master' was properly closed.
[0m13:13:40.198565 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m13:13:40.199022 [info ] [MainThread]: 
[0m13:13:40.199447 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.73 seconds (12.73s).
[0m13:13:40.201232 [debug] [MainThread]: Command end result
[0m13:13:40.227908 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:13:40.230237 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:13:40.239413 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m13:13:40.239995 [info ] [MainThread]: 
[0m13:13:40.240534 [info ] [MainThread]: [32mCompleted successfully[0m
[0m13:13:40.241159 [info ] [MainThread]: 
[0m13:13:40.241700 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m13:13:40.245786 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 13.689006, "process_in_blocks": "0", "process_kernel_time": 0.902882, "process_mem_max_rss": "369496064", "process_out_blocks": "0", "process_user_time": 7.513021}
[0m13:13:40.246465 [debug] [MainThread]: Command `dbt run` succeeded at 13:13:40.246340 after 13.69 seconds
[0m13:13:40.246979 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10de26d80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc30ce0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dec0110>]}
[0m13:13:40.247514 [debug] [MainThread]: Flushing usage events
[0m13:13:40.737549 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:13:44.110610 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ba53e00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10babf860>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10babf2f0>]}


============================== 13:13:44.117798 | df698245-bf32-4e7f-90ac-f1f3b9ab718d ==============================
[0m13:13:44.117798 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:13:44.118584 [debug] [MainThread]: running dbt with arguments {'log_format': 'default', 'log_cache_events': 'False', 'no_print': 'None', 'indirect_selection': 'eager', 'static_parser': 'True', 'quiet': 'False', 'empty': 'None', 'printer_width': '80', 'use_experimental_parser': 'False', 'introspect': 'True', 'partial_parse': 'True', 'target_path': 'None', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'debug': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'write_json': 'True', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'warn_error': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'use_colors': 'True', 'version_check': 'True', 'fail_fast': 'False', 'send_anonymous_usage_stats': 'True', 'cache_selected_only': 'False'}
[0m13:13:44.463166 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'df698245-bf32-4e7f-90ac-f1f3b9ab718d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bc66030>]}
[0m13:13:44.567790 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'df698245-bf32-4e7f-90ac-f1f3b9ab718d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd08440>]}
[0m13:13:44.571928 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:13:44.757603 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:13:44.913419 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:13:44.914057 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:13:44.960937 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'df698245-bf32-4e7f-90ac-f1f3b9ab718d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bea1ac0>]}
[0m13:13:45.056137 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:13:45.058709 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:13:45.088423 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'df698245-bf32-4e7f-90ac-f1f3b9ab718d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bf08440>]}
[0m13:13:45.089064 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:13:45.089608 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'df698245-bf32-4e7f-90ac-f1f3b9ab718d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c093e60>]}
[0m13:13:45.091058 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:13:45.091789 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:13:45.092407 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:13:45.093116 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:13:45.093816 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:13:45.094661 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:13:45.095630 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:13:45.098850 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.0831323, "process_in_blocks": "0", "process_kernel_time": 0.41744, "process_mem_max_rss": "121425920", "process_out_blocks": "0", "process_user_time": 2.681169}
[0m13:13:45.099600 [debug] [MainThread]: Command `dbt ls` succeeded at 13:13:45.099434 after 1.08 seconds
[0m13:13:45.100182 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ba757c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b993110>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c072930>]}
[0m13:13:45.100667 [debug] [MainThread]: Flushing usage events
[0m13:13:45.531873 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:14:59.128324 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f31130>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105c916a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105cdb1a0>]}


============================== 13:14:59.135773 | 3d0787af-9836-485c-8fd9-0bf30225fae8 ==============================
[0m13:14:59.135773 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:14:59.136764 [debug] [MainThread]: running dbt with arguments {'log_format': 'default', 'quiet': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'fail_fast': 'False', 'static_parser': 'True', 'write_json': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'introspect': 'True', 'warn_error': 'None', 'send_anonymous_usage_stats': 'True', 'use_colors': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'debug': 'False', 'target_path': 'None', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'empty': 'None', 'printer_width': '80', 'indirect_selection': 'eager', 'invocation_command': 'dbt ls --resource-type model --output json', 'use_experimental_parser': 'False', 'log_cache_events': 'False', 'version_check': 'True', 'no_print': 'None'}
[0m13:14:59.708331 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '3d0787af-9836-485c-8fd9-0bf30225fae8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105d79910>]}
[0m13:14:59.793604 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '3d0787af-9836-485c-8fd9-0bf30225fae8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105e0c440>]}
[0m13:14:59.796491 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:14:59.958121 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:15:00.123421 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:15:00.123967 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:15:00.178391 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '3d0787af-9836-485c-8fd9-0bf30225fae8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1060b9c10>]}
[0m13:15:00.273849 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:15:00.277406 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:15:00.307585 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '3d0787af-9836-485c-8fd9-0bf30225fae8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106124d40>]}
[0m13:15:00.308288 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:15:00.308772 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '3d0787af-9836-485c-8fd9-0bf30225fae8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106281c70>]}
[0m13:15:00.310144 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:15:00.310952 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:15:00.311763 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:15:00.312396 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:15:00.313052 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:15:00.313688 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:15:00.314327 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:15:00.317112 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.306484, "process_in_blocks": "0", "process_kernel_time": 0.522297, "process_mem_max_rss": "120696832", "process_out_blocks": "0", "process_user_time": 2.914214}
[0m13:15:00.317801 [debug] [MainThread]: Command `dbt ls` succeeded at 13:15:00.317664 after 1.31 seconds
[0m13:15:00.318422 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1062837a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105f26900>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1061c9670>]}
[0m13:15:00.318912 [debug] [MainThread]: Flushing usage events
[0m13:15:00.777300 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:15:03.134964 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c040d10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c68b350>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c68acc0>]}


============================== 13:15:03.140437 | 3da9d9e1-913f-40a6-831e-9670eb896d0c ==============================
[0m13:15:03.140437 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:15:03.141173 [debug] [MainThread]: running dbt with arguments {'introspect': 'True', 'invocation_command': 'dbt run', 'use_experimental_parser': 'False', 'use_colors': 'True', 'version_check': 'True', 'quiet': 'False', 'log_cache_events': 'False', 'debug': 'False', 'target_path': 'None', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'indirect_selection': 'eager', 'empty': 'False', 'cache_selected_only': 'False', 'send_anonymous_usage_stats': 'True', 'no_print': 'None', 'log_format': 'default', 'fail_fast': 'False', 'printer_width': '80', 'partial_parse': 'True', 'warn_error': 'None', 'write_json': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'static_parser': 'True'}
[0m13:15:03.482148 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '3da9d9e1-913f-40a6-831e-9670eb896d0c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8d54f0>]}
[0m13:15:03.566438 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '3da9d9e1-913f-40a6-831e-9670eb896d0c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108d8e2a0>]}
[0m13:15:03.568489 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:15:03.718310 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:15:03.845471 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:15:03.845964 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:15:03.889581 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '3da9d9e1-913f-40a6-831e-9670eb896d0c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c857fb0>]}
[0m13:15:03.972530 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:15:03.975512 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:15:03.995029 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '3da9d9e1-913f-40a6-831e-9670eb896d0c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cc58980>]}
[0m13:15:03.995632 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:15:03.996075 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '3da9d9e1-913f-40a6-831e-9670eb896d0c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c66ce30>]}
[0m13:15:03.998526 [info ] [MainThread]: 
[0m13:15:03.999045 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m13:15:03.999447 [info ] [MainThread]: 
[0m13:15:04.000157 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m13:15:04.005937 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m13:15:04.075937 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m13:15:04.076507 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m13:15:04.076940 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m13:15:04.152116 [debug] [ThreadPool]: SQL status: OK in 0.075 seconds
[0m13:15:04.153859 [debug] [ThreadPool]: On list_memory: Close
[0m13:15:04.156489 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m13:15:04.156976 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m13:15:04.157389 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:15:04.159710 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:15:04.161293 [debug] [ThreadPool]: On list_memory: Close
[0m13:15:04.162114 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_references)
[0m13:15:04.163157 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_references"
"
[0m13:15:04.171939 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:15:04.172470 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m13:15:04.172857 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:15:04.175672 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m13:15:04.177499 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:15:04.177952 [debug] [ThreadPool]: On create_memory_fct_references: BEGIN
[0m13:15:04.178739 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:15:04.179130 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:15:04.179511 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_references"} */

    
    
        create schema if not exists memory."fct_references"
    
[0m13:15:04.180719 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m13:15:04.181761 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m13:15:04.182169 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m13:15:04.182546 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m13:15:04.183141 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:15:04.183551 [debug] [ThreadPool]: On create_memory_fct_references: Close
[0m13:15:04.184241 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_references, now create_memory_fct_salesforce)
[0m13:15:04.184775 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m13:15:04.186947 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:15:04.187361 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m13:15:04.187743 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:15:04.189697 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:15:04.191285 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:15:04.191698 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m13:15:04.192316 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:15:04.192750 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:15:04.193139 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m13:15:04.193800 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:15:04.194824 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m13:15:04.195227 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m13:15:04.195600 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m13:15:04.196196 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:15:04.196592 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m13:15:04.198249 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now list_memory_fct_references)
[0m13:15:04.204265 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m13:15:04.204740 [debug] [ThreadPool]: On list_memory_fct_references: BEGIN
[0m13:15:04.205109 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:15:04.206692 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:15:04.207092 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m13:15:04.207508 [debug] [ThreadPool]: On list_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_references'
    and lower(table_catalog) = 'memory'
  
[0m13:15:04.230791 [debug] [ThreadPool]: SQL status: OK in 0.023 seconds
[0m13:15:04.232852 [debug] [ThreadPool]: On list_memory_fct_references: ROLLBACK
[0m13:15:04.235631 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_references'
[0m13:15:04.236306 [debug] [ThreadPool]: On list_memory_fct_references: Close
[0m13:15:04.237240 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_references, now list_memory_fct_salesforce)
[0m13:15:04.239825 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m13:15:04.240311 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m13:15:04.240826 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:15:04.242812 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m13:15:04.243317 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m13:15:04.243799 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m13:15:04.247889 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m13:15:04.249501 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m13:15:04.250644 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m13:15:04.251054 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m13:15:04.251809 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '3da9d9e1-913f-40a6-831e-9670eb896d0c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cad1820>]}
[0m13:15:04.252416 [debug] [MainThread]: Using duckdb connection "master"
[0m13:15:04.252835 [debug] [MainThread]: On master: BEGIN
[0m13:15:04.253230 [debug] [MainThread]: Opening a new connection, currently in state init
[0m13:15:04.254972 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m13:15:04.255424 [debug] [MainThread]: On master: COMMIT
[0m13:15:04.255843 [debug] [MainThread]: Using duckdb connection "master"
[0m13:15:04.256253 [debug] [MainThread]: On master: COMMIT
[0m13:15:04.256871 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m13:15:04.257304 [debug] [MainThread]: On master: Close
[0m13:15:04.260886 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m13:15:04.261572 [info ] [Thread-1 (]: 1 of 7 START sql table model fct_references.states ............................. [RUN]
[0m13:15:04.262157 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now model.usawfl.states)
[0m13:15:04.262617 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m13:15:04.270181 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m13:15:04.271150 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m13:15:04.308380 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m13:15:04.309319 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:15:04.309774 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m13:15:04.310197 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:15:04.311815 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:15:04.312288 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:15:04.312867 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."fct_references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m13:15:04.365740 [debug] [Thread-1 (]: SQL status: OK in 0.052 seconds
[0m13:15:04.372977 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:15:04.373686 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */
alter table memory."fct_references"."states__dbt_tmp" rename to "states"
[0m13:15:04.375180 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:15:04.383767 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:15:04.384310 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."fct_references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:15:04.397531 [debug] [Thread-1 (]: SQL status: OK in 0.013 seconds
[0m13:15:04.409494 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m13:15:04.410101 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:15:04.410566 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m13:15:04.411798 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:15:04.417999 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m13:15:04.418549 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.states"} */

      drop table if exists memory."fct_references"."states__dbt_backup" cascade
    
[0m13:15:04.419396 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:15:04.422155 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m13:15:04.424927 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3da9d9e1-913f-40a6-831e-9670eb896d0c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109f80200>]}
[0m13:15:04.426033 [info ] [Thread-1 (]: 1 of 7 OK created sql table model fct_references.states ........................ [[32mOK[0m in 0.16s]
[0m13:15:04.426866 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m13:15:04.427436 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m13:15:04.428062 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m13:15:04.429108 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m13:15:04.429947 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m13:15:04.435211 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m13:15:04.436060 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m13:15:04.440762 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m13:15:04.441676 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:15:04.442139 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m13:15:04.442567 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:15:04.444190 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:15:04.444703 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:15:04.445271 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as timestamp) as created,
        cast(_dlt_processed_utc as timestamp) as processed,
        cast(system_modstamp as timestamp) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m13:15:04.953619 [debug] [Thread-1 (]: SQL status: OK in 0.508 seconds
[0m13:15:04.958336 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:15:04.959133 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m13:15:04.960396 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:15:04.966388 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:15:04.966999 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:15:04.971432 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m13:15:04.973253 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m13:15:04.973807 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:15:04.974417 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m13:15:04.975618 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:15:04.978337 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m13:15:04.978838 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m13:15:04.979927 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:15:04.981945 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m13:15:04.982738 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3da9d9e1-913f-40a6-831e-9670eb896d0c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d0e7cb0>]}
[0m13:15:04.983532 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.55s]
[0m13:15:04.984279 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m13:15:04.984876 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m13:15:04.985462 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m13:15:04.986039 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m13:15:04.986597 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m13:15:05.002980 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m13:15:05.004094 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m13:15:05.007749 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m13:15:05.008872 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:15:05.009399 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m13:15:05.009833 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:15:05.011595 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:15:05.012051 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:15:05.012786 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as timestamp) as created,
        cast(c._dlt_processed_utc as timestamp) as processed,
        cast(c.system_modstamp as timestamp) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."fct_references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."fct_references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m13:15:11.457995 [debug] [Thread-1 (]: SQL status: OK in 6.444 seconds
[0m13:15:11.462519 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:15:11.463246 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m13:15:11.464340 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:15:11.470086 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:15:11.470630 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:15:11.642851 [debug] [Thread-1 (]: SQL status: OK in 0.172 seconds
[0m13:15:11.644419 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m13:15:11.645041 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:15:11.645573 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m13:15:11.655136 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m13:15:11.657858 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m13:15:11.658361 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m13:15:11.659126 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:15:11.660730 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m13:15:11.661386 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3da9d9e1-913f-40a6-831e-9670eb896d0c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d0c46b0>]}
[0m13:15:11.662175 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.68s]
[0m13:15:11.662909 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m13:15:11.663767 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m13:15:11.664542 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m13:15:11.665205 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m13:15:11.665679 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m13:15:11.670595 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m13:15:11.671457 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m13:15:11.674731 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m13:15:11.675503 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:15:11.675995 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m13:15:11.676535 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:15:11.678374 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:15:11.678870 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:15:11.679517 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        cast(ol.is_deleted as boolean) as is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        cast(o.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as timestamp) as created,
        cast(o._dlt_processed_utc as timestamp) as processed,
        cast(o.system_modstamp as timestamp) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m13:15:12.674708 [debug] [Thread-1 (]: SQL status: OK in 0.994 seconds
[0m13:15:12.679049 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:15:12.679738 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m13:15:12.680884 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:15:12.690630 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:15:12.693928 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:15:12.699955 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m13:15:12.703697 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m13:15:12.704467 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:15:12.705060 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m13:15:12.708619 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m13:15:12.712284 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m13:15:12.713110 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m13:15:12.714301 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:15:12.716696 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m13:15:12.718053 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3da9d9e1-913f-40a6-831e-9670eb896d0c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d10bfe0>]}
[0m13:15:12.718985 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 1.05s]
[0m13:15:12.720204 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m13:15:12.721070 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m13:15:12.721897 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m13:15:12.722786 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m13:15:12.723437 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m13:15:12.727446 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m13:15:12.728576 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m13:15:12.732765 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m13:15:12.733635 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:15:12.734133 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m13:15:12.734608 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:15:12.736630 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:15:12.737201 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:15:12.737926 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        cast(t.is_deleted as boolean) as is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as timestamp) as created,
        cast(t._dlt_processed_utc as timestamp) as processed,
        cast(t.system_modstamp as timestamp) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m13:15:13.218719 [debug] [Thread-1 (]: SQL status: OK in 0.480 seconds
[0m13:15:13.221945 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:15:13.222420 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m13:15:13.223239 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:15:13.228710 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:15:13.229284 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:15:13.232161 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:15:13.233618 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m13:15:13.234084 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:15:13.234532 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m13:15:13.235743 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:15:13.238283 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m13:15:13.238751 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m13:15:13.239540 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:15:13.241182 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m13:15:13.241930 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3da9d9e1-913f-40a6-831e-9670eb896d0c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cfee480>]}
[0m13:15:13.242682 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.52s]
[0m13:15:13.243379 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m13:15:13.244166 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m13:15:13.244722 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m13:15:13.245261 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m13:15:13.245713 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m13:15:13.249679 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m13:15:13.250633 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m13:15:13.254160 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m13:15:13.255248 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:15:13.255743 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m13:15:13.256173 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:15:13.257948 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:15:13.258625 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:15:13.259217 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        nullif(m.classification_proposed__c, '') as classification_proposed,
        nullif(m.classification_proposed_year__c, '') as classification_proposed_year,
        nullif(m.classification_confirmed__c, '') as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        cast(m.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as timestamp) as created,
        cast(m._dlt_processed_utc as timestamp) as processed,
        cast(m.system_modstamp as timestamp) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m13:15:15.016883 [debug] [Thread-1 (]: SQL status: OK in 1.757 seconds
[0m13:15:15.020011 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:15:15.020483 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m13:15:15.021395 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:15:15.026810 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:15:15.027365 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:15:15.032066 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m13:15:15.033755 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m13:15:15.034373 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:15:15.034897 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m13:15:15.037310 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:15:15.040135 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m13:15:15.040793 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m13:15:15.041859 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:15:15.043559 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m13:15:15.044252 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3da9d9e1-913f-40a6-831e-9670eb896d0c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d07d8b0>]}
[0m13:15:15.045035 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.80s]
[0m13:15:15.045743 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m13:15:15.046229 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m13:15:15.046773 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m13:15:15.047356 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m13:15:15.047886 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m13:15:15.053174 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m13:15:15.054152 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m13:15:15.059331 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m13:15:15.060390 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:15:15.060846 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m13:15:15.061274 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m13:15:15.062849 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m13:15:15.063299 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:15:15.064165 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m13:15:16.931705 [debug] [Thread-1 (]: SQL status: OK in 1.866 seconds
[0m13:15:16.996359 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:15:16.997145 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m13:15:16.998262 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:15:17.004747 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:15:17.005470 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/output/model-output-dev//fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m13:15:17.010289 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m13:15:17.012493 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m13:15:17.013159 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:15:17.013736 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m13:15:17.014782 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:15:17.017890 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m13:15:17.018723 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "dev", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m13:15:17.019715 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:15:17.021521 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m13:15:17.022380 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3da9d9e1-913f-40a6-831e-9670eb896d0c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d12d3d0>]}
[0m13:15:17.023193 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.97s]
[0m13:15:17.024004 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m13:15:17.025373 [debug] [MainThread]: Using duckdb connection "master"
[0m13:15:17.025832 [debug] [MainThread]: On master: BEGIN
[0m13:15:17.026243 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m13:15:17.027940 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m13:15:17.028391 [debug] [MainThread]: On master: COMMIT
[0m13:15:17.028810 [debug] [MainThread]: Using duckdb connection "master"
[0m13:15:17.029213 [debug] [MainThread]: On master: COMMIT
[0m13:15:17.029892 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m13:15:17.030343 [debug] [MainThread]: On master: Close
[0m13:15:17.030880 [debug] [MainThread]: Connection 'master' was properly closed.
[0m13:15:17.031272 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m13:15:17.031761 [info ] [MainThread]: 
[0m13:15:17.032217 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 13.03 seconds (13.03s).
[0m13:15:17.034165 [debug] [MainThread]: Command end result
[0m13:15:17.055974 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:15:17.059263 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:15:17.066844 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m13:15:17.067309 [info ] [MainThread]: 
[0m13:15:17.067767 [info ] [MainThread]: [32mCompleted successfully[0m
[0m13:15:17.068162 [info ] [MainThread]: 
[0m13:15:17.068590 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m13:15:17.072253 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 14.025992, "process_in_blocks": "0", "process_kernel_time": 0.915785, "process_mem_max_rss": "371224576", "process_out_blocks": "0", "process_user_time": 8.747886}
[0m13:15:17.072997 [debug] [MainThread]: Command `dbt run` succeeded at 13:15:17.072867 after 14.03 seconds
[0m13:15:17.073521 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c68b230>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c68b0b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c68b290>]}
[0m13:15:17.074002 [debug] [MainThread]: Flushing usage events
[0m13:15:17.591757 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m13:15:21.189695 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x103c06ff0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104957860>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1049572c0>]}


============================== 13:15:21.196440 | 3f3859d0-8879-41a3-b786-74bbbe4cbe3d ==============================
[0m13:15:21.196440 [info ] [MainThread]: Running with dbt=1.10.9
[0m13:15:21.197231 [debug] [MainThread]: running dbt with arguments {'log_format': 'default', 'warn_error': 'None', 'introspect': 'True', 'write_json': 'True', 'send_anonymous_usage_stats': 'True', 'use_experimental_parser': 'False', 'static_parser': 'True', 'use_colors': 'True', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'quiet': 'False', 'indirect_selection': 'eager', 'version_check': 'True', 'printer_width': '80', 'empty': 'None', 'partial_parse': 'True', 'cache_selected_only': 'False', 'log_cache_events': 'False', 'debug': 'False', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'fail_fast': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'no_print': 'None'}
[0m13:15:21.547676 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '3f3859d0-8879-41a3-b786-74bbbe4cbe3d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10490ff50>]}
[0m13:15:21.627937 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '3f3859d0-8879-41a3-b786-74bbbe4cbe3d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10224d2b0>]}
[0m13:15:21.632065 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m13:15:21.808046 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m13:15:22.018152 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:15:22.018731 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:15:22.063294 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '3f3859d0-8879-41a3-b786-74bbbe4cbe3d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104b6f680>]}
[0m13:15:22.151715 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m13:15:22.154165 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m13:15:22.185699 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '3f3859d0-8879-41a3-b786-74bbbe4cbe3d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104e25f10>]}
[0m13:15:22.186445 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m13:15:22.186983 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '3f3859d0-8879-41a3-b786-74bbbe4cbe3d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104effdd0>]}
[0m13:15:22.188501 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m13:15:22.189263 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m13:15:22.189951 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m13:15:22.190625 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m13:15:22.191406 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m13:15:22.192139 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m13:15:22.192945 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m13:15:22.196090 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 1.1177099, "process_in_blocks": "0", "process_kernel_time": 0.517591, "process_mem_max_rss": "121282560", "process_out_blocks": "0", "process_user_time": 2.929791}
[0m13:15:22.196860 [debug] [MainThread]: Command `dbt ls` succeeded at 13:15:22.196718 after 1.12 seconds
[0m13:15:22.197413 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1046d3830>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104d34470>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104c0bf80>]}
[0m13:15:22.197914 [debug] [MainThread]: Flushing usage events
[0m13:15:22.651788 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:29:38.393686 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111b26000>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11211bf20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1125832c0>]}


============================== 16:29:38.402944 | 14348c2d-da3c-440a-83c1-3200442a5806 ==============================
[0m16:29:38.402944 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:29:38.403878 [debug] [MainThread]: running dbt with arguments {'write_json': 'True', 'no_print': 'None', 'static_parser': 'True', 'printer_width': '80', 'use_experimental_parser': 'False', 'partial_parse': 'True', 'log_format': 'default', 'fail_fast': 'False', 'quiet': 'False', 'log_cache_events': 'False', 'debug': 'False', 'empty': 'None', 'warn_error': 'None', 'invocation_command': 'dbt ls --resource-type model --output json', 'indirect_selection': 'eager', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'target_path': 'None', 'introspect': 'True', 'version_check': 'True', 'send_anonymous_usage_stats': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'use_colors': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'cache_selected_only': 'False'}
[0m16:29:39.428628 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '14348c2d-da3c-440a-83c1-3200442a5806', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1125fd280>]}
[0m16:29:39.512220 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '14348c2d-da3c-440a-83c1-3200442a5806', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1125393a0>]}
[0m16:29:39.516185 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:29:39.684197 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:29:39.881207 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m16:29:39.882287 [debug] [MainThread]: Partial parsing: updated file: usawfl://models/fct_salesforce/members.sql
[0m16:29:40.209594 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '14348c2d-da3c-440a-83c1-3200442a5806', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112b9b9e0>]}
[0m16:29:40.291290 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:29:40.295565 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:29:40.343482 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '14348c2d-da3c-440a-83c1-3200442a5806', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112cb5940>]}
[0m16:29:40.344407 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:29:40.345039 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '14348c2d-da3c-440a-83c1-3200442a5806', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112bb1c70>]}
[0m16:29:40.346813 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:29:40.347742 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:29:40.348588 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.official_links", "source.usawfl.salesforce_raw.officials", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:29:40.349405 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:29:40.350468 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:29:40.351192 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:29:40.351877 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:29:40.355806 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 2.058207, "process_in_blocks": "0", "process_kernel_time": 0.510899, "process_mem_max_rss": "125169664", "process_out_blocks": "0", "process_user_time": 3.008768}
[0m16:29:40.356755 [debug] [MainThread]: Command `dbt ls` succeeded at 16:29:40.356582 after 2.06 seconds
[0m16:29:40.357377 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112583530>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112583830>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1125832c0>]}
[0m16:29:40.357932 [debug] [MainThread]: Flushing usage events
[0m16:29:40.823234 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:29:43.353859 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e7f15b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e91f2c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e91ed20>]}


============================== 16:29:43.359443 | ef85d04e-8310-44c8-a59d-5770ad4d96ec ==============================
[0m16:29:43.359443 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:29:43.360158 [debug] [MainThread]: running dbt with arguments {'use_experimental_parser': 'False', 'fail_fast': 'False', 'target_path': 'None', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'static_parser': 'True', 'cache_selected_only': 'False', 'invocation_command': 'dbt run --target prod', 'log_cache_events': 'False', 'partial_parse': 'True', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'send_anonymous_usage_stats': 'True', 'log_format': 'default', 'indirect_selection': 'eager', 'quiet': 'False', 'empty': 'False', 'printer_width': '80', 'debug': 'False', 'introspect': 'True', 'use_colors': 'True', 'write_json': 'True', 'warn_error': 'None', 'version_check': 'True'}
[0m16:29:43.660427 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'ef85d04e-8310-44c8-a59d-5770ad4d96ec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10eb0cdd0>]}
[0m16:29:43.736977 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'ef85d04e-8310-44c8-a59d-5770ad4d96ec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e78c770>]}
[0m16:29:43.739118 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:29:43.940042 [debug] [MainThread]: checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, vars: {}, profile: , target: prod, version: 1.10.9
[0m16:29:44.052631 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m16:29:44.053171 [debug] [MainThread]: previous checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e, current checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23
[0m16:29:44.053647 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'ef85d04e-8310-44c8-a59d-5770ad4d96ec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2b97f0>]}
[0m16:29:45.731035 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'ef85d04e-8310-44c8-a59d-5770ad4d96ec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f02f320>]}
[0m16:29:45.809440 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:29:45.811883 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:29:45.829942 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'ef85d04e-8310-44c8-a59d-5770ad4d96ec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc7fb30>]}
[0m16:29:45.830602 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:29:45.831171 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'ef85d04e-8310-44c8-a59d-5770ad4d96ec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ed2f950>]}
[0m16:29:45.833642 [info ] [MainThread]: 
[0m16:29:45.834134 [info ] [MainThread]: Concurrency: 1 threads (target='prod')
[0m16:29:45.834539 [info ] [MainThread]: 
[0m16:29:45.835135 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:29:45.841026 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_memory'
[0m16:29:45.928761 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:29:45.929295 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:29:45.929725 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:29:46.103084 [debug] [ThreadPool]: SQL status: OK in 0.173 seconds
[0m16:29:46.104767 [debug] [ThreadPool]: On list_memory: Close
[0m16:29:46.107258 [debug] [ThreadPool]: Using duckdb connection "list_memory"
[0m16:29:46.107744 [debug] [ThreadPool]: On list_memory: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = 'memory'
    
  
  
[0m16:29:46.108152 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:29:46.110289 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:29:46.111756 [debug] [ThreadPool]: On list_memory: Close
[0m16:29:46.112526 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory, now create_memory_fct_salesforce)
[0m16:29:46.113078 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_salesforce"
"
[0m16:29:46.120268 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:29:46.120756 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:29:46.121277 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:29:46.123366 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:29:46.124947 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:29:46.125388 [debug] [ThreadPool]: On create_memory_fct_salesforce: BEGIN
[0m16:29:46.126039 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:29:46.126440 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:29:46.126898 [debug] [ThreadPool]: On create_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_salesforce"} */

    
    
        create schema if not exists memory."fct_salesforce"
    
[0m16:29:46.127689 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:29:46.128865 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:29:46.129319 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_salesforce"
[0m16:29:46.129774 [debug] [ThreadPool]: On create_memory_fct_salesforce: COMMIT
[0m16:29:46.130454 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:29:46.130889 [debug] [ThreadPool]: On create_memory_fct_salesforce: Close
[0m16:29:46.131583 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_salesforce, now create_memory_fct_references)
[0m16:29:46.132354 [debug] [ThreadPool]: Creating schema "database: "memory"
schema: "fct_references"
"
[0m16:29:46.135181 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:29:46.135713 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_references"} */

    
        select type from duckdb_databases()
        where lower(database_name)='memory'
        and type='sqlite'
    
  
[0m16:29:46.136139 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:29:46.138768 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m16:29:46.140745 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:29:46.141208 [debug] [ThreadPool]: On create_memory_fct_references: BEGIN
[0m16:29:46.141882 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:29:46.142317 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:29:46.142960 [debug] [ThreadPool]: On create_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "create_memory_fct_references"} */

    
    
        create schema if not exists memory."fct_references"
    
[0m16:29:46.143914 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:29:46.145055 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m16:29:46.145533 [debug] [ThreadPool]: Using duckdb connection "create_memory_fct_references"
[0m16:29:46.145942 [debug] [ThreadPool]: On create_memory_fct_references: COMMIT
[0m16:29:46.146809 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:29:46.147285 [debug] [ThreadPool]: On create_memory_fct_references: Close
[0m16:29:46.149986 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_memory_fct_references, now list_memory_fct_salesforce)
[0m16:29:46.156654 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:29:46.157138 [debug] [ThreadPool]: On list_memory_fct_salesforce: BEGIN
[0m16:29:46.157526 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:29:46.159560 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:29:46.160135 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_salesforce"
[0m16:29:46.160780 [debug] [ThreadPool]: On list_memory_fct_salesforce: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_salesforce"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_salesforce'
    and lower(table_catalog) = 'memory'
  
[0m16:29:46.179823 [debug] [ThreadPool]: SQL status: OK in 0.018 seconds
[0m16:29:46.181679 [debug] [ThreadPool]: On list_memory_fct_salesforce: ROLLBACK
[0m16:29:46.185165 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_salesforce'
[0m16:29:46.185815 [debug] [ThreadPool]: On list_memory_fct_salesforce: Close
[0m16:29:46.186696 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_memory_fct_salesforce, now list_memory_fct_references)
[0m16:29:46.190784 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m16:29:46.191260 [debug] [ThreadPool]: On list_memory_fct_references: BEGIN
[0m16:29:46.191646 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:29:46.193730 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m16:29:46.194219 [debug] [ThreadPool]: Using duckdb connection "list_memory_fct_references"
[0m16:29:46.194806 [debug] [ThreadPool]: On list_memory_fct_references: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "connection_name": "list_memory_fct_references"} */
select
      'memory' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'fct_references'
    and lower(table_catalog) = 'memory'
  
[0m16:29:46.199176 [debug] [ThreadPool]: SQL status: OK in 0.004 seconds
[0m16:29:46.201635 [debug] [ThreadPool]: On list_memory_fct_references: ROLLBACK
[0m16:29:46.202992 [debug] [ThreadPool]: Failed to rollback 'list_memory_fct_references'
[0m16:29:46.203576 [debug] [ThreadPool]: On list_memory_fct_references: Close
[0m16:29:46.204595 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'ef85d04e-8310-44c8-a59d-5770ad4d96ec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f00eba0>]}
[0m16:29:46.205247 [debug] [MainThread]: Using duckdb connection "master"
[0m16:29:46.205669 [debug] [MainThread]: On master: BEGIN
[0m16:29:46.206081 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:29:46.207850 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:29:46.208331 [debug] [MainThread]: On master: COMMIT
[0m16:29:46.208755 [debug] [MainThread]: Using duckdb connection "master"
[0m16:29:46.209147 [debug] [MainThread]: On master: COMMIT
[0m16:29:46.209797 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:29:46.210394 [debug] [MainThread]: On master: Close
[0m16:29:46.214597 [debug] [Thread-1 (]: Began running node model.usawfl.states
[0m16:29:46.215279 [info ] [Thread-1 (]: 1 of 7 START sql table model fct_references.states ............................. [RUN]
[0m16:29:46.216093 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly list_memory_fct_references, now model.usawfl.states)
[0m16:29:46.217481 [debug] [Thread-1 (]: Began compiling node model.usawfl.states
[0m16:29:46.226468 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.states"
[0m16:29:46.228035 [debug] [Thread-1 (]: Began executing node model.usawfl.states
[0m16:29:46.273977 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.states"
[0m16:29:46.274976 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:29:46.275450 [debug] [Thread-1 (]: On model.usawfl.states: BEGIN
[0m16:29:46.275893 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:29:46.278089 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:29:46.278681 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:29:46.279355 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

  
    
    

    create  table
      memory."fct_references"."states__dbt_tmp"
  
    as (
      select 'Alabama' as state, 'AL' as abbreviation
union
    select 'Alaska' as state, 'AK' as abbreviation
union
    select 'Arizona' as state, 'AZ' as abbreviation
union
    select 'Arkansas' as state, 'AR' as abbreviation
union
    select 'California' as state, 'CA' as abbreviation
union
    select 'Colorado' as state, 'CO' as abbreviation
union
    select 'Connecticut' as state, 'CT' as abbreviation
union
    select 'Delaware' as state, 'DE' as abbreviation
union
    select 'District of Columbia' as state, 'DC' as abbreviation
union
    select 'Florida' as state, 'FL' as abbreviation
union
    select 'Georgia' as state, 'GA' as abbreviation
union
    select 'Hawaii' as state, 'HI' as abbreviation
union
    select 'Idaho' as state, 'ID' as abbreviation
union
    select 'Illinois' as state, 'IL' as abbreviation
union
    select 'Indiana' as state, 'IN' as abbreviation
union
    select 'Iowa' as state, 'IA' as abbreviation
union
    select 'Kansas' as state, 'KS' as abbreviation
union
    select 'Kentucky' as state, 'KY' as abbreviation
union
    select 'Louisiana' as state, 'LA' as abbreviation
union
    select 'Maine' as state, 'ME' as abbreviation
union
    select 'Maryland' as state, 'MD' as abbreviation
union
    select 'Massachusetts' as state, 'MA' as abbreviation
union
    select 'Michigan' as state, 'MI' as abbreviation
union
    select 'Minnesota' as state, 'MN' as abbreviation
union
    select 'Mississippi' as state, 'MS' as abbreviation
union
    select 'Missouri' as state, 'MO' as abbreviation
union
    select 'Montana' as state, 'MT' as abbreviation
union
    select 'Nebraska' as state, 'NE' as abbreviation
union
    select 'Nevada' as state, 'NV' as abbreviation
union
    select 'New Hampshire' as state, 'NH' as abbreviation
union
    select 'New Jersey' as state, 'NJ' as abbreviation
union
    select 'New Mexico' as state, 'NM' as abbreviation
union
    select 'New York' as state, 'NY' as abbreviation
union
    select 'North Carolina' as state, 'NC' as abbreviation
union
    select 'North Dakota' as state, 'ND' as abbreviation
union
    select 'Ohio' as state, 'OH' as abbreviation
union
    select 'Oklahoma' as state, 'OK' as abbreviation
union
    select 'Oregon' as state, 'OR' as abbreviation
union
    select 'Pennsylvania' as state, 'PA' as abbreviation
union
    select 'Rhode Island' as state, 'RI' as abbreviation
union
    select 'South Carolina' as state, 'SC' as abbreviation
union
    select 'South Dakota' as state, 'SD' as abbreviation
union
    select 'Tennessee' as state, 'TN' as abbreviation
union
    select 'Texas' as state, 'TX' as abbreviation
union
    select 'Utah' as state, 'UT' as abbreviation
union
    select 'Vermont' as state, 'VT' as abbreviation
union
    select 'Virginia' as state, 'VA' as abbreviation
union
    select 'Washington' as state, 'WA' as abbreviation
union
    select 'West Virginia' as state, 'WV' as abbreviation
union
    select 'Wisconsin' as state, 'WI' as abbreviation
union
    select 'Wyoming' as state, 'WY' as abbreviation
union
    select 'Samoa' as state, 'AS' as abbreviation
union
    select 'Guam' as state, 'GU' as abbreviation
union
    select 'Puerto Rico' as state, 'PR' as abbreviation
union
    select 'Virgin Islands' as state, 'VI' as abbreviation
    );
  
  
[0m16:29:46.320044 [debug] [Thread-1 (]: SQL status: OK in 0.040 seconds
[0m16:29:46.327412 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:29:46.328025 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */
alter table memory."fct_references"."states__dbt_tmp" rename to "states"
[0m16:29:46.329037 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:29:46.339987 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:29:46.340538 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

        COPY (SELECT * FROM memory."fct_references"."states") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_references/states/states.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:29:46.343596 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:29:46.356988 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:29:46.357544 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:29:46.357990 [debug] [Thread-1 (]: On model.usawfl.states: COMMIT
[0m16:29:46.359407 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:29:46.367657 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.states"
[0m16:29:46.368296 [debug] [Thread-1 (]: On model.usawfl.states: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.states"} */

      drop table if exists memory."fct_references"."states__dbt_backup" cascade
    
[0m16:29:46.369377 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:29:46.372694 [debug] [Thread-1 (]: On model.usawfl.states: Close
[0m16:29:46.375052 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ef85d04e-8310-44c8-a59d-5770ad4d96ec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f31bcb0>]}
[0m16:29:46.376023 [info ] [Thread-1 (]: 1 of 7 OK created sql table model fct_references.states ........................ [[32mOK[0m in 0.16s]
[0m16:29:46.377029 [debug] [Thread-1 (]: Finished running node model.usawfl.states
[0m16:29:46.377626 [debug] [Thread-1 (]: Began running node model.usawfl.tournaments
[0m16:29:46.378543 [info ] [Thread-1 (]: 2 of 7 START sql table model fct_salesforce.tournaments ........................ [RUN]
[0m16:29:46.379530 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.states, now model.usawfl.tournaments)
[0m16:29:46.380159 [debug] [Thread-1 (]: Began compiling node model.usawfl.tournaments
[0m16:29:46.385310 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.tournaments"
[0m16:29:46.386412 [debug] [Thread-1 (]: Began executing node model.usawfl.tournaments
[0m16:29:46.391678 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.tournaments"
[0m16:29:46.393691 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:29:46.394242 [debug] [Thread-1 (]: On model.usawfl.tournaments: BEGIN
[0m16:29:46.394884 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:29:46.397401 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:29:46.398129 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:29:46.399557 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

  
    
    

    create  table
      memory."fct_salesforce"."tournaments__dbt_tmp"
  
    as (
      with stage as (
    select
        id,
        nullif(owner_id, '') as owner_id,
        nullif(year__c, '') as season,
        nullif(name, '') as tournament_name,
        split(location__c,', ')[1] as city,
        split(location__c,', ')[2] as state,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[2], '%Y %B %d' )::date
            as varchar
        ) as start_date,
        cast(
            strptime(year__c || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[1] || ' ' || 
    split(
        replace(
            regexp_replace(
                replace(
                    replace(dates__c, ' and ', ' '),
                    '-',
                    ' '
                ),
                '([0-9])(st|nd|rd|th)',
                '\\\1',
                'gi'
            ),
            '\',
            ''
        ),
        ' '
    )
[3], '%Y %B %d' )::date
            as varchar
        ) as end_date,
        cast(is_deleted as boolean) as is_deleted,
        cast(created_date as timestamp) as created,
        cast(_dlt_processed_utc as timestamp) as processed,
        cast(system_modstamp as timestamp) as updated,
        row_number() over(partition by id order by system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_tournaments__c/*.parquet'
    where
        lower(is_deleted) = 'false'
)

select
    id,
    owner_id,
    season,
    tournament_name,
    city,
    state,
    start_date,
    end_date,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:29:46.884574 [debug] [Thread-1 (]: SQL status: OK in 0.483 seconds
[0m16:29:46.887984 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:29:46.888453 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */
alter table memory."fct_salesforce"."tournaments__dbt_tmp" rename to "tournaments"
[0m16:29:46.889350 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:29:46.894302 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:29:46.894790 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

        COPY (SELECT * FROM memory."fct_salesforce"."tournaments") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/tournaments/tournaments.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:29:46.897257 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:29:46.898708 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:29:46.899471 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:29:46.900001 [debug] [Thread-1 (]: On model.usawfl.tournaments: COMMIT
[0m16:29:46.900974 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:29:46.905233 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.tournaments"
[0m16:29:46.905758 [debug] [Thread-1 (]: On model.usawfl.tournaments: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.tournaments"} */

      drop table if exists memory."fct_salesforce"."tournaments__dbt_backup" cascade
    
[0m16:29:46.906587 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:29:46.908772 [debug] [Thread-1 (]: On model.usawfl.tournaments: Close
[0m16:29:46.909574 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ef85d04e-8310-44c8-a59d-5770ad4d96ec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f533e00>]}
[0m16:29:46.910389 [info ] [Thread-1 (]: 2 of 7 OK created sql table model fct_salesforce.tournaments ................... [[32mOK[0m in 0.53s]
[0m16:29:46.911122 [debug] [Thread-1 (]: Finished running node model.usawfl.tournaments
[0m16:29:46.911617 [debug] [Thread-1 (]: Began running node model.usawfl.contacts
[0m16:29:46.912175 [info ] [Thread-1 (]: 3 of 7 START sql table model fct_salesforce.contacts ........................... [RUN]
[0m16:29:46.912736 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.tournaments, now model.usawfl.contacts)
[0m16:29:46.913197 [debug] [Thread-1 (]: Began compiling node model.usawfl.contacts
[0m16:29:46.921188 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.contacts"
[0m16:29:46.922487 [debug] [Thread-1 (]: Began executing node model.usawfl.contacts
[0m16:29:46.926012 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.contacts"
[0m16:29:46.927056 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:29:46.927573 [debug] [Thread-1 (]: On model.usawfl.contacts: BEGIN
[0m16:29:46.928014 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:29:46.929827 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:29:46.930301 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:29:46.931039 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

  
    
    

    create  table
      memory."fct_salesforce"."contacts__dbt_tmp"
  
    as (
      with stage as (
    select
        c.id,
        nullif(
    case
        when lower(left(c.last_name, 2)) = 'mc'
        then concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, 1)),
                upper(substring(c.last_name, 3, 1)),
                lower(substring(c.last_name, 4, length(c.last_name)))
            )
        else concat(
                upper(substring(c.last_name, 1, 1)),
                lower(substring(c.last_name, 2, length(c.last_name)))
            )
        end
, '') as last_name,
        nullif(
    case
        when lower(left(c.first_name, 2)) = 'mc'
        then concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, 1)),
                upper(substring(c.first_name, 3, 1)),
                lower(substring(c.first_name, 4, length(c.first_name)))
            )
        else concat(
                upper(substring(c.first_name, 1, 1)),
                lower(substring(c.first_name, 2, length(c.first_name)))
            )
        end
, '') as first_name,
        nullif(c.birthdate, '') as birthdate,
        nullif(
    right(regexp_replace(cast(c.phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as phone,
        nullif(
    right(regexp_replace(cast(c.mobile_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as mobile_phone,
        nullif(
    right(regexp_replace(cast(c.home_phone as varchar), '[^0-9]', '', 'g'), 10)
, '') as home_phone,
        nullif(
    right(regexp_replace(cast(c.work_phone__c as varchar), '[^0-9]', '', 'g'), 10)
, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.mailing_street, '') as street,
        nullif(c.mailing_city, '') as city,
        coalesce(sa.abbreviation, ss.abbreviation, nullif(c.mailing_state, '')) as state,
        nullif(
    right(regexp_replace(cast(c.mailing_postal_code as varchar), '[^0-9]', '', 'g'), 10)
, '') as postal_code,
        nullif(c.mailing_country, '') as country,
        nullif(c.family_contact_name__c, '') as family_contact,
        nullif(c.family_contact_phone__c, '') as family_contact_phone,
        case
            when c.warfighter__c = true
                or c.warfighter_pre_2001_veteran__c = true 
                or c.warfighter_post_2001_veteran__c = true 
            then true
            else false
            end as warfighter,
        nullif(c.shirt_size__c, '') as shirt_size,
        cast(c.is_deleted as boolean) as is_deleted,
        cast(c.created_date as timestamp) as created,
        cast(c._dlt_processed_utc as timestamp) as processed,
        cast(c.system_modstamp as timestamp) as updated,
        row_number() over(partition by c.id order by c.system_modstamp desc) as updated_order
    from
        read_parquet('s3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/contact/*.parquet') c

    left join
        memory."fct_references"."states" sa
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(sa.abbreviation)

    left join
        memory."fct_references"."states" ss
    on
        lower(
    regexp_replace(c.mailing_state, '[\.`]', '', 'g')
) = lower(ss.state)

    where
        lower(c.is_deleted) = 'false'
)

select
    id,
    last_name,
    first_name,
    birthdate,
    
    if(
        cast(phone as varchar) is null,
        null,
        '(' || substring(cast(phone as varchar) from 1 for 3) || ') ' || substring(cast(phone as varchar) from 3 for 3) || '-' || substring(cast(phone as varchar) from 7 for 4)
    )
 as phone,
    
    if(
        cast(mobile_phone as varchar) is null,
        null,
        '(' || substring(cast(mobile_phone as varchar) from 1 for 3) || ') ' || substring(cast(mobile_phone as varchar) from 3 for 3) || '-' || substring(cast(mobile_phone as varchar) from 7 for 4)
    )
 as mobile_phone,
    
    if(
        cast(home_phone as varchar) is null,
        null,
        '(' || substring(cast(home_phone as varchar) from 1 for 3) || ') ' || substring(cast(home_phone as varchar) from 3 for 3) || '-' || substring(cast(home_phone as varchar) from 7 for 4)
    )
 as home_phone,
    
    if(
        cast(work_phone as varchar) is null,
        null,
        '(' || substring(cast(work_phone as varchar) from 1 for 3) || ') ' || substring(cast(work_phone as varchar) from 3 for 3) || '-' || substring(cast(work_phone as varchar) from 7 for 4)
    )
 as work_phone,
    email,
    street,
    city,
    
    case
        when right(state, 4) = ', UK'
        then replace(state, ', UK', '')
        when right(state, 3) = '/UK'
        then replace(state, '/UK', '')
        when right(state, 8) = ', Canada'
        then replace(state, ', Canada', '')
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Sao Paulo'
        else state
        end
 as state,
    
    case
        when length(cast(postal_code as varchar)) = 5
        then cast(postal_code as varchar)
        when length(cast(postal_code as varchar)) < 5
        then right('0000' || cast(postal_code as varchar), 5)
        when length(cast(postal_code as varchar)) > 5
        then left(right('0000' || cast(postal_code as varchar), 9), 5)
        end
 as postal_code,
    
    case
        when replace(lower(country), '.', '') in ('united states of america', 'united states', 'usa', 'us', 'usaa')
        then 'United States'
        when lower(country) = 'uk'
        then 'United Kingdom'
        when right(state, 4) = ', UK'
        then 'United Kingdom'
        when right(state, 3) = '/UK'
        then 'United Kingdom'
        when right(state, 8) = ', Canada'
        then 'Canada'
        when lower(country) = 'can'
        then 'Canada'
        when lower(country) = 'mex'
        then 'Mexico'
        when lower(country) = 'per'
        then 'Peru'
        when lower(country) in ('france', 'fra')
        then 'France'
        when state in ('SÃ£o Paulo', 'São Paulo')
        then 'Brazil'
        else country
        end
 as country,
    family_contact,
    family_contact_phone,
    warfighter,
    shirt_size,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:29:52.757043 [debug] [Thread-1 (]: SQL status: OK in 5.825 seconds
[0m16:29:52.760438 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:29:52.760918 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */
alter table memory."fct_salesforce"."contacts__dbt_tmp" rename to "contacts"
[0m16:29:52.761775 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:29:52.766491 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:29:52.766984 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

        COPY (SELECT * FROM memory."fct_salesforce"."contacts") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/contacts/contacts.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:29:52.928520 [debug] [Thread-1 (]: SQL status: OK in 0.161 seconds
[0m16:29:52.929981 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:29:52.930458 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:29:52.930890 [debug] [Thread-1 (]: On model.usawfl.contacts: COMMIT
[0m16:29:52.936486 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m16:29:52.939759 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.contacts"
[0m16:29:52.940393 [debug] [Thread-1 (]: On model.usawfl.contacts: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.contacts"} */

      drop table if exists memory."fct_salesforce"."contacts__dbt_backup" cascade
    
[0m16:29:52.941306 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:29:52.942897 [debug] [Thread-1 (]: On model.usawfl.contacts: Close
[0m16:29:52.943584 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ef85d04e-8310-44c8-a59d-5770ad4d96ec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f41b9b0>]}
[0m16:29:52.944303 [info ] [Thread-1 (]: 3 of 7 OK created sql table model fct_salesforce.contacts ...................... [[32mOK[0m in 6.03s]
[0m16:29:52.945002 [debug] [Thread-1 (]: Finished running node model.usawfl.contacts
[0m16:29:52.945916 [debug] [Thread-1 (]: Began running node model.usawfl.officials
[0m16:29:52.946638 [info ] [Thread-1 (]: 4 of 7 START sql table model fct_salesforce.officials .......................... [RUN]
[0m16:29:52.947228 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.contacts, now model.usawfl.officials)
[0m16:29:52.947692 [debug] [Thread-1 (]: Began compiling node model.usawfl.officials
[0m16:29:52.953652 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.officials"
[0m16:29:52.955140 [debug] [Thread-1 (]: Began executing node model.usawfl.officials
[0m16:29:52.959118 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.officials"
[0m16:29:52.960211 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:29:52.960777 [debug] [Thread-1 (]: On model.usawfl.officials: BEGIN
[0m16:29:52.961274 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:29:52.963166 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:29:52.963746 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:29:52.964429 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

  
    
    

    create  table
      memory."fct_salesforce"."officials__dbt_tmp"
  
    as (
      with official_links_stage as (
    select
        ol.official__c as official_id,
        cast(ol.is_deleted as boolean) as is_deleted,
        nullif(t.tournament_name, '') as tournament_name,
        nullif(ol.games_officiated__c, '') as games_officiated,
        nullif(ol.days_assigned__c, '') as days_assigned,
        row_number() over(partition by ol.id order by ol.system_modstamp desc) as updated_order
    from 
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_official_link__c/*.parquet' ol
    left join
        memory."fct_salesforce"."tournaments" t
    on
        ol.usawfl_tournament__c = t.id
    where
        ol.is_deleted = false

),

official_links as (
    select
        official_id,
        json_group_array(
            json_object(
                'tournament_name', tournament_name,
                'games_officiated', games_officiated,
                'days_assigned', days_assigned
            )
        ) as tournament_officiated_details
    from
        official_links_stage
    where
        updated_order = 1
    group by
        1
),

officials_stage as (
    select
        o.id,
        nullif(o.name, '') as name,
        nullif(o.type_of_official__c, '') as type,
        o.status__c as status,
        string_split(
            replace(replace(o.field_position_preferences__c, ';', '|'), '/', '|'),
            '|'
        ) as preference,
        nullif(o.type_of_official_details__c, '') as details,
        nullif(o.safe_sport_course_completed__c, '') as safe_sport_course_completed,
        nullif(o.safe_sport_certificate_expires__c, '') as safe_sport_certificate_expires,
        nullif(o.background_check_determination__c, '') as background_check_determination,
        nullif(o.background_check_expires__c, '') as background_check_expires,
        nullif(o.usawfl_rules_exam_pass_date__c, '') as usawfl_rules_exam_pass_date,
        cast(o.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        nullif(c.postal_code, '') as postal_code,
        nullif(c.country, '') as country,
--        nullif(ol.tournament_officiated_details, '') as tournament_officiated_details,
        cast(o.created_date as timestamp) as created,
        cast(o._dlt_processed_utc as timestamp) as processed,
        cast(o.system_modstamp as timestamp) as updated,
        row_number() over(partition by o.id order by o.system_modstamp desc) as updated_order,
        row_number() over(partition by o.contact__c order by o.system_modstamp desc) as contact_updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_officials__c/*.parquet' o

    left join
        memory."fct_salesforce"."contacts" c
    on
        o.contact__c = c.id

    left join
        official_links ol
    on
        o.id = ol.official_id

    where
        lower(o.is_deleted) = 'false'
        and o.name != 'Test Official'
)


select
    id,
    name,
    type,
    status,
    preference,
    details,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    safe_sport_course_completed,
    safe_sport_certificate_expires,
    background_check_determination,
    background_check_expires,
    usawfl_rules_exam_pass_date,
--    tournament_officiated_details
    created,
    processed,
    updated
from
    officials_stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:29:53.889147 [debug] [Thread-1 (]: SQL status: OK in 0.924 seconds
[0m16:29:53.895864 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:29:53.896738 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */
alter table memory."fct_salesforce"."officials__dbt_tmp" rename to "officials"
[0m16:29:53.898122 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:29:53.907152 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:29:53.907786 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

        COPY (SELECT * FROM memory."fct_salesforce"."officials") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/officials/officials.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:29:53.913135 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:29:53.915029 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:29:53.915676 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:29:53.916815 [debug] [Thread-1 (]: On model.usawfl.officials: COMMIT
[0m16:29:53.919809 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:29:53.927900 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.officials"
[0m16:29:53.929119 [debug] [Thread-1 (]: On model.usawfl.officials: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.officials"} */

      drop table if exists memory."fct_salesforce"."officials__dbt_backup" cascade
    
[0m16:29:53.930621 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:29:53.933569 [debug] [Thread-1 (]: On model.usawfl.officials: Close
[0m16:29:53.935422 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ef85d04e-8310-44c8-a59d-5770ad4d96ec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f53ea80>]}
[0m16:29:53.937467 [info ] [Thread-1 (]: 4 of 7 OK created sql table model fct_salesforce.officials ..................... [[32mOK[0m in 0.99s]
[0m16:29:53.938757 [debug] [Thread-1 (]: Finished running node model.usawfl.officials
[0m16:29:53.939592 [debug] [Thread-1 (]: Began running node model.usawfl.teams
[0m16:29:53.940790 [info ] [Thread-1 (]: 5 of 7 START sql table model fct_salesforce.teams .............................. [RUN]
[0m16:29:53.941564 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.officials, now model.usawfl.teams)
[0m16:29:53.942404 [debug] [Thread-1 (]: Began compiling node model.usawfl.teams
[0m16:29:53.946975 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.teams"
[0m16:29:53.948144 [debug] [Thread-1 (]: Began executing node model.usawfl.teams
[0m16:29:53.955260 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.teams"
[0m16:29:53.957525 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:29:53.959691 [debug] [Thread-1 (]: On model.usawfl.teams: BEGIN
[0m16:29:53.961015 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:29:53.964928 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m16:29:53.966229 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:29:53.967587 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

  
    
    

    create  table
      memory."fct_salesforce"."teams__dbt_tmp"
  
    as (
      with stage as (
    select
        t.id,
        nullif(t.name, '') as team_name,
        cast(t.is_deleted as boolean) as is_deleted,
        if(c1.id is null, false, true) as has_primary_contact,
        nullif(c1.first_name, '') as primary_contact_first_name,
        nullif(c1.last_name, '') as primary_contact_last_name,
        nullif(c1.phone, '') as primary_contact_phone,
        nullif(c1.mobile_phone, '') as primary_contact_mobile_phone,
        nullif(c1.home_phone, '') as primary_contact_home_phone,
        nullif(c1.work_phone, '') as primary_contact_work_phone,
        nullif(c1.email, '') as primary_contact_email,
        nullif(c1.street, '') as primary_contact_street,
        nullif(c1.city, '') as primary_contact_city,
        nullif(c1.state, '') as primary_contact_state,
        nullif(c1.postal_code, '') as primary_contact_postal_code,
        nullif(c1.country, '') as primary_contact_country,
        cast(t.created_date as timestamp) as created,
        cast(t._dlt_processed_utc as timestamp) as processed,
        cast(t.system_modstamp as timestamp) as updated,
        row_number() over(partition by t.id order by t.system_modstamp desc) as updated_order,
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl_team__c/*.parquet' t

    left join
        memory."fct_salesforce"."contacts" c1
    on
        t.primary_contact__c = c1.id
)

select
    id,
    team_name,
    has_primary_contact,
    primary_contact_first_name,
    primary_contact_last_name,        
    primary_contact_phone,
    primary_contact_mobile_phone,
    primary_contact_home_phone,
    primary_contact_work_phone,
    primary_contact_email,
    primary_contact_street,
    primary_contact_city,
    primary_contact_state,
    primary_contact_postal_code,
    primary_contact_country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    );
  
  
[0m16:29:54.445323 [debug] [Thread-1 (]: SQL status: OK in 0.477 seconds
[0m16:29:54.453059 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:29:54.453785 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */
alter table memory."fct_salesforce"."teams__dbt_tmp" rename to "teams"
[0m16:29:54.454836 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:29:54.460955 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:29:54.461652 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

        COPY (SELECT * FROM memory."fct_salesforce"."teams") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/teams/teams.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:29:54.465179 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:29:54.467212 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:29:54.467806 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:29:54.468279 [debug] [Thread-1 (]: On model.usawfl.teams: COMMIT
[0m16:29:54.469595 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:29:54.472757 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.teams"
[0m16:29:54.473339 [debug] [Thread-1 (]: On model.usawfl.teams: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.teams"} */

      drop table if exists memory."fct_salesforce"."teams__dbt_backup" cascade
    
[0m16:29:54.474589 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:29:54.477889 [debug] [Thread-1 (]: On model.usawfl.teams: Close
[0m16:29:54.479012 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ef85d04e-8310-44c8-a59d-5770ad4d96ec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f594b00>]}
[0m16:29:54.480007 [info ] [Thread-1 (]: 5 of 7 OK created sql table model fct_salesforce.teams ......................... [[32mOK[0m in 0.54s]
[0m16:29:54.480987 [debug] [Thread-1 (]: Finished running node model.usawfl.teams
[0m16:29:54.481951 [debug] [Thread-1 (]: Began running node model.usawfl.members
[0m16:29:54.482598 [info ] [Thread-1 (]: 6 of 7 START sql table model fct_salesforce.members ............................ [RUN]
[0m16:29:54.483242 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.teams, now model.usawfl.members)
[0m16:29:54.483882 [debug] [Thread-1 (]: Began compiling node model.usawfl.members
[0m16:29:54.489959 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.members"
[0m16:29:54.491776 [debug] [Thread-1 (]: Began executing node model.usawfl.members
[0m16:29:54.496029 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.members"
[0m16:29:54.497352 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:29:54.498112 [debug] [Thread-1 (]: On model.usawfl.members: BEGIN
[0m16:29:54.498956 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:29:54.500924 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:29:54.501478 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:29:54.502129 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

  
    
    

    create  table
      memory."fct_salesforce"."members__dbt_tmp"
  
    as (
      with stage as (
    select
        m.id,
        nullif(m.name, '') as name,
        nullif(t.team_name, '') as team_name,
        nullif(m.contact_type__c, '') as contact_type,
        nullif(m.contact_subtype__c, '') as contact_subtype,
        nullif(m.type__c, '') as type,
        nullif(m.status__c, '') as status,
        cast(nullif(m.classification_proposed__c, '') as int) as classification_proposed,
        cast(nullif(m.classification_proposed_year__c, '') as int) as classification_proposed_year,
        cast(nullif(m.classification_confirmed__c, '') as int) as classification,
        nullif(m.classification_status_final__c, '') as classification_status,
        nullif(m.classification_confirmed_tournament__c, '') as classification_updated_at,
        nullif(m.classification_medical_team__c, '') as classifiers,
        nullif(m.safe_sport_certified__c, '') as safe_sport_certified,
        nullif(m.rules_exam_passed__c, '') as rules_exam_passed,
        cast(m.is_deleted as boolean) as is_deleted,
        if(c.id is null, false, true) as has_contact,
        nullif(c.first_name, '') as first_name,
        nullif(c.last_name, '') as last_name,
        nullif(c.phone, '') as phone,
        nullif(c.mobile_phone, '') as mobile_phone,
        nullif(c.home_phone, '') as home_phone,
        nullif(c.work_phone, '') as work_phone,
        nullif(c.email, '') as email,
        nullif(c.street, '') as street,
        nullif(c.city, '') as city,
        nullif(c.state, '') as state,
        cast(nullif(c.postal_code, '') as varchar) as postal_code,
        nullif(c.country, '') as country,
        cast(m.created_date as timestamp) as created,
        cast(m._dlt_processed_utc as timestamp) as processed,
        cast(m.system_modstamp as timestamp) as updated,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order,
        row_number() over(partition by m.contact__c order by m.system_modstamp desc) as contact_updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    where
        lower(m.is_deleted) = 'false'
)

select
    id,
    name,
    team_name,
    contact_type,
    contact_subtype,
    type,
    status,
    classification_proposed,
    classification_proposed_year,
    classification,
    classification_status,
    classification_updated_at,
    classifiers,
    safe_sport_certified,
    rules_exam_passed,
    has_contact,
    first_name,
    last_name,        
    phone,
    mobile_phone,
    home_phone,
    work_phone,
    email,
    street,
    city,
    state,
    postal_code,
    country,
    created,
    processed,
    updated
from
    stage
where
    updated_order = 1
    and contact_updated_order = 1
    );
  
  
[0m16:29:56.228988 [debug] [Thread-1 (]: SQL status: OK in 1.726 seconds
[0m16:29:56.233164 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:29:56.233779 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */
alter table memory."fct_salesforce"."members__dbt_tmp" rename to "members"
[0m16:29:56.234781 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:29:56.240459 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:29:56.241189 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

        COPY (SELECT * FROM memory."fct_salesforce"."members") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/members/members.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:29:56.247112 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m16:29:56.248871 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:29:56.249452 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:29:56.249921 [debug] [Thread-1 (]: On model.usawfl.members: COMMIT
[0m16:29:56.252041 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:29:56.256540 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.members"
[0m16:29:56.257244 [debug] [Thread-1 (]: On model.usawfl.members: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.members"} */

      drop table if exists memory."fct_salesforce"."members__dbt_backup" cascade
    
[0m16:29:56.258464 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:29:56.260883 [debug] [Thread-1 (]: On model.usawfl.members: Close
[0m16:29:56.261820 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ef85d04e-8310-44c8-a59d-5770ad4d96ec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f594fe0>]}
[0m16:29:56.262778 [info ] [Thread-1 (]: 6 of 7 OK created sql table model fct_salesforce.members ....................... [[32mOK[0m in 1.78s]
[0m16:29:56.264042 [debug] [Thread-1 (]: Finished running node model.usawfl.members
[0m16:29:56.264668 [debug] [Thread-1 (]: Began running node model.usawfl.stats
[0m16:29:56.265302 [info ] [Thread-1 (]: 7 of 7 START sql table model fct_salesforce.stats .............................. [RUN]
[0m16:29:56.265992 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.usawfl.members, now model.usawfl.stats)
[0m16:29:56.266671 [debug] [Thread-1 (]: Began compiling node model.usawfl.stats
[0m16:29:56.273635 [debug] [Thread-1 (]: Writing injected SQL for node "model.usawfl.stats"
[0m16:29:56.275894 [debug] [Thread-1 (]: Began executing node model.usawfl.stats
[0m16:29:56.282409 [debug] [Thread-1 (]: Writing runtime sql for node "model.usawfl.stats"
[0m16:29:56.284739 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:29:56.285419 [debug] [Thread-1 (]: On model.usawfl.stats: BEGIN
[0m16:29:56.286613 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m16:29:56.289586 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m16:29:56.290308 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:29:56.291375 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

  
    
    

    create  table
      memory."fct_salesforce"."stats__dbt_tmp"
  
    as (
      with members as (
    select
        m.*,
        nullif(c.last_name, '') as last_name,
        nullif(c.first_name, '') as first_name,
        nullif(t.team_name, '') as team_name,
        row_number() over(partition by m.id order by m.system_modstamp desc) as updated_order
    from
        's3://move-united/usawfl_salesforce_to_s3_file/raw_salesforce/usawfl__c/*.parquet' m

    left join
        memory."fct_salesforce"."teams" t
    on
        m.team__c = t.id

    left join
        memory."fct_salesforce"."contacts" c
    on
        m.contact__c = c.id

    where
        lower(m.is_deleted) = 'false'
),

stage as (
    select * from members where updated_order = 1
),

stats as (
    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_t_ds__c',
                substring('x2021_t_ds__c' from 1 for strpos('x2021_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_t_ds__c as int) as amount,
        cast(substring('x2021_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_t_ds__c != ''

    
        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_in_ts__c',
                substring('x2021_in_ts__c' from 1 for strpos('x2021_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_in_ts__c as int),
        cast(substring('x2021_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2021_sacks__c',
                substring('x2021_sacks__c' from 1 for strpos('x2021_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2021_sacks__c as int),
        cast(substring('x2021_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2021_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_safeties__c',
                substring('x2022_safeties__c' from 1 for strpos('x2022_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_safeties__c as int),
        cast(substring('x2022_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_in_ts__c',
                substring('x2022_in_ts__c' from 1 for strpos('x2022_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_in_ts__c as int),
        cast(substring('x2022_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_sacks__c',
                substring('x2022_sacks__c' from 1 for strpos('x2022_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_sacks__c as int),
        cast(substring('x2022_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2022_t_ds__c',
                substring('x2022_t_ds__c' from 1 for strpos('x2022_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2022_t_ds__c as int),
        cast(substring('x2022_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2022_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_safeties__c',
                substring('x2023_safeties__c' from 1 for strpos('x2023_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_safeties__c as int),
        cast(substring('x2023_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_in_ts__c',
                substring('x2023_in_ts__c' from 1 for strpos('x2023_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_in_ts__c as int),
        cast(substring('x2023_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_sacks__c',
                substring('x2023_sacks__c' from 1 for strpos('x2023_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_sacks__c as int),
        cast(substring('x2023_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2023_t_ds__c',
                substring('x2023_t_ds__c' from 1 for strpos('x2023_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2023_t_ds__c as int),
        cast(substring('x2023_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2023_t_ds__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_safeties__c',
                substring('x2024_safeties__c' from 1 for strpos('x2024_safeties__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_safeties__c as int),
        cast(substring('x2024_safeties__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_safeties__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_in_ts__c',
                substring('x2024_in_ts__c' from 1 for strpos('x2024_in_ts__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_in_ts__c as int),
        cast(substring('x2024_in_ts__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_in_ts__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_sacks__c',
                substring('x2024_sacks__c' from 1 for strpos('x2024_sacks__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_sacks__c as int),
        cast(substring('x2024_sacks__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_sacks__c != ''

        
    
        

    union all

    select
        id,
        last_name,
        first_name,
        name,
        team_name,
        replace(
            replace(
                'x2024_t_ds__c',
                substring('x2024_t_ds__c' from 1 for strpos('x2024_t_ds__c','_')),
                ''
            ),
            '__c',
            ''
        ) as stat,
        cast(x2024_t_ds__c as int),
        cast(substring('x2024_t_ds__c' from 2 for 4) as int) as year
    from
        stage
    where
        lower(is_deleted) = 'false'
        and x2024_t_ds__c != ''

        
    
)

select
    last_name,
    first_name,
    team_name,
    case
        when right(stat, 1) = 's'
        then left(replace(stat, '_', ''), len(replace(stat, '_', '')) - 1 )
        else replace(stat, '_', '')
        end as stat,
    amount,
    year
from
    stats
    );
  
  
[0m16:29:58.115003 [debug] [Thread-1 (]: SQL status: OK in 1.822 seconds
[0m16:29:58.118417 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:29:58.118920 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */
alter table memory."fct_salesforce"."stats__dbt_tmp" rename to "stats"
[0m16:29:58.119798 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:29:58.124840 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:29:58.125362 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

        COPY (SELECT * FROM memory."fct_salesforce"."stats") TO '/Users/vongly/dev/freelance/MoveUnited/usawfl/test/duckdb_files/prod/fct_salesforce/stats/stats.parquet' (FORMAT PARQUET, OVERWRITE)
      
[0m16:29:58.127725 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m16:29:58.129165 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:29:58.129647 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:29:58.130079 [debug] [Thread-1 (]: On model.usawfl.stats: COMMIT
[0m16:29:58.130857 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:29:58.133362 [debug] [Thread-1 (]: Using duckdb connection "model.usawfl.stats"
[0m16:29:58.133817 [debug] [Thread-1 (]: On model.usawfl.stats: /* {"app": "dbt", "dbt_version": "1.10.9", "profile_name": "usawfl", "target_name": "prod", "node_id": "model.usawfl.stats"} */

      drop table if exists memory."fct_salesforce"."stats__dbt_backup" cascade
    
[0m16:29:58.134538 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:29:58.135997 [debug] [Thread-1 (]: On model.usawfl.stats: Close
[0m16:29:58.136727 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ef85d04e-8310-44c8-a59d-5770ad4d96ec', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f50bb60>]}
[0m16:29:58.137761 [info ] [Thread-1 (]: 7 of 7 OK created sql table model fct_salesforce.stats ......................... [[32mOK[0m in 1.87s]
[0m16:29:58.138741 [debug] [Thread-1 (]: Finished running node model.usawfl.stats
[0m16:29:58.140027 [debug] [MainThread]: Using duckdb connection "master"
[0m16:29:58.140464 [debug] [MainThread]: On master: BEGIN
[0m16:29:58.140862 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:29:58.142705 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m16:29:58.143190 [debug] [MainThread]: On master: COMMIT
[0m16:29:58.143658 [debug] [MainThread]: Using duckdb connection "master"
[0m16:29:58.144055 [debug] [MainThread]: On master: COMMIT
[0m16:29:58.144753 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:29:58.145254 [debug] [MainThread]: On master: Close
[0m16:29:58.146007 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:29:58.146405 [debug] [MainThread]: Connection 'model.usawfl.stats' was properly closed.
[0m16:29:58.146880 [info ] [MainThread]: 
[0m16:29:58.147305 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 12.31 seconds (12.31s).
[0m16:29:58.149102 [debug] [MainThread]: Command end result
[0m16:29:58.172494 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:29:58.174487 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:29:58.181670 [debug] [MainThread]: Wrote artifact RunExecutionResult to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/run_results.json
[0m16:29:58.182123 [info ] [MainThread]: 
[0m16:29:58.182582 [info ] [MainThread]: [32mCompleted successfully[0m
[0m16:29:58.182975 [info ] [MainThread]: 
[0m16:29:58.183481 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m16:29:58.185994 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 14.924888, "process_in_blocks": "0", "process_kernel_time": 0.882972, "process_mem_max_rss": "374964224", "process_out_blocks": "0", "process_user_time": 9.216026}
[0m16:29:58.186712 [debug] [MainThread]: Command `dbt run` succeeded at 16:29:58.186568 after 14.93 seconds
[0m16:29:58.187340 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e91eb10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e91ef30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e91ed20>]}
[0m16:29:58.187817 [debug] [MainThread]: Flushing usage events
[0m16:29:58.658349 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m16:30:01.176024 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cce08f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f5df5c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f5df020>]}


============================== 16:30:01.181102 | ce4103b4-3553-4dc1-8760-d4945fe58fac ==============================
[0m16:30:01.181102 [info ] [MainThread]: Running with dbt=1.10.9
[0m16:30:01.181814 [debug] [MainThread]: running dbt with arguments {'use_colors': 'True', 'log_path': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/logs', 'quiet': 'False', 'invocation_command': 'dbt ls --resource-type model --output json', 'profiles_dir': '/Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl', 'debug': 'False', 'use_experimental_parser': 'False', 'write_json': 'True', 'partial_parse': 'True', 'fail_fast': 'False', 'log_format': 'default', 'target_path': 'None', 'version_check': 'True', 'static_parser': 'True', 'warn_error': 'None', 'cache_selected_only': 'False', 'send_anonymous_usage_stats': 'True', 'indirect_selection': 'eager', 'no_print': 'None', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'empty': 'None', 'printer_width': '80', 'log_cache_events': 'False'}
[0m16:30:01.475693 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'ce4103b4-3553-4dc1-8760-d4945fe58fac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f615b20>]}
[0m16:30:01.554845 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'ce4103b4-3553-4dc1-8760-d4945fe58fac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ef26630>]}
[0m16:30:01.556804 [info ] [MainThread]: Registered adapter: duckdb=1.9.6
[0m16:30:01.807808 [debug] [MainThread]: checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, vars: {}, profile: , target: , version: 1.10.9
[0m16:30:01.989186 [info ] [MainThread]: Unable to do partial parsing because config vars, config profile, or config target have changed
[0m16:30:01.989734 [debug] [MainThread]: previous checksum: 6543b8b248ceda473ef0d611849d5d909085b6b714afa9b515e9635faea7af23, current checksum: 2980a21a4fc584f27f03453e4d43c980470d5de79693c5ce0bc2b462a52f088e
[0m16:30:01.990169 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'ce4103b4-3553-4dc1-8760-d4945fe58fac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ef656a0>]}
[0m16:30:03.448551 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'ce4103b4-3553-4dc1-8760-d4945fe58fac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fa60260>]}
[0m16:30:03.524248 [debug] [MainThread]: Wrote artifact WritableManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/manifest.json
[0m16:30:03.526618 [debug] [MainThread]: Wrote artifact SemanticManifest to /Users/vongly/dev/freelance/MoveUnited/usawfl/transform/usawfl/target/semantic_manifest.json
[0m16:30:03.541383 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'ce4103b4-3553-4dc1-8760-d4945fe58fac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fdef5f0>]}
[0m16:30:03.541996 [info ] [MainThread]: Found 7 models, 6 sources, 441 macros
[0m16:30:03.542429 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'ce4103b4-3553-4dc1-8760-d4945fe58fac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fd21640>]}
[0m16:30:03.543633 [info ] [MainThread]: {"name": "contacts", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/contacts.sql", "unique_id": "model.usawfl.contacts", "alias": "contacts", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.title_name", "macro.usawfl.return_numbers_from_string", "macro.usawfl.clean_punct", "macro.usawfl.format_phone_number", "macro.usawfl.clean_contact_states", "macro.usawfl.clean_to_5_digit_zip", "macro.usawfl.clean_contact_countries"], "nodes": ["source.usawfl.salesforce_raw.contacts", "model.usawfl.states"]}}
[0m16:30:03.544265 [info ] [MainThread]: {"name": "members", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/members.sql", "unique_id": "model.usawfl.members", "alias": "members", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.contacts", "model.usawfl.teams"]}}
[0m16:30:03.544851 [info ] [MainThread]: {"name": "officials", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/officials.sql", "unique_id": "model.usawfl.officials", "alias": "officials", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.officials", "source.usawfl.salesforce_raw.official_links", "model.usawfl.tournaments", "model.usawfl.contacts"]}}
[0m16:30:03.545425 [info ] [MainThread]: {"name": "states", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_references/states.sql", "unique_id": "model.usawfl.states", "alias": "states", "config": {"enabled": true, "alias": null, "schema": "fct_references", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": []}}
[0m16:30:03.546001 [info ] [MainThread]: {"name": "stats", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/stats.sql", "unique_id": "model.usawfl.stats", "alias": "stats", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.members", "model.usawfl.teams", "model.usawfl.contacts"]}}
[0m16:30:03.546578 [info ] [MainThread]: {"name": "teams", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/teams.sql", "unique_id": "model.usawfl.teams", "alias": "teams", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": [], "nodes": ["source.usawfl.salesforce_raw.teams", "model.usawfl.contacts"]}}
[0m16:30:03.547156 [info ] [MainThread]: {"name": "tournaments", "resource_type": "model", "package_name": "usawfl", "original_file_path": "models/fct_salesforce/tournaments.sql", "unique_id": "model.usawfl.tournaments", "alias": "tournaments", "config": {"enabled": true, "alias": null, "schema": "fct_salesforce", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {}, "post-hook": [{"sql": "{% if var('environment') == 'prod' %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_prod') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% else %} COPY (SELECT * FROM {{ this }}) TO '{{ var('parquet_output_dev') }}/{{ this.schema }}/{{ this.name }}/{{ this.name }}.parquet' (FORMAT PARQUET, OVERWRITE) {% endif %} ", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null}, "tags": [], "depends_on": {"macros": ["macro.usawfl.parse_tournament_date_string"], "nodes": ["source.usawfl.salesforce_raw.tournaments"]}}
[0m16:30:03.549840 [debug] [MainThread]: Resource report: {"command_name": "list", "command_success": true, "command_wall_clock_time": 2.4595196, "process_in_blocks": "0", "process_kernel_time": 0.333004, "process_mem_max_rss": "126881792", "process_out_blocks": "0", "process_user_time": 3.853239}
[0m16:30:03.550452 [debug] [MainThread]: Command `dbt ls` succeeded at 16:30:03.550326 after 2.46 seconds
[0m16:30:03.550947 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f40a150>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fd0ca10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f65e780>]}
[0m16:30:03.551535 [debug] [MainThread]: Flushing usage events
[0m16:30:03.999386 [debug] [MainThread]: An error was encountered while trying to flush usage events
